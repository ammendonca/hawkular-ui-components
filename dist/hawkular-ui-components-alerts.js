/// Copyright 2014-2015 Red Hat, Inc. and/or its affiliates
/// and other contributors as indicated by the @author tags.
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///
///   http://www.apache.org/licenses/LICENSE-2.0
///
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.


var HawkularAlerts;
(function (HawkularAlerts) {
    HawkularAlerts.pluginName = "hawkular-alerts";
    HawkularAlerts.log = Logger.get(HawkularAlerts.pluginName);
    HawkularAlerts.templatePath = "plugins/alerts/html";
})(HawkularAlerts || (HawkularAlerts = {}));

var HawkularAlerts;
(function (HawkularAlerts) {
    HawkularAlerts._module = angular.module(HawkularAlerts.pluginName, ['ui.bootstrap', 'ui.select', 'hawkular.services']);
    var tab = undefined;
    HawkularAlerts._module.config(['$locationProvider', '$routeProvider', 'HawtioNavBuilderProvider', function ($locationProvider, $routeProvider, builder) {
        tab = builder.create().id(HawkularAlerts.pluginName).title(function () { return "Alerts"; }).href(function () { return "/alerts"; }).subPath("Dashboard", "dashboard", builder.join(HawkularAlerts.templatePath, 'dashboard.html')).subPath("Definitions", "definitions", builder.join(HawkularAlerts.templatePath, 'definitions.html')).subPath("Actions", "actions", builder.join(HawkularAlerts.templatePath, 'actions.html')).build();
        builder.configureRouting($routeProvider, tab);
        $locationProvider.html5Mode(true);
    }]);
    HawkularAlerts._module.run(['HawtioNav', function (HawtioNav) {
        HawtioNav.add(tab);
    }]);
    hawtioPluginLoader.addModule(HawkularAlerts.pluginName);
})(HawkularAlerts || (HawkularAlerts = {}));

var HawkularAlerts;
(function (HawkularAlerts) {
    ;
    var ActionsController = (function () {
        function ActionsController($scope, $window, $interval, $log, HawkularAlert) {
            this.$scope = $scope;
            this.$window = $window;
            this.$interval = $interval;
            this.$log = $log;
            this.HawkularAlert = HawkularAlert;
            $scope.status = 'all';
            $scope.msgs = [];
            $scope.actions = [];
            $scope.actionsPlugins = [];
            this.allActions();
        }
        ActionsController.prototype.allActions = function () {
            var _this = this;
            this.$scope.status = 'all';
            this.$scope.actions = [];
            this.HawkularAlert.Action.query(function (actions) {
                for (var i = 0; i < actions.length; i++) {
                    _this.HawkularAlert.Action.get({ actionId: actions[i] }, function (action) {
                        _this.$scope.actions.push(action);
                    }, function (reasonAction) {
                        _this.addAlertMsg(reasonAction);
                    });
                }
            }, function (reason) {
                _this.addAlertMsg(reason);
            });
        };
        ActionsController.prototype.newAction = function () {
            var _this = this;
            this.$scope.status = 'new';
            this.$scope.action = {};
            this.$scope.actionPlugins = [];
            this.$scope.pluginProperties = [];
            this.HawkularAlert.ActionPlugin.query(function (actionPlugins) {
                for (var i = 0; i < actionPlugins.length; i++) {
                    if (i === 0) {
                        _this.$scope.action.actionPlugin = actionPlugins[0];
                        _this.HawkularAlert.ActionPlugin.get({ actionPlugin: actionPlugins[0] }, function (properties) {
                            _this.$scope.pluginProperties = properties;
                        });
                    }
                    _this.$scope.actionPlugins.push(actionPlugins[i]);
                }
            });
        };
        ActionsController.prototype.changePlugin = function () {
            var _this = this;
            this.HawkularAlert.ActionPlugin.get({ actionPlugin: this.$scope.action.actionPlugin.trim() }, function (properties) {
                _this.$scope.pluginProperties = properties;
            });
        };
        ActionsController.prototype.viewAction = function (actionId) {
            var _this = this;
            this.$scope.status = 'edit';
            this.$scope.action = {};
            this.$scope.actionPlugins = [];
            this.HawkularAlert.Action.get({ actionId: actionId }, function (action) {
                _this.$scope.action = action;
            }, function (reason) {
                _this.addAlertMsg(reason);
            });
            this.HawkularAlert.ActionPlugin.query(function (actionPlugins) {
                for (var i = 0; i < actionPlugins.length; i++) {
                    _this.$scope.actionPlugins.push(actionPlugins[i]);
                }
            });
        };
        ActionsController.prototype.saveAction = function () {
            var _this = this;
            if (this.$scope.status === 'new') {
                this.HawkularAlert.Action.save(this.$scope.action, function () {
                    _this.allActions();
                }, function (reason) {
                    _this.addAlertMsg(reason);
                });
            }
            else {
                this.HawkularAlert.Action.put({ actionId: this.$scope.action.actionId }, this.$scope.action, function () {
                    _this.allActions();
                }, function (reason) {
                    _this.addAlertMsg(reason);
                });
            }
        };
        ActionsController.prototype.deleteAction = function (actionId) {
            var _this = this;
            if (this.$window.confirm('Do you want to delete ' + actionId + ' ?')) {
                this.HawkularAlert.Action.delete({ actionId: actionId }, function () {
                    _this.allActions();
                }, function (reason) {
                    _this.addAlertMsg(reason);
                });
            }
        };
        ActionsController.prototype.addAlertMsg = function (reason) {
            var newAlert = { type: 'danger', msg: '' };
            if (reason.data.errorMsg) {
                newAlert.msg = reason.data.errorMsg;
            }
            else {
                newAlert.msg = reason.statusText;
            }
            this.$scope.msgs.push(newAlert);
        };
        ActionsController.prototype.closeAlertMsg = function (index) {
            this.$scope.msgs.splice(index, 1);
        };
        ActionsController.$inject = ['$scope', '$window', '$interval', '$log', 'HawkularAlert'];
        return ActionsController;
    })();
    HawkularAlerts.ActionsController = ActionsController;
    ;
    HawkularAlerts._module.controller('HawkularAlerts.ActionsController', ActionsController);
})(HawkularAlerts || (HawkularAlerts = {}));

var HawkularAlerts;
(function (HawkularAlerts) {
    ;
    var DashboardController = (function () {
        function DashboardController($scope, $interval, $log, HawkularAlert) {
            var _this = this;
            this.$scope = $scope;
            this.$interval = $interval;
            this.$log = $log;
            this.HawkularAlert = HawkularAlert;
            $scope.msgs = [];
            $scope.refresh = {
                interval: 2000
            };
            $scope.showRefresh = false;
            var oneHour = 1 * 60 * 60 * 1000;
            var endTime = Date.now() + oneHour;
            var startTime = endTime - (1.5 * oneHour);
            this.g = Graph.getInstance();
            this.g.init('alertsDashboard', 900, { top: 100, left: 125, bottom: 0, right: 0 }, startTime, endTime, function (series, timestamp) {
                var sanitizedSeries = series.substring(0, series.lastIndexOf('(')).trim();
                $scope.$apply(function () {
                    $scope.legend = _this.g.getEvent(sanitizedSeries, timestamp);
                });
            });
            this.getAlerts();
            this.stopInterval = $interval(function () {
                _this.getAlerts();
            }, $scope.refresh.interval);
            $scope.$on('$destroy', function () {
                _this.cancelRefresh();
            });
        }
        DashboardController.prototype.showRefreshForm = function () {
            this.$scope.showRefresh = true;
        };
        DashboardController.prototype.hideRefreshForm = function () {
            this.$scope.showRefresh = false;
        };
        DashboardController.prototype.updateRefresh = function () {
            var _this = this;
            this.$scope.showRefresh = false;
            this.cancelRefresh();
            this.stopInterval = this.$interval(function () {
                _this.getAlerts();
            }, this.$scope.refresh.interval);
        };
        DashboardController.prototype.closeAlertMsg = function (index) {
            this.$scope.msgs.splice(index, 1);
        };
        DashboardController.prototype.getAlerts = function () {
            var _this = this;
            this.HawkularAlert.Alert.query(function (alerts) {
                var alertsLength = alerts.length;
                for (var i = 0; i < alertsLength; i++) {
                    var alert = alerts[i];
                    alert.name = alert.triggerId;
                    alert.date = new Date(alert.time);
                    alert.description = alert.evalSets.toString();
                    _this.g.addEvent(alert);
                }
            }, function (reason) {
                _this.addAlertMsg(reason);
            });
        };
        DashboardController.prototype.cancelRefresh = function () {
            this.$interval.cancel(this.stopInterval);
        };
        DashboardController.prototype.addAlertMsg = function (reason) {
            var newAlert = { type: 'danger', msg: '' };
            if (reason.data && reason.data.errorMsg) {
                newAlert.msg = reason.data.errorMsg;
            }
            else {
                newAlert.msg = reason.statusText;
            }
            this.$scope.msgs.push(newAlert);
        };
        DashboardController.$inject = ['$scope', '$interval', '$log', 'HawkularAlert'];
        return DashboardController;
    })();
    HawkularAlerts.DashboardController = DashboardController;
    ;
    HawkularAlerts._module.controller('HawkularAlerts.DashboardController', DashboardController);
    var Graph = (function () {
        function Graph() {
            this._initialized = false;
            this._data = [];
            this._seriesIndexes = [];
            this._storage = [];
            if (Graph._instance) {
                throw new Error("Something error in Graph singleton initialization");
            }
            Graph._instance = this;
        }
        Graph.getInstance = function () {
            if (Graph._instance === null) {
                Graph._instance = new Graph();
            }
            return Graph._instance;
        };
        Graph.prototype.init = function (dashboardId, width, margin, startTime, endTime, hoverCallBack) {
            var _this = this;
            this._initialized = true;
            this._chartPlaceholder = document.getElementById(dashboardId);
            this._width = width;
            this._margin = margin;
            this._startTime = startTime;
            this._endTime = endTime;
            if (this._scaleDomain) {
                this._startTime = this._scaleDomain[0];
                this._endTime = this._scaleDomain[1];
            }
            this._color = d3.scale.category10();
            this._graph = d3.chart.eventDrops().start(new Date(this._startTime)).end(new Date(this._endTime)).eventColor(function (datum, index) {
                return _this._color(index);
            }).width(this._width).margin(this._margin).axisFormat(function (xAxis) {
                xAxis.ticks(5);
            }).eventHover(function (el) {
                var series = el.parentNode.firstChild.innerHTML;
                var timestamp = d3.select(el).data()[0];
                hoverCallBack(series, timestamp);
            }).eventZoom(function (scale) {
                _this._scaleDomain = scale.domain();
            });
            this._element = d3.select(this._chartPlaceholder).append('div').datum(this._data);
            this._data = this._element.datum();
            this._graph(this._element);
        };
        Graph.prototype.addEvent = function (event) {
            if (this._initialized) {
                if (this._storage[event.name] === undefined) {
                    var newSeries = [];
                    newSeries[event.date] = event;
                    this._storage[event.name] = newSeries;
                    this._seriesIndexes.push(event.name);
                    var newLine = {
                        name: event.name,
                        dates: [event.date]
                    };
                    this._data.push(newLine);
                    if (this._scaleDomain) {
                        this._graph.start(this._scaleDomain[0]);
                        this._graph.end(this._scaleDomain[1]);
                    }
                    this._graph(this._element);
                }
                else {
                    if (this._storage[event.name][event.date] === undefined) {
                        this._storage[event.name][event.date] = event;
                        var i = this._seriesIndexes.indexOf(event.name);
                        this._data[i].dates.push(event.date);
                        if (this._scaleDomain) {
                            this._graph.start(this._scaleDomain[0]);
                            this._graph.end(this._scaleDomain[1]);
                        }
                        this._graph(this._element);
                    }
                }
            }
        };
        Graph.prototype.getEvent = function (name, date) {
            if (this._initialized) {
                if (this._storage[name] !== undefined && this._storage[name][date] !== undefined) {
                    return this._storage[name][date];
                }
            }
        };
        Graph._instance = null;
        return Graph;
    })();
    HawkularAlerts.Graph = Graph;
})(HawkularAlerts || (HawkularAlerts = {}));

var HawkularAlerts;
(function (HawkularAlerts) {
    ;
    var DefinitionsController = (function () {
        function DefinitionsController($scope, $window, $log, HawkularAlert) {
            this.$scope = $scope;
            this.$window = $window;
            this.$log = $log;
            this.HawkularAlert = HawkularAlert;
            $scope.status = 'all';
            $scope.msgs = [];
            this.allDefinitions();
            this.allActions();
        }
        DefinitionsController.prototype.allDefinitions = function () {
            this.$scope.status = 'all';
            this.$scope.triggers = this.HawkularAlert.Trigger.query();
        };
        DefinitionsController.prototype.newDefinition = function () {
            this.$scope.status = 'new';
            this.$scope.trigger = {
                enabled: true,
                safetyEnabled: false,
                firingMatch: 'ALL',
                safetyMatch: 'ALL'
            };
            this.$scope.dampeningFire = { triggerMode: 'FIRE', type: 'RELAXED_COUNT', evalTrueSetting: 1, evalTotalSetting: 1, evalTimeSetting: 0 };
            this.$scope.dampeningSafety = { triggerMode: 'SAFETY', type: 'RELAXED_COUNT', evalTrueSetting: 1, evalTotalSetting: 1, evalTimeSetting: 0 };
            this.$scope.statusDampening = { status: 'new' };
            this.allActions();
        };
        DefinitionsController.prototype.saveDefinition = function () {
            var _this = this;
            this.$scope.msgs = [];
            if (this.$scope.status === 'new') {
                this.HawkularAlert.Trigger.save(this.$scope.trigger, function (trigger) {
                    _this.$scope.dampeningFire.triggerId = trigger.id;
                    _this.$scope.dampeningSafety.triggerId = trigger.id;
                    _this.HawkularAlert.Dampening.save({ triggerId: _this.$scope.dampeningFire.triggerId }, _this.$scope.dampeningFire, function (dampening) {
                        _this.HawkularAlert.Dampening.save({ triggerId: _this.$scope.dampeningSafety.triggerId }, _this.$scope.dampeningSafety, function (safety) {
                            _this.viewDefinition(dampening.triggerId);
                        }, function (reasonSafety) {
                            _this.addAlertMsg(reasonSafety);
                        });
                    }, function (reasonDampening) {
                        _this.addAlertMsg(reasonDampening);
                    });
                }, function (reason) {
                    _this.addAlertMsg(reason);
                });
            }
            if (this.$scope.status === 'edit') {
                this.HawkularAlert.Trigger.put({ triggerId: this.$scope.trigger.id }, this.$scope.trigger, function () {
                    _this.allDefinitions();
                }, function (reason) {
                    _this.addAlertMsg(reason);
                });
            }
        };
        DefinitionsController.prototype.viewDefinition = function (id) {
            var _this = this;
            this.$scope.status = 'edit';
            this.$scope.trigger = {};
            this.HawkularAlert.Trigger.get({ triggerId: id }, function (response) {
                _this.$scope.trigger = response;
            }, function (reason) {
                _this.addAlertMsg(reason);
            });
            this.allConditions(id);
            this.getDampenings(id);
        };
        DefinitionsController.prototype.deleteDefinition = function (id, name) {
            var _this = this;
            if (this.$window.confirm('Do you want to delete ' + name + ' ?')) {
                this.$scope.msgs = [];
                this.HawkularAlert.Trigger.delete({ triggerId: id }, function () {
                    _this.allDefinitions();
                }, function (reason) {
                    _this.addAlertMsg(reason);
                });
            }
        };
        DefinitionsController.prototype.closeAlertMsg = function (index) {
            this.$scope.msgs.splice(index, 1);
        };
        DefinitionsController.prototype.addAlertMsg = function (reason) {
            var newAlert = { type: 'danger', msg: '' };
            if (reason.data.errorMsg) {
                newAlert.msg = reason.data.errorMsg;
            }
            else {
                newAlert.msg = reason.statusText;
            }
            this.$scope.msgs.push(newAlert);
        };
        DefinitionsController.prototype.allActions = function () {
            var _this = this;
            this.$scope.actions = [];
            this.HawkularAlert.Action.query(function (result) {
                _this.$scope.actions = result;
            }, function (reason) {
                _this.addAlertMsg(reason);
            });
        };
        DefinitionsController.prototype.allConditions = function (triggerId) {
            var _this = this;
            this.$scope.conditions = [];
            this.$scope.statusCondition = { status: '', conditionId: '' };
            this.HawkularAlert.Condition.query({ triggerId: triggerId }, function (conditions) {
                _this.$scope.conditions = conditions;
                for (var i = 0; i < _this.$scope.conditions.length; i++) {
                    _this.$scope.conditions[i].description = _this.getDescription(_this.$scope.conditions[i].type, _this.$scope.conditions[i]);
                }
            }, function (reasonList) {
                _this.addAlertMsg(reasonList);
            });
        };
        DefinitionsController.prototype.getDampenings = function (triggerId) {
            var _this = this;
            this.$scope.dampeningFire = { triggerMode: 'FIRE', type: 'RELAXED_COUNT', evalTrueSetting: 1, evalTotalSetting: 1, evalTimeSetting: 0 };
            this.$scope.dampeningSafety = { triggerMode: 'SAFETY', type: 'RELAXED_COUNT', evalTrueSetting: 1, evalTotalSetting: 1, evalTimeSetting: 0 };
            this.$scope.statusDampening = { status: 'view' };
            this.HawkularAlert.Dampening.query({ triggerId: triggerId }, function (dampenings) {
                for (var i = 0; i < dampenings.length; i++) {
                    if (dampenings[i].triggerMode === 'FIRE') {
                        _this.$scope.dampeningFire = dampenings[i];
                    }
                    else if (dampenings[i].triggerMode === 'SAFETY') {
                        _this.$scope.dampeningSafety = dampenings[i];
                    }
                }
                if (dampenings.length < 2) {
                    _this.initDampenings(triggerId);
                }
            }, function (reason) {
                _this.addAlertMsg(reason);
            });
        };
        DefinitionsController.prototype.initDampenings = function (triggerId) {
            this.$scope.dampeningFire.triggerId = triggerId;
            this.$scope.dampeningSafety.triggerId = triggerId;
            this.HawkularAlert.Dampening.save({ triggerId: this.$scope.dampeningFire.triggerId }, this.$scope.dampeningFire);
            this.HawkularAlert.Dampening.save({ triggerId: this.$scope.dampeningSafety.triggerId }, this.$scope.dampeningSafety);
        };
        DefinitionsController.prototype.saveDampening = function () {
            var _this = this;
            this.HawkularAlert.Dampening.put({ triggerId: this.$scope.editDampening.triggerId, dampeningId: this.$scope.editDampening.dampeningId }, this.$scope.editDampening, function () {
                _this.$scope.statusDampening.status = 'view';
            }, function (reason) {
                _this.addAlertMsg(reason);
            });
        };
        DefinitionsController.prototype.viewDampening = function (dampening) {
            this.$scope.statusDampening = { status: 'edit' };
            this.$scope.editDampening = dampening;
        };
        DefinitionsController.prototype.getDescription = function (type, condition) {
            var description = "";
            var op = "";
            if (type === 'AVAILABILITY') {
                description = condition.dataId + " is " + condition.operator;
            }
            else if (type === 'COMPARE') {
                op = this.getOperator(condition.operator);
                description = condition.dataId + " " + op + " " + "(" + condition.data2Multiplier + " * " + condition.data2Id + ")";
            }
            else if (type === 'STRING') {
                description = condition.dataId + " " + condition.operator + " '" + condition.pattern + "' (A/a " + condition.ignoreCase + ")";
            }
            else if (type === 'THRESHOLD') {
                op = this.getOperator(condition.operator);
                description = condition.dataId + " " + op + " " + condition.threshold;
            }
            else if (type === 'RANGE') {
                var low = "[";
                var high = "]";
                if (condition.operatorLow !== 'INCLUSIVE') {
                    low = "(";
                }
                if (condition.operatorHigh !== 'INCLUSIVE') {
                    high = ")";
                }
                var inout = " in ";
                if (!condition.inRange) {
                    inout = " out ";
                }
                description = condition.dataId + inout + low + condition.thresholdLow + ", " + condition.thresholdHigh + high;
            }
            return description;
        };
        DefinitionsController.prototype.getOperator = function (opCode) {
            var op = "";
            if (opCode === 'GT') {
                op = ">";
            }
            else if (opCode === 'GTE') {
                op = ">=";
            }
            else if (opCode === 'LT') {
                op = "<";
            }
            else if (opCode === 'LTE') {
                op = "<=";
            }
            return op;
        };
        DefinitionsController.prototype.newCondition = function () {
            this.$scope.statusCondition = { status: 'new' };
            this.$scope.editCondition = { type: 'AVAILABILITY', triggerId: this.$scope.trigger.id };
            this.$scope.conditionTypes = ['AVAILABILITY', 'COMPARE', 'STRING', 'THRESHOLD', 'RANGE'];
            this.changeConditionType();
        };
        DefinitionsController.prototype.changeConditionType = function () {
            if (this.$scope.editCondition.type === 'AVAILABILITY') {
                this.$scope.editCondition.dataId = '';
                this.$scope.editCondition.operator = 'DOWN';
            }
            else if (this.$scope.editCondition.type === 'COMPARE') {
                this.$scope.editCondition.dataId = '';
                this.$scope.editCondition.operator = 'LT';
                this.$scope.editCondition.data2Multiplier = 1.0;
                this.$scope.editCondition.data2Id = '';
            }
            else if (this.$scope.editCondition.type === 'STRING') {
                this.$scope.editCondition.dataId = '';
                this.$scope.editCondition.operator = 'EQUAL';
                this.$scope.editCondition.pattern = '';
                this.$scope.editCondition.ignoreCase = false;
            }
            else if (this.$scope.editCondition.type === 'THRESHOLD') {
                this.$scope.editCondition.dataId = '';
                this.$scope.editCondition.operator = 'LT';
                this.$scope.editCondition.threshold = 0.0;
            }
            else if (this.$scope.editCondition.type === 'RANGE') {
                this.$scope.editCondition.dataId = '';
                this.$scope.editCondition.operatorLow = 'INCLUSIVE';
                this.$scope.editCondition.operatorHigh = 'INCLUSIVE';
                this.$scope.editCondition.thresholdLow = 0.0;
                this.$scope.editCondition.thresholdHigh = 0.0;
                this.$scope.editCondition.inRange = true;
            }
        };
        DefinitionsController.prototype.viewCondition = function (condition) {
            this.$scope.statusCondition = { status: 'edit', conditionId: condition.conditionId, type: condition.type };
            this.$scope.editCondition = condition;
        };
        DefinitionsController.prototype.saveCondition = function () {
            var _this = this;
            if (this.$scope.statusCondition.status === 'new') {
                this.HawkularAlert.Condition.save({ triggerId: this.$scope.editCondition.triggerId }, this.$scope.editCondition, function () {
                    _this.$scope.statusCondition = { status: '' };
                    _this.viewDefinition(_this.$scope.trigger.id);
                }, function (reason) {
                    _this.addAlertMsg(reason);
                });
            }
            else {
                delete this.$scope.editCondition.description;
                this.HawkularAlert.Condition.put({ triggerId: this.$scope.editCondition.triggerId, conditionId: this.$scope.editCondition.conditionId }, this.$scope.editCondition, function () {
                    _this.$scope.statusCondition = { status: '' };
                    _this.viewDefinition(_this.$scope.trigger.id);
                }, function (reason) {
                    _this.addAlertMsg(reason);
                });
            }
        };
        DefinitionsController.prototype.deleteCondition = function (conditionId, description) {
            var _this = this;
            if (this.$window.confirm('Do you want to delete ' + description + ' ?')) {
                this.$scope.msgs = [];
                this.HawkularAlert.Condition.delete({ triggerId: this.$scope.trigger.id, conditionId: conditionId }, function () {
                    _this.$scope.statusCondition = { status: '' };
                    _this.viewDefinition(_this.$scope.trigger.id);
                }, function (reasonDelete) {
                    _this.addAlertMsg(reasonDelete);
                });
            }
        };
        DefinitionsController.prototype.cancelCondition = function () {
            this.$scope.statusCondition = { status: '' };
        };
        DefinitionsController.$inject = ['$scope', '$window', '$log', 'HawkularAlert'];
        return DefinitionsController;
    })();
    HawkularAlerts.DefinitionsController = DefinitionsController;
    ;
    HawkularAlerts._module.controller('HawkularAlerts.DefinitionsController', DefinitionsController);
})(HawkularAlerts || (HawkularAlerts = {}));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluY2x1ZGVzLmpzIiwiL2hvbWUvamtyZW1zZXIvd29ya3NwYWNlL2hhd2t1bGFyL2hhd2t1bGFyLXVpLWNvbXBvbmVudHMvYWxlcnRzL3RzL2FsZXJ0c0dsb2JhbHMudHMiLCIvaG9tZS9qa3JlbXNlci93b3Jrc3BhY2UvaGF3a3VsYXIvaGF3a3VsYXItdWktY29tcG9uZW50cy9hbGVydHMvdHMvYWxlcnRzUGx1Z2luLnRzIiwiL2hvbWUvamtyZW1zZXIvd29ya3NwYWNlL2hhd2t1bGFyL2hhd2t1bGFyLXVpLWNvbXBvbmVudHMvYWxlcnRzL3RzL2FjdGlvbnMudHMiLCIvaG9tZS9qa3JlbXNlci93b3Jrc3BhY2UvaGF3a3VsYXIvaGF3a3VsYXItdWktY29tcG9uZW50cy9hbGVydHMvdHMvZGFzaGJvYXJkLnRzIiwiL2hvbWUvamtyZW1zZXIvd29ya3NwYWNlL2hhd2t1bGFyL2hhd2t1bGFyLXVpLWNvbXBvbmVudHMvYWxlcnRzL3RzL2RlZmluaXRpb25zLnRzIl0sIm5hbWVzIjpbIkhhd2t1bGFyQWxlcnRzIiwiSGF3a3VsYXJBbGVydHMuQWN0aW9uc0NvbnRyb2xsZXIiLCJIYXdrdWxhckFsZXJ0cy5BY3Rpb25zQ29udHJvbGxlci5jb25zdHJ1Y3RvciIsIkhhd2t1bGFyQWxlcnRzLkFjdGlvbnNDb250cm9sbGVyLmFsbEFjdGlvbnMiLCJIYXdrdWxhckFsZXJ0cy5BY3Rpb25zQ29udHJvbGxlci5uZXdBY3Rpb24iLCJIYXdrdWxhckFsZXJ0cy5BY3Rpb25zQ29udHJvbGxlci5jaGFuZ2VQbHVnaW4iLCJIYXdrdWxhckFsZXJ0cy5BY3Rpb25zQ29udHJvbGxlci52aWV3QWN0aW9uIiwiSGF3a3VsYXJBbGVydHMuQWN0aW9uc0NvbnRyb2xsZXIuc2F2ZUFjdGlvbiIsIkhhd2t1bGFyQWxlcnRzLkFjdGlvbnNDb250cm9sbGVyLmRlbGV0ZUFjdGlvbiIsIkhhd2t1bGFyQWxlcnRzLkFjdGlvbnNDb250cm9sbGVyLmFkZEFsZXJ0TXNnIiwiSGF3a3VsYXJBbGVydHMuQWN0aW9uc0NvbnRyb2xsZXIuY2xvc2VBbGVydE1zZyIsIkhhd2t1bGFyQWxlcnRzLkRhc2hib2FyZENvbnRyb2xsZXIiLCJIYXdrdWxhckFsZXJ0cy5EYXNoYm9hcmRDb250cm9sbGVyLmNvbnN0cnVjdG9yIiwiSGF3a3VsYXJBbGVydHMuRGFzaGJvYXJkQ29udHJvbGxlci5zaG93UmVmcmVzaEZvcm0iLCJIYXdrdWxhckFsZXJ0cy5EYXNoYm9hcmRDb250cm9sbGVyLmhpZGVSZWZyZXNoRm9ybSIsIkhhd2t1bGFyQWxlcnRzLkRhc2hib2FyZENvbnRyb2xsZXIudXBkYXRlUmVmcmVzaCIsIkhhd2t1bGFyQWxlcnRzLkRhc2hib2FyZENvbnRyb2xsZXIuY2xvc2VBbGVydE1zZyIsIkhhd2t1bGFyQWxlcnRzLkRhc2hib2FyZENvbnRyb2xsZXIuZ2V0QWxlcnRzIiwiSGF3a3VsYXJBbGVydHMuRGFzaGJvYXJkQ29udHJvbGxlci5jYW5jZWxSZWZyZXNoIiwiSGF3a3VsYXJBbGVydHMuRGFzaGJvYXJkQ29udHJvbGxlci5hZGRBbGVydE1zZyIsIkhhd2t1bGFyQWxlcnRzLkdyYXBoIiwiSGF3a3VsYXJBbGVydHMuR3JhcGguY29uc3RydWN0b3IiLCJIYXdrdWxhckFsZXJ0cy5HcmFwaC5nZXRJbnN0YW5jZSIsIkhhd2t1bGFyQWxlcnRzLkdyYXBoLmluaXQiLCJIYXdrdWxhckFsZXJ0cy5HcmFwaC5hZGRFdmVudCIsIkhhd2t1bGFyQWxlcnRzLkdyYXBoLmdldEV2ZW50IiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLmNvbnN0cnVjdG9yIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLmFsbERlZmluaXRpb25zIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLm5ld0RlZmluaXRpb24iLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIuc2F2ZURlZmluaXRpb24iLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIudmlld0RlZmluaXRpb24iLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIuZGVsZXRlRGVmaW5pdGlvbiIsIkhhd2t1bGFyQWxlcnRzLkRlZmluaXRpb25zQ29udHJvbGxlci5jbG9zZUFsZXJ0TXNnIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLmFkZEFsZXJ0TXNnIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLmFsbEFjdGlvbnMiLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIuYWxsQ29uZGl0aW9ucyIsIkhhd2t1bGFyQWxlcnRzLkRlZmluaXRpb25zQ29udHJvbGxlci5nZXREYW1wZW5pbmdzIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLmluaXREYW1wZW5pbmdzIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLnNhdmVEYW1wZW5pbmciLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIudmlld0RhbXBlbmluZyIsIkhhd2t1bGFyQWxlcnRzLkRlZmluaXRpb25zQ29udHJvbGxlci5nZXREZXNjcmlwdGlvbiIsIkhhd2t1bGFyQWxlcnRzLkRlZmluaXRpb25zQ29udHJvbGxlci5nZXRPcGVyYXRvciIsIkhhd2t1bGFyQWxlcnRzLkRlZmluaXRpb25zQ29udHJvbGxlci5uZXdDb25kaXRpb24iLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIuY2hhbmdlQ29uZGl0aW9uVHlwZSIsIkhhd2t1bGFyQWxlcnRzLkRlZmluaXRpb25zQ29udHJvbGxlci52aWV3Q29uZGl0aW9uIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLnNhdmVDb25kaXRpb24iLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIuZGVsZXRlQ29uZGl0aW9uIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLmNhbmNlbENvbmRpdGlvbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQ2VBLElBQU8sY0FBYyxDQVFwQjtBQVJELFdBQU8sY0FBYyxFQUFDLENBQUM7SUFFVkEseUJBQVVBLEdBQUdBLGlCQUFpQkEsQ0FBQ0E7SUFFL0JBLGtCQUFHQSxHQUFrQkEsTUFBTUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EseUJBQVVBLENBQUNBLENBQUNBO0lBRTVDQSwyQkFBWUEsR0FBR0EscUJBQXFCQSxDQUFDQTtBQUVsREEsQ0FBQ0EsRUFSTSxjQUFjLEtBQWQsY0FBYyxRQVFwQjs7QUNQRCxJQUFPLGNBQWMsQ0F5QnBCO0FBekJELFdBQU8sY0FBYyxFQUFDLENBQUM7SUFFVkEsc0JBQU9BLEdBQUdBLE9BQU9BLENBQUNBLE1BQU1BLENBQUNBLGNBQWNBLENBQUNBLFVBQVVBLEVBQUVBLENBQUNBLGNBQWNBLEVBQUVBLFdBQVdBLEVBQUVBLG1CQUFtQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFFbkhBLElBQUlBLEdBQUdBLEdBQU9BLFNBQVNBLENBQUNBO0lBRXhCQSxzQkFBT0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0EsbUJBQW1CQSxFQUFFQSxnQkFBZ0JBLEVBQUVBLDBCQUEwQkEsRUFBRUEsVUFBQ0EsaUJBQWlCQSxFQUFFQSxjQUFzQ0EsRUFBRUEsT0FBb0NBO1FBQ2pMQSxHQUFHQSxHQUFHQSxPQUFPQSxDQUFDQSxNQUFNQSxFQUFFQSxDQUNuQkEsRUFBRUEsQ0FBQ0EsY0FBY0EsQ0FBQ0EsVUFBVUEsQ0FBQ0EsQ0FDN0JBLEtBQUtBLENBQUNBLGNBQU1BLGVBQVFBLEVBQVJBLENBQVFBLENBQUNBLENBQ3JCQSxJQUFJQSxDQUFDQSxjQUFNQSxnQkFBU0EsRUFBVEEsQ0FBU0EsQ0FBQ0EsQ0FDckJBLE9BQU9BLENBQUNBLFdBQVdBLEVBQUVBLFdBQVdBLEVBQUVBLE9BQU9BLENBQUNBLElBQUlBLENBQUNBLGNB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LFlBQVlBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO2dCQUN2Q0EsSUFBSUEsQ0FBQ0EsUUFBUUEsR0FBR0EsSUFBSUEsQ0FBQ0EsWUFBWUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDekNBLENBQUNBO1lBRURBLElBQUlBLENBQUNBLE1BQU1BLEdBQUdBLEVBQUVBLENBQUNBLEtBQUtBLENBQUNBLFVBQVVBLEVBQUVBLENBQUNBO1lBQ3BDQSxJQUFJQSxDQUFDQSxNQUFNQSxHQUFHQSxFQUFFQSxDQUFDQSxLQUFLQSxDQUFDQSxVQUFVQSxFQUFFQSxDQUM5QkEsS0FBS0EsQ0FBQ0EsSUFBSUEsSUFBSUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsVUFBVUEsQ0FBQ0EsQ0FBQ0EsQ0FDaENBLEdBQUdBLENBQUNBLElBQUlBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLENBQUNBLENBQzVCQSxVQUFVQSxDQUFDQSxVQUFDQSxLQUFLQSxFQUFFQSxLQUFLQTtnQkFDckJBLE1BQU1BLENBQUNBLEtBQUlBLENBQUNBLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBLENBQUNBO1lBQzlCQSxDQUFDQSxDQUFDQSxDQUNEQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUNsQkEsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FDcEJBLFVBQVVBLENBQUNBLFVBQUNBLEtBQUtBO2dCQUNkQSxLQUFLQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNuQkEsQ0FBQ0EsQ0FBQ0EsQ0FDREEsVUFBVUEsQ0FBQ0EsVUFBQ0EsRUFBRUE7Z0JBQ1hBLElBQUlBLE1BQU1BLEdBQUdBLEVBQUVBLENBQUNBLFVBQVVBLENBQUNBLFVBQVVBLENBQUNBLFNBQVNBLENBQUNBO2dCQUNoREEsSUFBSUEsU0FBU0EsR0FBR0EsRUFBRUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBRXhDQSxhQUFhQSxDQUFDQSxNQUFNQSxFQUFFQSxTQUFTQSxDQUFDQSxDQUFDQTtZQUVyQ0EsQ0FBQ0EsQ0FBQ0EsQ0FDREEsU0FBU0EsQ0FBQ0EsVUFBQ0EsS0FBS0E7Z0JBQ2JBLEtBQUlBLENBQUNBLFlBQVlBLEdBQUdBLEtBQUtBLENBQUNBLE1BQU1BLEVBQUVBLENBQUNBO1lBQ3ZDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUVQQSxJQUFJQSxDQUFDQSxRQUFRQSxHQUFHQSxFQUFFQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxpQkFBaUJBLENBQUNBLENBQUNBLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBLENBQUNBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLENBQUNBO1lBQ2xGQSxJQUFJQSxDQUFDQSxLQUFLQSxHQUFHQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxLQUFLQSxFQUFFQSxDQUFDQTtZQUNuQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0E7UUFDL0JBLENBQUNBO1FBRU1ILHdCQUFRQSxHQUFmQSxVQUFnQkEsS0FBVUE7WUFDdEJJLEVBQUVBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLFlBQVlBLENBQUNBLENBQUNBLENBQUNBO2dCQUNwQkEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsS0FBS0EsU0FBU0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7b0JBRTFDQSxJQUFJQSxTQUFTQSxHQUFHQSxFQUFFQSxDQUFDQTtvQkFDbkJBLFNBQVNBLENBQUNBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLEdBQUdBLEtBQUtBLENBQUNBO29CQUM5QkEsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsR0FBR0EsU0FBU0EsQ0FBQ0E7b0JBR3RDQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtvQkFDckNBLElBQUlBLE9BQU9BLEdBQUdBO3dCQUNWQSxJQUFJQSxFQUFFQSxLQUFLQSxDQUFDQSxJQUFJQTt3QkFDaEJBLEtBQUtBLEVBQUVBLENBQUVBLEtBQUtBLENBQUNBLElBQUlBLENBQUVBO3FCQUN4QkEsQ0FBQ0E7b0JBQ0ZBLElBQUlBLENBQUVBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLENBQUNBO29CQUcxQkEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsWUFBWUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7d0JBQ3BCQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxZQUFZQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTt3QkFDeENBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLEdBQUdBLENBQUNBLElBQUlBLENBQUNBLFlBQVlBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO29CQUMxQ0EsQ0FBQ0E7b0JBQ0RBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLENBQUNBO2dCQUMvQkEsQ0FBQ0E7Z0JBQUNBLElBQUlBLENBQUNBLENBQUNBO29CQUNKQSxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxTQUFTQSxDQUFDQSxDQUFDQSxDQUFDQTt3QkFFdERBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLENBQUNBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLEdBQUdBLEtBQUtBLENBQUNBO3dCQUc5Q0EsSUFBSUEsQ0FBQ0EsR0FBR0EsSUFBSUEsQ0FBQ0EsY0FBY0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsS0FBS0EsQ0FBQ0Es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RUFBRUEsRUFBRUEsRUFBQ0EsQ0FBQ0E7UUFDL0NBLENBQUNBO1FBaFZjdEIsNkJBQU9BLEdBQUdBLENBQUNBLFFBQVFBLEVBQUVBLFNBQVNBLEVBQUVBLE1BQU1BLEVBQUVBLGVBQWVBLENBQUNBLENBQUNBO1FBa1Y1RUEsNEJBQUNBO0lBQURBLENBblZBMUIsQUFtVkMwQixJQUFBMUI7SUFuVllBLG9DQUFxQkEsR0FBckJBLHFCQW1WWkEsQ0FBQUE7SUFBQUEsQ0FBQ0E7SUFFRkEsc0JBQU9BLENBQUNBLFVBQVVBLENBQUNBLHNDQUFzQ0EsRUFBRUEscUJBQXFCQSxDQUFDQSxDQUFDQTtBQUN0RkEsQ0FBQ0EsRUF4V00sY0FBYyxLQUFkLGNBQWMsUUF3V3BCIiwiZmlsZSI6ImNvbXBpbGVkLmpzIiwic291cmNlc0NvbnRlbnQiOltudWxsLCIvLy8gQ29weXJpZ2h0IDIwMTQtMjAxNSBSZWQgSGF0LCBJbmMuIGFuZC9vciBpdHMgYWZmaWxpYXRlc1xuLy8vIGFuZCBvdGhlciBjb250cmlidXRvcnMgYXMgaW5kaWNhdGVkIGJ5IHRoZSBAYXV0aG9yIHRhZ3MuXG4vLy9cbi8vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vL1xuLy8vICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vLy9cbi8vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uLy4uL2luY2x1ZGVzLnRzXCIvPlxubW9kdWxlIEhhd2t1bGFyQWxlcnRzIHtcblxuICBleHBvcnQgdmFyIHBsdWdpbk5hbWUgPSBcImhhd2t1bGFyLWFsZXJ0c1wiO1xuXG4gIGV4cG9ydCB2YXIgbG9nOkxvZ2dpbmcuTG9nZ2VyID0gTG9nZ2VyLmdldChwbHVnaW5OYW1lKTtcblxuICBleHBvcnQgdmFyIHRlbXBsYXRlUGF0aCA9IFwicGx1Z2lucy9hbGVydHMvaHRtbFwiO1xuICBcbn1cbiIsIi8vLyBDb3B5cmlnaHQgMjAxNC0yMDE1IFJlZCBIYXQsIEluYy4gYW5kL29yIGl0cyBhZmZpbGlhdGVzXG4vLy8gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycyBhcyBpbmRpY2F0ZWQgYnkgdGhlIEBhdXRob3IgdGFncy5cbi8vL1xuLy8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy8vXG4vLy8gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vL1xuLy8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vLi4vaW5jbHVkZXMudHNcIi8+XG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiYWxlcnRzR2xvYmFscy50c1wiLz5cbm1vZHVsZSBIYXdrdWxhckFsZXJ0cyB7XG5cbiAgZXhwb3J0IHZhciBfbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoSGF3a3VsYXJBbGVydHMucGx1Z2luTmFtZSwgWyd1aS5ib290c3RyYXAnLCAndWkuc2VsZWN0JywgJ2hhd2t1bGFyLnNlcnZpY2VzJ10pO1xuXG4gIHZhciB0YWI6YW55ID0gdW5kZWZpbmVkO1xuXG4gIF9tb2R1bGUuY29uZmlnKFsnJGxvY2F0aW9uUHJvdmlkZXInLCAnJHJvdXRlUHJvdmlkZXInLCAnSGF3dGlvTmF2QnVpbGRlclByb3ZpZGVyJywgKCRsb2NhdGlvblByb3ZpZGVyLCAkcm91dGVQcm92aWRlcjpuZy5yb3V0ZS5JUm91dGVQcm92aWRlciwgYnVpbGRlcjpIYXd0aW9NYWluTmF2LkJ1aWxkZXJGYWN0b3J5KSA9PiB7XG4gICAgdGFiID0gYnVpbGRlci5jcmVhdGUoKVxuICAgICAgLmlkKEhhd2t1bGFyQWxlcnRzLnBsdWdpbk5hbWUpXG4gICAgICAudGl0bGUoKCkgPT4gXCJBbGVydHNcIilcbiAgICAgIC5ocmVmKCgpID0+IFwiL2FsZXJ0c1wiKVxuICAgICAgLnN1YlBhdGgoXCJEYXNoYm9hcmRcIiwgXCJkYXNoYm9hcmRcIiwgYnVpbGRlci5qb2luKEhhd2t1bGFyQWxlcnRzLnRlbXBsYXRlUGF0aCwgJ2Rhc2hib2FyZC5odG1sJykpXG4gICAgICAuc3ViUGF0aChcIkRlZmluaXRpb25zXCIsIFwiZGVmaW5pdGlvbnNcIiwgYnVpbGRlci5qb2luKEhhd2t1bGFyQWxlcnRzLnRlbXBsYXRlUGF0aCwgJ2RlZmluaXRpb25zLmh0bWwnKSlcbiAgICAgIC5zdWJQYXRoKFwiQWN0aW9uc1wiLCBcImFjdGlvbnNcIiwgYnVpbGRlci5qb2luKEhhd2t1bGFyQWxlcnRzLnRlbXBsYXRlUGF0aCwgJ2FjdGlvbnMuaHRtbCcpKVxuICAgICAgLmJ1aWxkKCk7XG4gICAgYnVpbGRlci5jb25maWd1cmVSb3V0aW5nKCRyb3V0ZVByb3ZpZGVyLCB0YWIpO1xuXG4gICAgJGxvY2F0aW9uUHJvdmlkZXIuaHRtbDVNb2RlKHRydWUpO1xuICB9XSk7XG5cbiAgX21vZHVsZS5ydW4oWydIYXd0aW9OYXYnLCAoSGF3dGlvTmF2Okhhd3Rpb01haW5OYXYuUmVnaXN0cnkpID0+IHtcbiAgICBIYXd0aW9OYXYuYWRkKHRhYik7XG4gIH1dKTtcblxuICBoYXd0aW9QbHVnaW5Mb2FkZXIuYWRkTW9kdWxlKEhhd2t1bGFyQWxlcnRzLnBsdWdpbk5hbWUpO1xufVxuIiwiLy8vIENvcHlyaWdodCAyMDE0LTIwMTUgUmVkIEhhdCwgSW5jLiBhbmQvb3IgaXRzIGFmZmlsaWF0ZXNcbi8vLyBhbmQgb3RoZXIgY29udHJpYnV0b3JzIGFzIGluZGljYXRlZCBieSB0aGUgQGF1dGhvciB0YWdzLlxuLy8vXG4vLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vLy9cbi8vLyAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy8vXG4vLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbi8vLyA8cmVmZXJlbmNlIHBhdGg9XCJhbGVydHNQbHVnaW4udHNcIi8+XG5tb2R1bGUgSGF3a3VsYXJBbGVydHMge1xuXG4gICAgZXhwb3J0IGludGVyZmFjZSBJQWN0aW9uc0NvbnRyb2xsZXIge1xuICAgICAgICBhbGxBY3Rpb25zKCk6IHZvaWQ7XG4gICAgICAgIG5ld0FjdGlvbigpOiB2b2lkO1xuICAgICAgICB2aWV3QWN0aW9uKGFjdGlvbklkOiBzdHJpbmcpOnZvaWQ7XG4gICAgICAgIHNhdmVBY3Rpb24oKTp2b2lkO1xuICAgICAgICBkZWxldGVBY3Rpb24oYWN0aW9uSWQ6IHN0cmluZyk6dm9pZDtcbiAgICAgICAgY2xvc2VBbGVydE1zZyhpbmRleDogbnVtYmVyKTp2b2lkO1xuICAgICAgICBjaGFuZ2VQbHVnaW4oKTp2b2lkO1xuICAgIH07XG5cbiAgICBleHBvcnQgY2xhc3MgQWN0aW9uc0NvbnRyb2xsZXIgaW1wbGVtZW50cyBJQWN0aW9uc0NvbnRyb2xsZXIge1xuICAgICAgICBwdWJsaWMgc3RhdGljICAkaW5qZWN0ID0gWyckc2NvcGUnLCAnJHdpbmRvdycsICckaW50ZXJ2YWwnLCAnJGxvZycsICdIYXdrdWxhckFsZXJ0J107XG5cbiAgICAgICAgY29uc3RydWN0b3IocHJpdmF0ZSAkc2NvcGU6YW55LFxuICAgICAgICAgICAgICAgICAgICBwcml2YXRlICR3aW5kb3c6YW55LFxuICAgICAgICAgICAgICAgICAgICBwcml2YXRlICRpbnRlcnZhbDpuZy5JSW50ZXJ2YWxTZXJ2aWNlLFxuICAgICAgICAgICAgICAgICAgICBwcml2YXRlICRsb2c6bmcuSUxvZ1NlcnZpY2UsXG4gICAgICAgICAgICAgICAgICAgIHByaXZhdGUgSGF3a3VsYXJBbGVydDphbnkpIHtcblxuICAgICAgICAgICAgJHNjb3BlLnN0YXR1cyA9ICdhbGwnO1xuICAgICAgICAgICAgJHNjb3BlLm1zZ3MgPSBbXTtcbiAgICAgICAgICAgICRzY29wZS5hY3Rpb25zID0gW107XG4gICAgICAgICAgICAkc2NvcGUuYWN0aW9uc1BsdWdpbnMgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuYWxsQWN0aW9ucygpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIGFsbEFjdGlvbnMoKTogdm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zdGF0dXMgPSAnYWxsJztcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLmFjdGlvbnMgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5BY3Rpb24ucXVlcnkoXG4gICAgICAgICAgICAgICAgKGFjdGlvbnMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhY3Rpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuQWN0aW9uLmdldCh7YWN0aW9uSWQ6IGFjdGlvbnNbaV19LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChhY3Rpb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuYWN0aW9ucy5wdXNoKGFjdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgKHJlYXNvbkFjdGlvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEFsZXJ0TXNnKHJlYXNvbkFjdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LCAocmVhc29uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBuZXdBY3Rpb24oKTp2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLnN0YXR1cyA9ICduZXcnO1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUuYWN0aW9uID0ge307XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5hY3Rpb25QbHVnaW5zID0gW107XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5wbHVnaW5Qcm9wZXJ0aWVzID0gW107XG4gICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuQWN0aW9uUGx1Z2luLnF1ZXJ5KFxuICAgICAgICAgICAgICAgIChhY3Rpb25QbHVnaW5zKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWN0aW9uUGx1Z2lucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGkgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5hY3Rpb24uYWN0aW9uUGx1Z2luID0gYWN0aW9uUGx1Z2luc1swXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuQWN0aW9uUGx1Z2luLmdldCh7YWN0aW9uUGx1Z2luOiBhY3Rpb25QbHVnaW5zWzBdfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChwcm9wZXJ0aWVzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLnBsdWdpblByb3BlcnRpZXMgPSBwcm9wZXJ0aWVzO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5hY3Rpb25QbHVnaW5zLnB1c2goYWN0aW9uUGx1Z2luc1tpXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIGNoYW5nZVBsdWdpbigpOnZvaWQge1xuICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5BY3Rpb25QbHVnaW4uZ2V0KHthY3Rpb25QbHVnaW46IHRoaXMuJHNjb3BlLmFjdGlvbi5hY3Rpb25QbHVnaW4udHJpbSgpfSxcbiAgICAgICAgICAgIChwcm9wZXJ0aWVzKSA9PiB7XG4gICAgICAgICAgICAgIHRoaXMuJHNjb3BlLnBsdWdpblByb3BlcnRpZXMgPSBwcm9wZXJ0aWVzO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgdmlld0FjdGlvbihhY3Rpb25JZDogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zdGF0dXMgPSAnZWRpdCc7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5hY3Rpb24gPSB7fTtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLmFjdGlvblBsdWdpbnMgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5BY3Rpb24uZ2V0KHthY3Rpb25JZDogYWN0aW9uSWR9LFxuICAgICAgICAgICAgICAgIChhY3Rpb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuYWN0aW9uID0gYWN0aW9uO1xuICAgICAgICAgICAgICAgIH0sIChyZWFzb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb24pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0LkFjdGlvblBsdWdpbi5xdWVyeShcbiAgICAgICAgICAgICAgICAoYWN0aW9uUGx1Z2lucykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFjdGlvblBsdWdpbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmFjdGlvblBsdWdpbnMucHVzaChhY3Rpb25QbHVnaW5zW2ldKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBzYXZlQWN0aW9uKCk6dm9pZCB7XG4gICAgICAgICAgICBpZiAodGhpcy4kc2NvcGUuc3RhdHVzID09PSAnbmV3Jykge1xuICAgICAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5BY3Rpb24uc2F2ZSh0aGlzLiRzY29wZS5hY3Rpb24sXG4gICAgICAgICAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWxsQWN0aW9ucygpO1xuICAgICAgICAgICAgICAgICAgICB9LCAocmVhc29uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEFsZXJ0TXNnKHJlYXNvbik7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuQWN0aW9uLnB1dCh7YWN0aW9uSWQ6IHRoaXMuJHNjb3BlLmFjdGlvbi5hY3Rpb25JZH0sIHRoaXMuJHNjb3BlLmFjdGlvbixcbiAgICAgICAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hbGxBY3Rpb25zKCk7XG4gICAgICAgICAgICAgICAgICAgIH0sIChyZWFzb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgZGVsZXRlQWN0aW9uKGFjdGlvbklkOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgICBpZiAodGhpcy4kd2luZG93LmNvbmZpcm0oJ0RvIHlvdSB3YW50IHRvIGRlbGV0ZSAnICsgYWN0aW9uSWQgKyAnID8nKSkge1xuICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0LkFjdGlvbi5kZWxldGUoe2FjdGlvbklkOiBhY3Rpb25JZH0sXG4gICAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmFsbEFjdGlvbnMoKTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgKHJlYXNvbikgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uKTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBhZGRBbGVydE1zZyhyZWFzb246IGFueSk6dm9pZCB7XG4gICAgICAgICAgICB2YXIgbmV3QWxlcnQgPSB7dHlwZTogJ2RhbmdlcicsIG1zZzogJyd9O1xuICAgICAgICAgICAgaWYgKHJlYXNvbi5kYXRhLmVycm9yTXNnKSB7XG4gICAgICAgICAgICAgICAgbmV3QWxlcnQubXNnID0gcmVhc29uLmRhdGEuZXJyb3JNc2c7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld0FsZXJ0Lm1zZyA9IHJlYXNvbi5zdGF0dXNUZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy4kc2NvcGUubXNncy5wdXNoKG5ld0FsZXJ0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBjbG9zZUFsZXJ0TXNnKGluZGV4OiBudW1iZXIpOnZvaWQge1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUubXNncy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9XG5cbiAgICB9O1xuXG4gICAgX21vZHVsZS5jb250cm9sbGVyKCdIYXdrdWxhckFsZXJ0cy5BY3Rpb25zQ29udHJvbGxlcicsIEFjdGlvbnNDb250cm9sbGVyKTtcbn1cbiIsIi8vLyBDb3B5cmlnaHQgMjAxNC0yMDE1IFJlZCBIYXQsIEluYy4gYW5kL29yIGl0cyBhZmZpbGlhdGVzXG4vLy8gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycyBhcyBpbmRpY2F0ZWQgYnkgdGhlIEBhdXRob3IgdGFncy5cbi8vL1xuLy8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy8vXG4vLy8gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vL1xuLy8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiYWxlcnRzUGx1Z2luLnRzXCIvPlxubW9kdWxlIEhhd2t1bGFyQWxlcnRzIHtcblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgSURhc2hib2FyZENvbnRyb2xsZXIge1xuICAgICAgICBzaG93UmVmcmVzaEZvcm0oKTogdm9pZDtcbiAgICAgICAgaGlkZVJlZnJlc2hGb3JtKCk6IHZvaWQ7XG4gICAgICAgIHVwZGF0ZVJlZnJlc2goKTogdm9pZDtcbiAgICB9O1xuXG4gICAgZXhwb3J0IGNsYXNzIERhc2hib2FyZENvbnRyb2xsZXIgaW1wbGVtZW50cyBJRGFzaGJvYXJkQ29udHJvbGxlciB7XG4gICAgICAgIHB1YmxpYyBzdGF0aWMgICRpbmplY3QgPSBbJyRzY29wZScsICckaW50ZXJ2YWwnLCAnJGxvZycsICdIYXdrdWxhckFsZXJ0J107XG5cbiAgICAgICAgcHJpdmF0ZSBzdG9wSW50ZXJ2YWw6IGFueTtcbiAgICAgICAgcHJpdmF0ZSBnOiBHcmFwaDtcblxuICAgICAgICBjb25zdHJ1Y3Rvcihwcml2YXRlICRzY29wZTphbnksXG4gICAgICAgICAgICAgICAgICAgIHByaXZhdGUgJGludGVydmFsOm5nLklJbnRlcnZhbFNlcnZpY2UsXG4gICAgICAgICAgICAgICAgICAgIHByaXZhdGUgJGxvZzpuZy5JTG9nU2VydmljZSxcbiAgICAgICAgICAgICAgICAgICAgcHJpdmF0ZSBIYXdrdWxhckFsZXJ0OmFueSkge1xuXG4gICAgICAgICAgICAkc2NvcGUubXNncyA9IFtdO1xuICAgICAgICAgICAgJHNjb3BlLnJlZnJlc2ggPSB7XG4gICAgICAgICAgICAgICAgaW50ZXJ2YWw6IDIwMDBcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICAkc2NvcGUuc2hvd1JlZnJlc2ggPSBmYWxzZTtcblxuICAgICAgICAgICAgdmFyIG9uZUhvdXIgPSAxICogNjAgKiA2MCAqIDEwMDA7XG4gICAgICAgICAgICB2YXIgZW5kVGltZSA9IERhdGUubm93KCkgKyBvbmVIb3VyO1xuICAgICAgICAgICAgdmFyIHN0YXJ0VGltZSA9IGVuZFRpbWUgLSAoMS41ICogb25lSG91cik7XG5cbiAgICAgICAgICAgIHRoaXMuZyA9IEdyYXBoLmdldEluc3RhbmNlKCk7XG5cbiAgICAgICAgICAgIHRoaXMuZy5pbml0KCdhbGVydHNEYXNoYm9hcmQnLFxuICAgICAgICAgICAgICAgIDkwMCxcbiAgICAgICAgICAgICAgICB7IHRvcDogMTAwLCBsZWZ0OiAxMjUsIGJvdHRvbTogMCwgcmlnaHQ6IDAgfSxcbiAgICAgICAgICAgICAgICBzdGFydFRpbWUsXG4gICAgICAgICAgICAgICAgZW5kVGltZSxcbiAgICAgICAgICAgICAgICAoc2VyaWVzLCB0aW1lc3RhbXApID0+IHtcbiAgICAgICAgICAgICAgICAgICAgLypcbiAgICAgICAgICAgICAgICAgICAgIFwic2VyaWVzXCIgdmFyIHdpbGwgc3RvcmUgd2hvbGUgdGV4dCB3aXRoICg8bnVtYmVyPikgY291bnRlciByZXByZXNlbnRhdGlvblxuICAgICAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICAgICAgdmFyIHNhbml0aXplZFNlcmllcyA9IHNlcmllcy5zdWJzdHJpbmcoMCwgc2VyaWVzLmxhc3RJbmRleE9mKCcoJykpLnRyaW0oKTtcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLiRhcHBseSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUubGVnZW5kID0gdGhpcy5nLmdldEV2ZW50KHNhbml0aXplZFNlcmllcywgdGltZXN0YW1wKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgdGhpcy5nZXRBbGVydHMoKTtcblxuICAgICAgICAgICAgdGhpcy5zdG9wSW50ZXJ2YWwgPSAkaW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2V0QWxlcnRzKCk7XG4gICAgICAgICAgICB9LCAkc2NvcGUucmVmcmVzaC5pbnRlcnZhbCk7XG5cbiAgICAgICAgICAgICRzY29wZS4kb24oJyRkZXN0cm95JywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY2FuY2VsUmVmcmVzaCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBzaG93UmVmcmVzaEZvcm0oKTogdm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zaG93UmVmcmVzaCA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBoaWRlUmVmcmVzaEZvcm0oKTogdm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zaG93UmVmcmVzaCA9IGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgdXBkYXRlUmVmcmVzaCgpOiB2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLnNob3dSZWZyZXNoID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLmNhbmNlbFJlZnJlc2goKTtcbiAgICAgICAgICAgIHRoaXMuc3RvcEludGVydmFsID0gdGhpcy4kaW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2V0QWxlcnRzKCk7XG4gICAgICAgICAgICB9LCB0aGlzLiRzY29wZS5yZWZyZXNoLmludGVydmFsKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNsb3NlQWxlcnRNc2coaW5kZXg6IG51bWJlcik6dm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5tc2dzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGdldEFsZXJ0cygpOiB2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5BbGVydC5xdWVyeShcbiAgICAgICAgICAgICAgICAoYWxlcnRzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBhbGVydHNMZW5ndGggPSBhbGVydHMubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFsZXJ0c0xlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYWxlcnQgPSBhbGVydHNbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydC5uYW1lID0gYWxlcnQudHJpZ2dlcklkO1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQuZGF0ZSA9IG5ldyBEYXRlKGFsZXJ0LnRpbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gQ3JlYXRlIGEgZGVzY3JpcHRpb25cbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0LmRlc2NyaXB0aW9uID0gYWxlcnQuZXZhbFNldHMudG9TdHJpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZy5hZGRFdmVudChhbGVydCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LCAocmVhc29uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBjYW5jZWxSZWZyZXNoKCk6IHZvaWQge1xuICAgICAgICAgICAgdGhpcy4kaW50ZXJ2YWwuY2FuY2VsKHRoaXMuc3RvcEludGVydmFsKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgYWRkQWxlcnRNc2cocmVhc29uOiBhbnkpOnZvaWQge1xuICAgICAgICAgICAgdmFyIG5ld0FsZXJ0ID0ge3R5cGU6ICdkYW5nZXInLCBtc2c6ICcnfTtcbiAgICAgICAgICAgIGlmIChyZWFzb24uZGF0YSAmJiByZWFzb24uZGF0YS5lcnJvck1zZykge1xuICAgICAgICAgICAgICAgIG5ld0FsZXJ0Lm1zZyA9IHJlYXNvbi5kYXRhLmVycm9yTXNnO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBuZXdBbGVydC5tc2cgPSByZWFzb24uc3RhdHVzVGV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLm1zZ3MucHVzaChuZXdBbGVydCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgX21vZHVsZS5jb250cm9sbGVyKCdIYXdrdWxhckFsZXJ0cy5EYXNoYm9hcmRDb250cm9sbGVyJywgRGFzaGJvYXJkQ29udHJvbGxlcik7XG5cbiAgICBleHBvcnQgY2xhc3MgR3JhcGgge1xuXG4gICAgICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTpHcmFwaCA9IG51bGw7XG5cbiAgICAgICAgcHJpdmF0ZSBfaW5pdGlhbGl6ZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICAgICAgcHJpdmF0ZSBfY2hhcnRQbGFjZWhvbGRlcjogYW55O1xuICAgICAgICBwcml2YXRlIF93aWR0aDogbnVtYmVyO1xuICAgICAgICBwcml2YXRlIF9tYXJnaW46IGFueTtcbiAgICAgICAgcHJpdmF0ZSBfc3RhcnRUaW1lOiBudW1iZXI7XG4gICAgICAgIHByaXZhdGUgX2VuZFRpbWU6IG51bWJlcjtcbiAgICAgICAgcHJpdmF0ZSBfY29sb3I7XG5cbiAgICAgICAgLypcbiAgICAgICAgICAgICBHbG9iYWwgZGF0YSBvZiB0aGUgZ3JhcGg6XG4gICAgICAgICAgICAgLSBJdCBpcyBhIGxpc3Qgb2YgYXJyYXlzLlxuICAgICAgICAgICAgIC0gRWFjaCBhcnJheSBoYXM6XG4gICAgICAgICAgICAgYSkgZmlyc3QgZWxlbWVudDogYSB0ZXh0IGNvbnRhaW5pbmcgbmFtZSBvZiB0aGUgc2VyaWVzLlxuICAgICAgICAgICAgIGIpIG90aGVyIGVsZW1lbnRzOiBkYXRlIG9iamVjdHMgcmVwcmVzZW50aW5nIGV2ZW50cy5cbiAgICAgICAgICAgICAtIFRoaXMgYXJyYXkgaXMgcGFzc2VkIHRvIGQzIG9iamVjdCBhcyBpbnB1dCBmb3IgcmF3IGRhdGEuXG4gICAgICAgICAqL1xuICAgICAgICBwcml2YXRlIF9kYXRhID0gW107XG5cbiAgICAgICAgLypcbiAgICAgICAgICAgICBBdXggYXNzb2NpYXRpdmUgYXJyYXkgdG8gbWFwIGEgbmFtZSBvZiBzZXJpZXMgd2l0aCB0aGUgaW5kZXggb24gX2RhdGFbXSBhcnJheS5cbiAgICAgICAgICAgICBJZiB3ZSBoYXZlIGEgc2VyaWVzIG5hbWUsIHdlIGNhbiBhY2NlcyB0byBpdHMgc2VyaWVzIGRhdGEgdXNpbmc6XG5cbiAgICAgICAgICAgICBfZGF0YVtfc2VyaWVzSW5kZXhlc1snTXlTZXJpZXMnXV1cbiAgICAgICAgICovXG4gICAgICAgIHByaXZhdGUgX3Nlcmllc0luZGV4ZXMgPSBbXTtcblxuICAgICAgICAvKlxuICAgICAgICAgICAgIEFzc29jaWF0aXZlIGFycmF5IHRvIHN0b3JlIFwiZXZlbnRzXCIuXG4gICAgICAgICAgICAgLSBGaXJzdCBsZXZlbCBpcyBhbiBhc3NvY2lhdGl2ZSBhcnJheSBiYXNlZCBvbiBldmVudC5uYW1lLlxuICAgICAgICAgICAgIC0gU2Vjb25kIGxldmVsIGlzIGFuIGFzc29jaWF0aXZlIGFycmF5IGJhc2VkIG9uIGV2ZW50LmRhdGUuXG5cbiAgICAgICAgICAgICBfc3RvcmFnZVtldmVudC5uYW1lXVtldmVudC5kYXRlXSA9IGV2ZW50XG4gICAgICAgICAqL1xuICAgICAgICBwcml2YXRlIF9zdG9yYWdlID0gW107XG5cbiAgICAgICAgLypcbiAgICAgICAgIEdsb2JhbCBncmFwaCBvYmplY3QuXG4gICAgICAgICAqL1xuICAgICAgICBwcml2YXRlIF9ncmFwaDtcbiAgICAgICAgcHJpdmF0ZSBfZWxlbWVudDtcblxuICAgICAgICAvKlxuICAgICAgICAgICAgU2NhbGUgdG8gbWFpbnRhaW4gYXNwZWN0IHJhdGlvIGFmdGVyIHJlZHJhd1xuICAgICAgICAgKi9cbiAgICAgICAgcHJpdmF0ZSBfc2NhbGVEb21haW47XG5cbiAgICAgICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgICAgICBpZiAoR3JhcGguX2luc3RhbmNlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU29tZXRoaW5nIGVycm9yIGluIEdyYXBoIHNpbmdsZXRvbiBpbml0aWFsaXphdGlvblwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEdyYXBoLl9pbnN0YW5jZSA9IHRoaXM7XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgc3RhdGljIGdldEluc3RhbmNlKCk6R3JhcGgge1xuICAgICAgICAgICAgaWYgKEdyYXBoLl9pbnN0YW5jZSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIEdyYXBoLl9pbnN0YW5jZSA9IG5ldyBHcmFwaCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIEdyYXBoLl9pbnN0YW5jZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBpbml0KGRhc2hib2FyZElkOiBzdHJpbmcsXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBudW1iZXIsXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogYW55LFxuICAgICAgICAgICAgICAgICAgICBzdGFydFRpbWU6IG51bWJlcixcbiAgICAgICAgICAgICAgICAgICAgZW5kVGltZTogbnVtYmVyLFxuICAgICAgICAgICAgICAgICAgICBob3ZlckNhbGxCYWNrOiBGdW5jdGlvbik6IHZvaWQge1xuICAgICAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5fY2hhcnRQbGFjZWhvbGRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGRhc2hib2FyZElkKTtcbiAgICAgICAgICAgIHRoaXMuX3dpZHRoID0gd2lkdGg7XG4gICAgICAgICAgICB0aGlzLl9tYXJnaW4gPSBtYXJnaW47XG4gICAgICAgICAgICB0aGlzLl9zdGFydFRpbWUgPSBzdGFydFRpbWU7XG4gICAgICAgICAgICB0aGlzLl9lbmRUaW1lID0gZW5kVGltZTtcblxuICAgICAgICAgICAgaWYgKHRoaXMuX3NjYWxlRG9tYWluKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fc3RhcnRUaW1lID0gdGhpcy5fc2NhbGVEb21haW5bMF07XG4gICAgICAgICAgICAgICAgdGhpcy5fZW5kVGltZSA9IHRoaXMuX3NjYWxlRG9tYWluWzFdO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLl9jb2xvciA9IGQzLnNjYWxlLmNhdGVnb3J5MTAoKTtcbiAgICAgICAgICAgIHRoaXMuX2dyYXBoID0gZDMuY2hhcnQuZXZlbnREcm9wcygpXG4gICAgICAgICAgICAgICAgLnN0YXJ0KG5ldyBEYXRlKHRoaXMuX3N0YXJ0VGltZSkpXG4gICAgICAgICAgICAgICAgLmVuZChuZXcgRGF0ZSh0aGlzLl9lbmRUaW1lKSlcbiAgICAgICAgICAgICAgICAuZXZlbnRDb2xvcigoZGF0dW0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9jb2xvcihpbmRleCk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAud2lkdGgodGhpcy5fd2lkdGgpXG4gICAgICAgICAgICAgICAgLm1hcmdpbih0aGlzLl9tYXJnaW4pXG4gICAgICAgICAgICAgICAgLmF4aXNGb3JtYXQoKHhBeGlzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHhBeGlzLnRpY2tzKDUpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmV2ZW50SG92ZXIoKGVsKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzZXJpZXMgPSBlbC5wYXJlbnROb2RlLmZpcnN0Q2hpbGQuaW5uZXJIVE1MO1xuICAgICAgICAgICAgICAgICAgICB2YXIgdGltZXN0YW1wID0gZDMuc2VsZWN0KGVsKS5kYXRhKClbMF07XG5cbiAgICAgICAgICAgICAgICAgICAgaG92ZXJDYWxsQmFjayhzZXJpZXMsIHRpbWVzdGFtcCk7XG5cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5ldmVudFpvb20oKHNjYWxlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3NjYWxlRG9tYWluID0gc2NhbGUuZG9tYWluKCk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQgPSBkMy5zZWxlY3QodGhpcy5fY2hhcnRQbGFjZWhvbGRlcikuYXBwZW5kKCdkaXYnKS5kYXR1bSh0aGlzLl9kYXRhKTtcbiAgICAgICAgICAgIHRoaXMuX2RhdGEgPSB0aGlzLl9lbGVtZW50LmRhdHVtKCk7XG4gICAgICAgICAgICB0aGlzLl9ncmFwaCh0aGlzLl9lbGVtZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBhZGRFdmVudChldmVudDogYW55KTogdm9pZCB7XG4gICAgICAgICAgICBpZiAodGhpcy5faW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fc3RvcmFnZVtldmVudC5uYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSBfc3RvcmFnZVxuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3U2VyaWVzID0gW107XG4gICAgICAgICAgICAgICAgICAgIG5ld1Nlcmllc1tldmVudC5kYXRlXSA9IGV2ZW50O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9zdG9yYWdlW2V2ZW50Lm5hbWVdID0gbmV3U2VyaWVzO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSBfZGF0YVxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9zZXJpZXNJbmRleGVzLnB1c2goZXZlbnQubmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBuZXdMaW5lID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogZXZlbnQubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVzOiBbIGV2ZW50LmRhdGUgXVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLiBfZGF0YS5wdXNoKG5ld0xpbmUpO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIFJlZHJhd1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fc2NhbGVEb21haW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2dyYXBoLnN0YXJ0KHRoaXMuX3NjYWxlRG9tYWluWzBdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2dyYXBoLmVuZCh0aGlzLl9zY2FsZURvbWFpblsxXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZ3JhcGgodGhpcy5fZWxlbWVudCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX3N0b3JhZ2VbZXZlbnQubmFtZV1bZXZlbnQuZGF0ZV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gVXBkYXRlIF9zdG9yYWdlXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9zdG9yYWdlW2V2ZW50Lm5hbWVdW2V2ZW50LmRhdGVdID0gZXZlbnQ7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSBfZGF0YVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGkgPSB0aGlzLl9zZXJpZXNJbmRleGVzLmluZGV4T2YoZXZlbnQubmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9kYXRhW2ldLmRhdGVzLnB1c2goZXZlbnQuZGF0ZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFJlZHJhd1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX3NjYWxlRG9tYWluKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fZ3JhcGguc3RhcnQodGhpcy5fc2NhbGVEb21haW5bMF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2dyYXBoLmVuZCh0aGlzLl9zY2FsZURvbWFpblsxXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9ncmFwaCh0aGlzLl9lbGVtZW50KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBnZXRFdmVudChuYW1lOiBhbnksIGRhdGU6IGFueSk6IGFueSB7XG4gICAgICAgICAgICBpZiAodGhpcy5faW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fc3RvcmFnZVtuYW1lXSAhPT0gdW5kZWZpbmVkICYmIHRoaXMuX3N0b3JhZ2VbbmFtZV1bZGF0ZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fc3RvcmFnZVtuYW1lXVtkYXRlXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cbn1cbiIsIi8vLyBDb3B5cmlnaHQgMjAxNC0yMDE1IFJlZCBIYXQsIEluYy4gYW5kL29yIGl0cyBhZmZpbGlhdGVzXG4vLy8gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycyBhcyBpbmRpY2F0ZWQgYnkgdGhlIEBhdXRob3IgdGFncy5cbi8vL1xuLy8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy8vXG4vLy8gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vL1xuLy8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiYWxlcnRzUGx1Z2luLnRzXCIvPlxubW9kdWxlIEhhd2t1bGFyQWxlcnRzIHtcblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgSURlZmluaXRpb25zQ29udHJvbGxlciB7XG4gICAgICAgIGFsbERlZmluaXRpb25zKCk6dm9pZDtcbiAgICAgICAgbmV3RGVmaW5pdGlvbigpOnZvaWQ7XG4gICAgICAgIHNhdmVEZWZpbml0aW9uKCk6dm9pZDtcbiAgICAgICAgdmlld0RlZmluaXRpb24oaWQ6IHN0cmluZyk6dm9pZDtcbiAgICAgICAgZGVsZXRlRGVmaW5pdGlvbihpZDogc3RyaW5nLCBuYW1lOiBzdHJpbmcpOnZvaWQ7XG4gICAgICAgIGNsb3NlQWxlcnRNc2coaW5kZXg6IG51bWJlcik6dm9pZDtcbiAgICAgICAgbmV3Q29uZGl0aW9uKCk6dm9pZDtcbiAgICAgICAgY2hhbmdlQ29uZGl0aW9uVHlwZSgpOnZvaWQ7XG4gICAgICAgIHZpZXdDb25kaXRpb24oY29uZGl0aW9uSWQ6IHN0cmluZyk6dm9pZDtcbiAgICAgICAgc2F2ZUNvbmRpdGlvbigpOnZvaWQ7XG4gICAgICAgIGRlbGV0ZUNvbmRpdGlvbihjb25kaXRpb25JZDogc3RyaW5nLCBkZXNjcmlwdGlvbjogc3RyaW5nKTp2b2lkO1xuICAgICAgICBjYW5jZWxDb25kaXRpb24oKTp2b2lkO1xuICAgICAgICBzYXZlRGFtcGVuaW5nKCk6dm9pZDtcbiAgICB9O1xuXG4gICAgZXhwb3J0IGNsYXNzIERlZmluaXRpb25zQ29udHJvbGxlciBpbXBsZW1lbnRzIElEZWZpbml0aW9uc0NvbnRyb2xsZXIge1xuICAgICAgICBwdWJsaWMgc3RhdGljICAkaW5qZWN0ID0gWyckc2NvcGUnLCAnJHdpbmRvdycsICckbG9nJywgJ0hhd2t1bGFyQWxlcnQnXTtcblxuICAgICAgICBjb25zdHJ1Y3Rvcihwcml2YXRlICRzY29wZTphbnksXG4gICAgICAgICAgICAgICAgICAgIHByaXZhdGUgJHdpbmRvdzphbnksXG4gICAgICAgICAgICAgICAgICAgIHByaXZhdGUgJGxvZzpuZy5JTG9nU2VydmljZSxcbiAgICAgICAgICAgICAgICAgICAgcHJpdmF0ZSBIYXdrdWxhckFsZXJ0OmFueSkge1xuXG4gICAgICAgICAgICAkc2NvcGUuc3RhdHVzID0gJ2FsbCc7XG4gICAgICAgICAgICAkc2NvcGUubXNncyA9IFtdO1xuICAgICAgICAgICAgdGhpcy5hbGxEZWZpbml0aW9ucygpO1xuICAgICAgICAgICAgdGhpcy5hbGxBY3Rpb25zKCk7XG4gICAgICAgIH1cblxuICAgICAgICBhbGxEZWZpbml0aW9ucygpOnZvaWQge1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUuc3RhdHVzID0gJ2FsbCc7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS50cmlnZ2VycyA9IHRoaXMuSGF3a3VsYXJBbGVydC5UcmlnZ2VyLnF1ZXJ5KCk7XG4gICAgICAgIH1cblxuICAgICAgICBuZXdEZWZpbml0aW9uKCk6dm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zdGF0dXMgPSAnbmV3JztcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLnRyaWdnZXIgPSB7XG4gICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgICAgICAgIHNhZmV0eUVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICBmaXJpbmdNYXRjaDogJ0FMTCcsXG4gICAgICAgICAgICAgIHNhZmV0eU1hdGNoOiAnQUxMJ1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLmRhbXBlbmluZ0ZpcmUgPSB7IHRyaWdnZXJNb2RlOiAnRklSRScsXG4gICAgICAgICAgICAgIHR5cGU6ICdSRUxBWEVEX0NPVU5UJyxcbiAgICAgICAgICAgICAgZXZhbFRydWVTZXR0aW5nOiAxLFxuICAgICAgICAgICAgICBldmFsVG90YWxTZXR0aW5nOiAxLFxuICAgICAgICAgICAgICBldmFsVGltZVNldHRpbmc6IDBcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5kYW1wZW5pbmdTYWZldHkgPSB7dHJpZ2dlck1vZGU6ICdTQUZFVFknLFxuICAgICAgICAgICAgICB0eXBlOiAnUkVMQVhFRF9DT1VOVCcsXG4gICAgICAgICAgICAgIGV2YWxUcnVlU2V0dGluZzogMSxcbiAgICAgICAgICAgICAgZXZhbFRvdGFsU2V0dGluZzogMSxcbiAgICAgICAgICAgICAgZXZhbFRpbWVTZXR0aW5nOiAwXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUuc3RhdHVzRGFtcGVuaW5nID0ge3N0YXR1czogJ25ldyd9O1xuICAgICAgICAgICAgdGhpcy5hbGxBY3Rpb25zKCk7XG4gICAgICAgIH1cblxuICAgICAgICBzYXZlRGVmaW5pdGlvbigpOnZvaWQge1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUubXNncyA9IFtdO1xuICAgICAgICAgICAgaWYgKHRoaXMuJHNjb3BlLnN0YXR1cyA9PT0gJ25ldycpIHtcbiAgICAgICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuVHJpZ2dlci5zYXZlKHRoaXMuJHNjb3BlLnRyaWdnZXIsXG4gICAgICAgICAgICAgICAgICAgICh0cmlnZ2VyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5kYW1wZW5pbmdGaXJlLnRyaWdnZXJJZCA9IHRyaWdnZXIuaWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5kYW1wZW5pbmdTYWZldHkudHJpZ2dlcklkID0gdHJpZ2dlci5pZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5EYW1wZW5pbmcuc2F2ZSh7dHJpZ2dlcklkOiB0aGlzLiRzY29wZS5kYW1wZW5pbmdGaXJlLnRyaWdnZXJJZH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmRhbXBlbmluZ0ZpcmUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKGRhbXBlbmluZykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuRGFtcGVuaW5nLnNhdmUoe3RyaWdnZXJJZDogdGhpcy4kc2NvcGUuZGFtcGVuaW5nU2FmZXR5LnRyaWdnZXJJZH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZGFtcGVuaW5nU2FmZXR5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChzYWZldHkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudmlld0RlZmluaXRpb24oZGFtcGVuaW5nLnRyaWdnZXJJZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgKHJlYXNvblNhZmV0eSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb25TYWZldHkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIChyZWFzb25EYW1wZW5pbmcpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb25EYW1wZW5pbmcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIH0sIChyZWFzb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9IGlmICh0aGlzLiRzY29wZS5zdGF0dXMgPT09ICdlZGl0Jykge1xuICAgICAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5UcmlnZ2VyLnB1dCh7dHJpZ2dlcklkOiB0aGlzLiRzY29wZS50cmlnZ2VyLmlkfSwgdGhpcy4kc2NvcGUudHJpZ2dlcixcbiAgICAgICAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hbGxEZWZpbml0aW9ucygpO1xuICAgICAgICAgICAgICAgICAgICB9LCAocmVhc29uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEFsZXJ0TXNnKHJlYXNvbik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdmlld0RlZmluaXRpb24oaWQ6IHN0cmluZyk6dm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zdGF0dXMgPSAnZWRpdCc7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS50cmlnZ2VyID0ge307XG4gICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuVHJpZ2dlci5nZXQoe3RyaWdnZXJJZDogaWR9LFxuICAgICAgICAgICAgICAgIChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS50cmlnZ2VyID0gcmVzcG9uc2U7XG4gICAgICAgICAgICAgICAgfSwgKHJlYXNvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEFsZXJ0TXNnKHJlYXNvbik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmFsbENvbmRpdGlvbnMoaWQpO1xuICAgICAgICAgICAgdGhpcy5nZXREYW1wZW5pbmdzKGlkKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGRlbGV0ZURlZmluaXRpb24oaWQ6IHN0cmluZywgbmFtZTogc3RyaW5nKTp2b2lkIHtcbiAgICAgICAgICAgIGlmICh0aGlzLiR3aW5kb3cuY29uZmlybSgnRG8geW91IHdhbnQgdG8gZGVsZXRlICcgKyBuYW1lICsgJyA/JykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5tc2dzID0gW107XG4gICAgICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0LlRyaWdnZXIuZGVsZXRlKHt0cmlnZ2VySWQ6IGlkfSxcbiAgICAgICAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWxsRGVmaW5pdGlvbnMoKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgKHJlYXNvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb24pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNsb3NlQWxlcnRNc2coaW5kZXg6IG51bWJlcik6dm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5tc2dzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGFkZEFsZXJ0TXNnKHJlYXNvbjogYW55KTp2b2lkIHtcbiAgICAgICAgICAgIHZhciBuZXdBbGVydCA9IHt0eXBlOiAnZGFuZ2VyJywgbXNnOiAnJ307XG4gICAgICAgICAgICBpZiAocmVhc29uLmRhdGEuZXJyb3JNc2cpIHtcbiAgICAgICAgICAgICAgICBuZXdBbGVydC5tc2cgPSByZWFzb24uZGF0YS5lcnJvck1zZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbmV3QWxlcnQubXNnID0gcmVhc29uLnN0YXR1c1RleHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5tc2dzLnB1c2gobmV3QWxlcnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBhbGxBY3Rpb25zKCk6dm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5hY3Rpb25zID0gW107XG4gICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuQWN0aW9uLnF1ZXJ5KFxuICAgICAgICAgICAgICAgIChyZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuYWN0aW9ucyA9IHJlc3VsdDtcbiAgICAgICAgICAgICAgICB9LCAocmVhc29uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBhbGxDb25kaXRpb25zKHRyaWdnZXJJZDogc3RyaW5nKTp2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLmNvbmRpdGlvbnMgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLnN0YXR1c0NvbmRpdGlvbiA9IHsgc3RhdHVzOiAnJywgY29uZGl0aW9uSWQ6ICcnfTtcbiAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5Db25kaXRpb24ucXVlcnkoe3RyaWdnZXJJZDogdHJpZ2dlcklkfSxcbiAgICAgICAgICAgICAgICAoY29uZGl0aW9ucykgPT4ge1xuICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuY29uZGl0aW9ucyA9IGNvbmRpdGlvbnM7XG4gICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuJHNjb3BlLmNvbmRpdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuY29uZGl0aW9uc1tpXS5kZXNjcmlwdGlvbiA9IHRoaXMuZ2V0RGVzY3JpcHRpb24odGhpcy4kc2NvcGUuY29uZGl0aW9uc1tpXS50eXBlLFxuICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmNvbmRpdGlvbnNbaV0pO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIChyZWFzb25MaXN0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uTGlzdCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGdldERhbXBlbmluZ3ModHJpZ2dlcklkOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgICB0aGlzLiRzY29wZS5kYW1wZW5pbmdGaXJlID0geyB0cmlnZ2VyTW9kZTogJ0ZJUkUnLFxuICAgICAgICAgICAgdHlwZTogJ1JFTEFYRURfQ09VTlQnLFxuICAgICAgICAgICAgZXZhbFRydWVTZXR0aW5nOiAxLFxuICAgICAgICAgICAgZXZhbFRvdGFsU2V0dGluZzogMSxcbiAgICAgICAgICAgIGV2YWxUaW1lU2V0dGluZzogMFxuICAgICAgICAgIH07XG4gICAgICAgICAgdGhpcy4kc2NvcGUuZGFtcGVuaW5nU2FmZXR5ID0ge3RyaWdnZXJNb2RlOiAnU0FGRVRZJyxcbiAgICAgICAgICAgIHR5cGU6ICdSRUxBWEVEX0NPVU5UJyxcbiAgICAgICAgICAgIGV2YWxUcnVlU2V0dGluZzogMSxcbiAgICAgICAgICAgIGV2YWxUb3RhbFNldHRpbmc6IDEsXG4gICAgICAgICAgICBldmFsVGltZVNldHRpbmc6IDBcbiAgICAgICAgICB9O1xuICAgICAgICAgIHRoaXMuJHNjb3BlLnN0YXR1c0RhbXBlbmluZyA9IHsgc3RhdHVzOiAndmlldyd9O1xuICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5EYW1wZW5pbmcucXVlcnkoe3RyaWdnZXJJZDogdHJpZ2dlcklkfSxcbiAgICAgICAgICAgICAgKGRhbXBlbmluZ3MpID0+IHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhbXBlbmluZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgIGlmIChkYW1wZW5pbmdzW2ldLnRyaWdnZXJNb2RlID09PSAnRklSRScpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZGFtcGVuaW5nRmlyZSA9IGRhbXBlbmluZ3NbaV07XG4gICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRhbXBlbmluZ3NbaV0udHJpZ2dlck1vZGUgPT09ICdTQUZFVFknKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmRhbXBlbmluZ1NhZmV0eSA9IGRhbXBlbmluZ3NbaV07XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8qXG4gICAgICAgICAgICAgICAgICBUaGlzIGNhc2UgaXMganVzdCBpZiB3ZSBoYXZlIGEgdHJpZ2dlciBkZWZpbml0aW9uIHdpdGhvdXQgZGFtcGVuaW5ncy5cbiAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICBpZiAoZGFtcGVuaW5ncy5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgICAgICAgICB0aGlzLmluaXREYW1wZW5pbmdzKHRyaWdnZXJJZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LCAocmVhc29uKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb24pO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgaW5pdERhbXBlbmluZ3ModHJpZ2dlcklkOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgICB0aGlzLiRzY29wZS5kYW1wZW5pbmdGaXJlLnRyaWdnZXJJZCA9IHRyaWdnZXJJZDtcbiAgICAgICAgICB0aGlzLiRzY29wZS5kYW1wZW5pbmdTYWZldHkudHJpZ2dlcklkID0gdHJpZ2dlcklkO1xuICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5EYW1wZW5pbmcuc2F2ZSh7dHJpZ2dlcklkOiB0aGlzLiRzY29wZS5kYW1wZW5pbmdGaXJlLnRyaWdnZXJJZH0sXG4gICAgICAgICAgICB0aGlzLiRzY29wZS5kYW1wZW5pbmdGaXJlKTtcbiAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuRGFtcGVuaW5nLnNhdmUoe3RyaWdnZXJJZDogdGhpcy4kc2NvcGUuZGFtcGVuaW5nU2FmZXR5LnRyaWdnZXJJZH0sXG4gICAgICAgICAgICB0aGlzLiRzY29wZS5kYW1wZW5pbmdTYWZldHkpO1xuICAgICAgICB9XG5cbiAgICAgICAgc2F2ZURhbXBlbmluZygpOiB2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5EYW1wZW5pbmcucHV0KHt0cmlnZ2VySWQ6IHRoaXMuJHNjb3BlLmVkaXREYW1wZW5pbmcudHJpZ2dlcklkLFxuICAgICAgICAgICAgICAgIGRhbXBlbmluZ0lkOiB0aGlzLiRzY29wZS5lZGl0RGFtcGVuaW5nLmRhbXBlbmluZ0lkfSxcbiAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZWRpdERhbXBlbmluZyxcbiAgICAgICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuc3RhdHVzRGFtcGVuaW5nLnN0YXR1cyA9ICd2aWV3JztcbiAgICAgICAgICAgICAgICB9LCAocmVhc29uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyB2aWV3RGFtcGVuaW5nKGRhbXBlbmluZzogYW55KTogdm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zdGF0dXNEYW1wZW5pbmcgPSB7IHN0YXR1czogJ2VkaXQnfTtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLmVkaXREYW1wZW5pbmcgPSBkYW1wZW5pbmc7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGdldERlc2NyaXB0aW9uKHR5cGU6IHN0cmluZywgY29uZGl0aW9uOiBhbnkpOnN0cmluZyB7XG4gICAgICAgICAgICB2YXIgZGVzY3JpcHRpb24gPSBcIlwiO1xuICAgICAgICAgICAgdmFyIG9wID0gXCJcIjtcbiAgICAgICAgICAgIGlmICh0eXBlID09PSAnQVZBSUxBQklMSVRZJykge1xuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gY29uZGl0aW9uLmRhdGFJZCArIFwiIGlzIFwiICsgY29uZGl0aW9uLm9wZXJhdG9yO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAnQ09NUEFSRScpIHtcbiAgICAgICAgICAgICAgICBvcCA9IHRoaXMuZ2V0T3BlcmF0b3IoY29uZGl0aW9uLm9wZXJhdG9yKTtcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiA9IGNvbmRpdGlvbi5kYXRhSWQgKyBcIiBcIiArIG9wICsgXCIgXCIgK1xuICAgICAgICAgICAgICAgICAgICBcIihcIiArIGNvbmRpdGlvbi5kYXRhMk11bHRpcGxpZXIgKyBcIiAqIFwiICsgY29uZGl0aW9uLmRhdGEySWQgKyBcIilcIjtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ1NUUklORycpIHtcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiA9IGNvbmRpdGlvbi5kYXRhSWQgKyBcIiBcIiArIGNvbmRpdGlvbi5vcGVyYXRvciArIFwiICdcIiArXG4gICAgICAgICAgICAgICAgICAgIGNvbmRpdGlvbi5wYXR0ZXJuICsgXCInIChBL2EgXCIgKyBjb25kaXRpb24uaWdub3JlQ2FzZSArIFwiKVwiO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAnVEhSRVNIT0xEJykge1xuICAgICAgICAgICAgICAgIG9wID0gdGhpcy5nZXRPcGVyYXRvcihjb25kaXRpb24ub3BlcmF0b3IpO1xuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gY29uZGl0aW9uLmRhdGFJZCArIFwiIFwiICsgb3AgKyBcIiBcIiArIGNvbmRpdGlvbi50aHJlc2hvbGQ7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICdSQU5HRScpIHtcbiAgICAgICAgICAgICAgICB2YXIgbG93ID0gXCJbXCI7XG4gICAgICAgICAgICAgICAgdmFyIGhpZ2ggPSBcIl1cIjtcbiAgICAgICAgICAgICAgICBpZiAoY29uZGl0aW9uLm9wZXJhdG9yTG93ICE9PSAnSU5DTFVTSVZFJykge1xuICAgICAgICAgICAgICAgICAgICBsb3cgPSBcIihcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGNvbmRpdGlvbi5vcGVyYXRvckhpZ2ggIT09ICdJTkNMVVNJVkUnKSB7XG4gICAgICAgICAgICAgICAgICAgIGhpZ2ggPSBcIilcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGlub3V0ID0gXCIgaW4gXCI7XG4gICAgICAgICAgICAgICAgaWYgKCFjb25kaXRpb24uaW5SYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICBpbm91dCA9IFwiIG91dCBcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gPSBjb25kaXRpb24uZGF0YUlkICsgaW5vdXQgKyBsb3cgKyBjb25kaXRpb24udGhyZXNob2xkTG93ICsgXCIsIFwiICtcbiAgICAgICAgICAgICAgICAgICAgY29uZGl0aW9uLnRocmVzaG9sZEhpZ2ggKyBoaWdoO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGRlc2NyaXB0aW9uO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBnZXRPcGVyYXRvcihvcENvZGU6IHN0cmluZyk6c3RyaW5nIHtcbiAgICAgICAgICAgIHZhciBvcCA9IFwiXCI7XG4gICAgICAgICAgICBpZiAob3BDb2RlID09PSAnR1QnKSB7XG4gICAgICAgICAgICAgICAgb3AgPSBcIj5cIjtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAob3BDb2RlID09PSAnR1RFJykge1xuICAgICAgICAgICAgICAgIG9wID0gXCI+PVwiO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChvcENvZGUgPT09ICdMVCcpIHtcbiAgICAgICAgICAgICAgICBvcCA9IFwiPFwiO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChvcENvZGUgPT09ICdMVEUnKSB7XG4gICAgICAgICAgICAgICAgb3AgPSBcIjw9XCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gb3A7XG4gICAgICAgIH1cblxuICAgICAgICBuZXdDb25kaXRpb24oKTp2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLnN0YXR1c0NvbmRpdGlvbiA9IHtzdGF0dXM6ICduZXcnfTtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24gPSB7IHR5cGU6ICdBVkFJTEFCSUxJVFknLCB0cmlnZ2VySWQ6IHRoaXMuJHNjb3BlLnRyaWdnZXIuaWQgfTtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLmNvbmRpdGlvblR5cGVzID0gWydBVkFJTEFCSUxJVFknLCAnQ09NUEFSRScsICdTVFJJTkcnLCAnVEhSRVNIT0xEJywgJ1JBTkdFJ107XG4gICAgICAgICAgICB0aGlzLmNoYW5nZUNvbmRpdGlvblR5cGUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNoYW5nZUNvbmRpdGlvblR5cGUoKTp2b2lkIHtcbiAgICAgICAgICAgIGlmICh0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLnR5cGUgPT09ICdBVkFJTEFCSUxJVFknKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbi5kYXRhSWQgPSAnJztcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLm9wZXJhdG9yID0gJ0RPV04nO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLnR5cGUgPT09ICdDT01QQVJFJykge1xuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24uZGF0YUlkID0gJyc7XG4gICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbi5vcGVyYXRvciA9ICdMVCc7XG4gICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbi5kYXRhMk11bHRpcGxpZXIgPSAxLjA7XG4gICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbi5kYXRhMklkID0gJyc7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24udHlwZSA9PT0gJ1NUUklORycpIHtcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLmRhdGFJZCA9ICcnO1xuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24ub3BlcmF0b3IgPSAnRVFVQUwnO1xuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24ucGF0dGVybiA9ICcnO1xuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24uaWdub3JlQ2FzZSA9IGZhbHNlO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLnR5cGUgPT09ICdUSFJFU0hPTEQnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbi5kYXRhSWQgPSAnJztcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLm9wZXJhdG9yID0gJ0xUJztcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLnRocmVzaG9sZCA9IDAuMDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbi50eXBlID09PSAnUkFOR0UnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbi5kYXRhSWQgPSAnJztcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLm9wZXJhdG9yTG93ID0gJ0lOQ0xVU0lWRSc7XG4gICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbi5vcGVyYXRvckhpZ2ggPSAnSU5DTFVTSVZFJztcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLnRocmVzaG9sZExvdyA9IDAuMDtcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLnRocmVzaG9sZEhpZ2ggPSAwLjA7XG4gICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbi5pblJhbmdlID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZpZXdDb25kaXRpb24oY29uZGl0aW9uOiBhbnkpOnZvaWQge1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUuc3RhdHVzQ29uZGl0aW9uID0ge3N0YXR1czogJ2VkaXQnLCBjb25kaXRpb25JZDogY29uZGl0aW9uLmNvbmRpdGlvbklkLCB0eXBlOiBjb25kaXRpb24udHlwZX07XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uID0gY29uZGl0aW9uO1xuICAgICAgICB9XG5cbiAgICAgICAgc2F2ZUNvbmRpdGlvbigpOnZvaWQge1xuICAgICAgICAgICAgaWYgKHRoaXMuJHNjb3BlLnN0YXR1c0NvbmRpdGlvbi5zdGF0dXMgPT09ICduZXcnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0LkNvbmRpdGlvbi5zYXZlKHt0cmlnZ2VySWQ6IHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24udHJpZ2dlcklkfSxcbiAgICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24sXG4gICAgICAgICAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLnN0YXR1c0NvbmRpdGlvbiA9IHtzdGF0dXM6ICcnfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudmlld0RlZmluaXRpb24odGhpcy4kc2NvcGUudHJpZ2dlci5pZCk7XG4gICAgICAgICAgICAgICAgICAgIH0sIChyZWFzb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8qXG4gICAgICAgICAgICAgICAgICBcImRlc2NyaXB0aW9uXCIgaXMgYSBoZWxwZXIgZmllbGQgb24gdGhlIGphdmFzY3JpcHQgb2JqZWN0XG4gICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgZGVsZXRlIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24uZGVzY3JpcHRpb247XG4gICAgICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0LkNvbmRpdGlvbi5wdXQoe3RyaWdnZXJJZDogdGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbi50cmlnZ2VySWQsXG4gICAgICAgICAgICAgICAgICBjb25kaXRpb25JZDogdGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbi5jb25kaXRpb25JZH0sIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24sXG4gICAgICAgICAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5zdGF0dXNDb25kaXRpb24gPSB7c3RhdHVzOiAnJ307XG4gICAgICAgICAgICAgICAgICAgICAgdGhpcy52aWV3RGVmaW5pdGlvbih0aGlzLiRzY29wZS50cmlnZ2VyLmlkKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgKHJlYXNvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb24pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZGVsZXRlQ29uZGl0aW9uKGNvbmRpdGlvbklkOiBzdHJpbmcsIGRlc2NyaXB0aW9uOiBzdHJpbmcpOnZvaWQge1xuICAgICAgICAgICAgaWYgKHRoaXMuJHdpbmRvdy5jb25maXJtKCdEbyB5b3Ugd2FudCB0byBkZWxldGUgJyArIGRlc2NyaXB0aW9uICsgJyA/JykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5tc2dzID0gW107XG4gICAgICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0LkNvbmRpdGlvbi5kZWxldGUoe3RyaWdnZXJJZDogdGhpcy4kc2NvcGUudHJpZ2dlci5pZCwgY29uZGl0aW9uSWQ6IGNvbmRpdGlvbklkfSxcbiAgICAgICAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuc3RhdHVzQ29uZGl0aW9uID0ge3N0YXR1czogJyd9O1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy52aWV3RGVmaW5pdGlvbih0aGlzLiRzY29wZS50cmlnZ2VyLmlkKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgKHJlYXNvbkRlbGV0ZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb25EZWxldGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgY2FuY2VsQ29uZGl0aW9uKCk6dm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zdGF0dXNDb25kaXRpb24gPSB7c3RhdHVzOiAnJ307XG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBfbW9kdWxlLmNvbnRyb2xsZXIoJ0hhd2t1bGFyQWxlcnRzLkRlZmluaXRpb25zQ29udHJvbGxlcicsIERlZmluaXRpb25zQ29udHJvbGxlcik7XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
angular.module("hawkular-ui-components-alerts-templates", []).run(["$templateCache", function($templateCache) {$templateCache.put("plugins/alerts/html/actions.html","<div class=\"row\">\n  <div class=\"col-md-12\" ng-controller=\"HawkularAlerts.ActionsController as ac\">\n\n    <div ng-if=\"status == \'all\'\" ng-include=\"\'plugins/alerts/html/actionsAll.html\'\"></div>\n\n    <div ng-if=\"status == \'new\'\" ng-include=\"\'plugins/alerts/html/actionsNew.html\'\"></div>\n\n    <div ng-if=\"status == \'edit\'\" ng-include=\"\'plugins/alerts/html/actionsEdit.html\'\"></div>\n\n  </div>\n</div>\n");
$templateCache.put("plugins/alerts/html/actionsAll.html","<h1>Actions</h1>\n<div class=\"dataTables_wrapper no-footer\">\n  <div class=\"dataTables_header\">\n    <div class=\"text-right\">\n      <button ng-click=\"ac.newAction()\" type=\"button\" class=\"btn btn-primary\">New Action</button>\n      <button ng-click=\"ac.allActions()\" type=\"button\" class=\"btn btn-info\">Refresh</button>\n    </div>\n  </div>\n  <table class=\"datatable table table-striped table-bordered dataTable no-footer\" role=\"grid\">\n    <thead>\n    <tr role=\"row\">\n      <th class=\"vert-align\">Action</th>\n      <th class=\"vert-align\">Plugin</th>\n      <th class=\"vert-align\">Description</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat=\"action in actions | orderBy:[\'actionId\', \'actionPlugin\']:false\" ng-class-odd=\"\'gradeA odd\'\" ng-class-even=\"\'gradeA even\'\" >\n      <td class=\"vert-align\">{{ action.actionId }}</td>\n      <td class=\"vert-align\">{{ action.actionPlugin }}</td>\n      <td class=\"vert-align\">{{ action.description }}</td>\n      <td style=\"vertical-align: middle;\">\n        <div class=\"text-right\">\n          <a ng-click=\"ac.viewAction(action.actionId)\" class=\"btn btn-primary\">View</a>\n          <a class=\"btn btn-danger\" ng-click=\"ac.deleteAction(action.actionId)\">Delete</a>\n        </div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n\n");
$templateCache.put("plugins/alerts/html/actionsEdit.html","<h1>{{ action.actionId }}</h1>\n<div class=\"col-md-12\">\n  <form class=\"form-horizontal\" name=\"editActionForm\" ng-submit=\"ac.saveAction()\">\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"actionId\">\n        Action\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"actionId\" ng-model=\"action.actionId\" class=\"form-control\" ng-minlength=\"1\" disabled>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"actionPlugin\">\n        Plugin\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"actionPlugin\" ng-model=\"action.actionPlugin\" class=\"form-control\" ng-minlength=\"1\" disabled>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"actionDescription\">\n        Description\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"actionDescription\" ng-model=\"action.description\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div ng-repeat=\"(key, value) in action\">\n      <div class=\"form-group\" ng-if=\"key != \'actionId\' && key != \'actionPlugin\' && key != \'description\'\">\n        <label class=\"col-md-2 control-label\">\n          {{ key }}\n        </label>\n        <div class=\"col-md-6\">\n          <input type=\"text\" ng-model=\"action[key]\" class=\"form-control\" ng-minlength=\"1\" required>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <button type=\"submit\" class=\"btn btn-primary\">Update Action</button>\n        <button type=\"button\" ng-click=\"ac.allActions()\" class=\"btn btn-default\">Cancel</button>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <alert ng-repeat=\"alertMsg in msgs\" type=\"{{alertMsg.type}}\" close=\"nc.closeAlertMsg($index)\">{{alertMsg.msg}}</alert>\n      </div>\n    </div>\n  </form>\n</div>\n");
$templateCache.put("plugins/alerts/html/actionsNew.html","<h1>New Action</h1>\n<div class=\"col-md-12\">\n  <form class=\"form-horizontal\" name=\"newActionForm\" ng-submit=\"ac.saveAction()\">\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"actionId\">\n        Action\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"actionId\" ng-model=\"action.actionId\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\">\n        Plugin\n      </label>\n      <div class=\"col-md-6\">\n        <select ng-model=\"action.actionPlugin\" ng-change=\"ac.changePlugin()\">\n          <option ng-repeat=\"actionPlugin in actionPlugins\" ng-selected=\"actionPlugin == \'email\'\"> {{ actionPlugin }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\">\n        Description\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" ng-model=\"action.description\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div ng-repeat=\"property in pluginProperties\">\n      <div class=\"form-group\" ng-if=\"property != \'description\' && property != \'actionId\' && property != \'actionPlugin\'\">\n        <label class=\"col-md-2 control-label\">\n          {{ property }}\n        </label>\n        <div class=\"col-md-6\">\n          <input type=\"text\" ng-model=\"action[property]\" class=\"form-control\" ng-minlength=\"1\" required>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <button type=\"submit\" class=\"btn btn-primary\">Create Action</button>\n        <button type=\"button\" ng-click=\"ac.allActions()\" class=\"btn btn-default\">Cancel</button>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <alert ng-repeat=\"alertMsg in msgs\" type=\"{{alertMsg.type}}\" close=\"nc.closeAlertMsg($index)\">{{alertMsg.msg}}</alert>\n      </div>\n    </div>\n  </form>\n</div>\n");
$templateCache.put("plugins/alerts/html/dashboard.html","<div class=\"row\">\n  <div class=\"col-md-12\" ng-controller=\"HawkularAlerts.DashboardController as dsc\">\n    <h1>Alerts Dashboard</h1>\n    <div id=\"alertsDashboard\"></div>\n    <div class=\"col-md-8 col-md-offset-2\" ng-show=\"legend != null\">\n      <div class=\"dataTables_wrapper no-footer\">\n        <div class=\"dataTables_header\">\n          <div class=\"dataTables_info\">Alert at <b>{{ legend.date | date:\'d MMM, y hh:mm:ss a\' }}</b></div>\n        </div>\n        <table class=\"datatable table table-striped table-bordered dataTable no-footer\" role=\"grid\">\n          <thead>\n          <tr role=\"row\">\n            <th> EvalSet</th>\n            <th> Conditions</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr ng-repeat=\"evalSet in legend.evalSets\" ng-class-odd=\"\'gradeA odd\'\" ng-class-even=\"\'gradeA even\'\" >\n            <td></td>\n            <td>\n              <ul class=\"list-unstyled\">\n                <li ng-repeat=\"condition in evalSet\">\n                  <b>{{ condition.log }}</b> at <i>{{ condition.evalTimestamp | date:\'d MMM, y hh:mm:ss a\'}}</i>\n                </li>\n              </ul>\n              {{ match.time | date:\'d MMM, y hh:mm:ss a\'}}\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <p>\n        <a href ng-click=\"dsc.showRefreshForm()\"><span class=\"pficon pficon-refresh\"></span> Refresh Config</a>\n      </p>\n      <form ng-if=\"showRefresh\" class=\"form-horizontal\" ng-submit=\"dsc.updateRefresh()\">\n        <div class=\"form-group\">\n          <label class=\"col-md-4 control-label\" for=\"refreshInput\">\n            Refresh (ms):\n          </label>\n          <div class=\"col-md-3\">\n            <input type=\"number\" id=\"refreshInput\" ng-model=\"refresh.interval\" class=\"form-control\" ng-minlength=\"1\" required>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"col-md-6 col-md-offset-4\">\n            <button type=\"submit\" class=\"btn btn-primary\">Change</button>\n            <button type=\"button\" class=\"btn btn-default\" ng-click=\"dsc.hideRefreshForm()\">Cancel</button>\n          </div>\n        </div>\n      </form>\n      <alert ng-repeat=\"alertMsg in msgs\" type=\"{{alertMsg.type}}\" close=\"dsc.closeAlertMsg($index)\">{{alertMsg.msg}}</alert>\n    </div>\n  </div>\n</div>\n");
$templateCache.put("plugins/alerts/html/definitions.html","<div class=\"row\">\n  <div class=\"col-md-12\" ng-controller=\"HawkularAlerts.DefinitionsController as dc\">\n\n    <div ng-if=\"status == \'all\'\" ng-include=\"\'plugins/alerts/html/definitionsAll.html\'\"></div>\n\n    <div ng-if=\"status == \'new\'\" ng-include=\"\'plugins/alerts/html/definitionsNew.html\'\"></div>\n\n    <div ng-if=\"status == \'edit\'\" ng-include=\"\'plugins/alerts/html/definitionsEdit.html\'\"></div>\n\n  </div>\n</div>\n");
$templateCache.put("plugins/alerts/html/definitionsAll.html","<h1>Trigger Definitions</h1>\n<div class=\"dataTables_wrapper no-footer\">\n  <div class=\"dataTables_header\">\n    <div class=\"text-right\">\n      <button ng-click=\"dc.newDefinition()\" type=\"button\" class=\"btn btn-primary\">New Trigger</button>\n      <button ng-click=\"dc.allDefinitions()\" type=\"button\" class=\"btn btn-info\">Refresh</button>\n    </div>\n  </div>\n  <table class=\"datatable table table-striped table-bordered dataTable no-footer\" role=\"grid\">\n    <thead>\n    <tr role=\"row\">\n      <th class=\"vert-align\">Name</th>\n      <th class=\"vert-align\">Enabled</th>\n      <th class=\"vert-align\">Description</th>\n      <th class=\"vert-align\">Action</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat=\"trigger in triggers | orderBy:[\'id\', \'name\']:false\" ng-class-odd=\"\'gradeA odd\'\" ng-class-even=\"\'gradeA even\'\" >\n      <td class=\"vert-align\">{{ trigger.name }}</td>\n      <td class=\"vert-align\">{{ trigger.enabled }}</td>\n      <td class=\"vert-align\">{{ trigger.description }}</td>\n      <td class=\"vert-align\">\n        <ul class=\"list-unstyled\">\n          <li ng-repeat=\"action in trigger.actions\">{{ action }}</li>\n        </ul>\n      </td>\n      <td style=\"vertical-align: middle;\">\n        <div class=\"text-right\">\n          <a ng-click=\"dc.viewDefinition(trigger.id)\" class=\"btn btn-primary\">View</a>\n          <a class=\"btn btn-danger\" ng-click=\"dc.deleteDefinition(trigger.id, trigger.name)\">Delete</a>\n        </div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n\n");
$templateCache.put("plugins/alerts/html/definitionsConditions.html","<div class=\"dataTables_wrapper no-footer\">\n  <div class=\"dataTables_header\" ng-if=\"statusCondition.status != \'new\'\">\n    <div class=\"text-right\">\n      <button  type=\"button\" class=\"btn btn-primary\"\n          ng-click=\"dc.newCondition()\">New Condition</button>\n    </div>\n  </div>\n  <div ng-if=\"statusCondition.status == \'new\'\" class=\"col-md-12\"\n       ng-include=\"\'plugins/alerts/html/definitionsConditionsEdit.html\'\">\n  </div>\n  <table class=\"datatable table table-striped table-bordered dataTable no-footer\" role=\"grid\">\n    <thead>\n    <tr role=\"row\">\n      <th class=\"vert-align\">Condition</th>\n      <th class=\"vert-align\">Description</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat-start=\"condition in conditions | orderBy:[\'conditionId\', \'description\']:false\" ng-class-odd=\"\'gradeA odd\'\" ng-class-even=\"\'gradeA even\'\" >\n      <td class=\"vert-align\">{{ condition.triggerMode }}</td>\n      <td class=\"vert-align\">{{ condition.description }}</td>\n      <td style=\"vertical-align: middle;\">\n        <div class=\"text-right\">\n          <a ng-if=\"!(statusCondition.status == \'edit\' && statusCondition.conditionId == condition.conditionId)\"\n             ng-click=\"dc.viewCondition(condition)\" class=\"btn btn-primary\">View</a>\n          <a ng-if=\"!(statusCondition.status == \'edit\' && statusCondition.conditionId == condition.conditionId)\"\n             class=\"btn btn-danger\" ng-click=\"dc.deleteCondition(condition.conditionId, condition.description)\">Delete</a>\n        </div>\n      </td>\n    </tr>\n    <tr ng-if=\"statusCondition.status == \'edit\' && statusCondition.conditionId == condition.conditionId\" ng-repeat-end=\"\">\n      <td colspan=\"3\">\n        <div class=\"col-md-12\" ng-include=\"\'plugins/alerts/html/definitionsConditionsEdit.html\'\">\n        </div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n");
$templateCache.put("plugins/alerts/html/definitionsConditionsEdit.html","<form class=\"form-horizontal\" name=\"editConditionForm\">\n  <div ng-if=\"statusCondition.status == \'new\'\" class=\"form-group\">\n    <label class=\"col-md-4 control-label\" for=\"newConditionType\">\n      Condition Type\n    </label>\n    <div class=\"col-md-6\">\n      <ui-select ng-if=\"statusCondition.status == \'new\'\" id=\"newConditionType\"\n                 ng-model=\"editCondition.type\" theme=\"bootstrap\"\n                 ng-change=\"dc.changeConditionType()\">\n        <ui-select-match placeholder=\"Select condition type...\">{{$select.selected}}</ui-select-match>\n        <ui-select-choices repeat=\"conditionType in conditionTypes | filter:$select.search\">\n          {{ conditionType }}\n        </ui-select-choices>\n      </ui-select>\n    </div>\n  </div>\n  <div ng-if=\"editCondition.type == \'AVAILABILITY\'\">\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"availabilityDataId\">\n        Data Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"availabilityDataId\" ng-model=\"editCondition.dataId\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\">\n        Operator\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"UP\"> UP\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"NOT_UP\"> NOT_UP\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"DOWN\"> DOWN\n        </label>\n      </div>\n    </div>\n  </div>\n\n  <div ng-if=\"editCondition.type == \'COMPARE\'\">\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"compareData1Id\">\n        Data Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"compareData1Id\" ng-model=\"editCondition.dataId\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\">\n        Operator\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"LT\"> <\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"GT\"> >\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"LTE\"> <=\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"GTE\"> >=\n        </label>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"compareData2Id\">\n        Data 2 Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"compareData2Id\" ng-model=\"editCondition.data2Id\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"compareData2Multiplier\">\n        Data 2 Multiplier\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"number\" id=\"compareData2Multiplier\" ng-model=\"editCondition.data2Multiplier\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n  </div>\n\n  <div ng-if=\"editCondition.type == \'STRING\'\">\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"stringDataId\">\n        Data Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"stringDataId\" ng-model=\"editCondition.dataId\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\">\n        Operator\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"EQUAL\"> EQUAL\n        </label>\n        <label class=\"radio\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"NOT_EQUAL\"> NOT_EQUAL\n        </label>\n        <label class=\"radio\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"STARTS_WITH\"> START_WITH\n        </label>\n        <label class=\"radio\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"ENDS_WITH\"> ENDS_WITH\n        </label>\n        <label class=\"radio\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"CONTAINS\"> CONTAINS\n        </label>\n        <label class=\"radio\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"MATCH\"> MATCH\n        </label>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"pattern\">\n        Pattern\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"pattern\" ng-model=\"editCondition.pattern\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"ignoredCase\">\n        Ignore Case\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"checkbox\" id=\"ignoredCase\" ng-model=\"editCondition.ignoreCase\" class=\"checkbox\" >\n      </div>\n    </div>\n  </div>\n\n  <div ng-if=\"editCondition.type == \'THRESHOLD\'\">\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"thresholdDataId\">\n        Data Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"thresholdDataId\" ng-model=\"editCondition.dataId\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\">\n        Operator\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"LT\"> <\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"GT\"> >\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"LTE\"> <=\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"GTE\"> >=\n        </label>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"threshold\">\n        Threshold\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"number\" id=\"threshold\" ng-model=\"editCondition.threshold\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n  </div>\n\n  <div ng-if=\"editCondition.type == \'RANGE\'\">\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"thresholdRangeDataId\">\n        Data Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"thresholdRangeDataId\" ng-model=\"editCondition.dataId\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\">\n        In Range:\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"checkbox\" ng-model=\"editCondition.inRange\" class=\"checkbox\" >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\">\n        Operator Low\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operatorLow\" class=\"radio\" value=\"INCLUSIVE\"> [\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operatorLow\" class=\"radio\" value=\"EXCLUSIVE\"> (\n        </label>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"thresholdLow\">\n        Threshold Low\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"number\" id=\"thresholdLow\" ng-model=\"editCondition.thresholdLow\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"thresholdHigh\">\n        Threshold High\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"number\" id=\"thresholdHigh\" ng-model=\"editCondition.thresholdHigh\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\">\n        Operator High\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operatorHigh\" class=\"radio\" value=\"INCLUSIVE\"> ]\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operatorHigh\" class=\"radio\" value=\"EXCLUSIVE\"> )\n        </label>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <div class=\"col-md-offset-4 col-md-6\">\n      <button ng-click=\"dc.saveCondition()\" class=\"btn btn-primary\">Update Condition</button>\n      <a ng-if=\"statusCondition.status != \'new\'\" class=\"btn btn-danger\"\n         ng-click=\"dc.deleteCondition(editCondition.conditionId, editCondition.description)\">Delete</a>\n      <button type=\"button\" ng-click=\"dc.cancelCondition()\" class=\"btn btn-default\">Cancel</button>\n    </div>\n  </div>\n</form>\n");
$templateCache.put("plugins/alerts/html/definitionsDampening.html","<div class=\"dataTables_wrapper no-footer\">\n  <table ng-if=\"statusDampening.status == \'view\'\" class=\"datatable table table-striped table-bordered dataTable no-footer\" role=\"grid\">\n    <thead>\n    <tr role=\"row\">\n      <th class=\"vert-align\">Mode</th>\n      <th class=\"vert-align\">Type</th>\n      <th class=\"vert-align\">True Evals</th>\n      <th class=\"vert-align\">Total Evals</th>\n      <th class=\"vert-align\">Eval Period</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr class=\"gradeA odd\">\n      <td class=\"vert-align\">{{ dampeningFire.triggerMode }}</td>\n      <td class=\"vert-align\">{{ dampeningFire.type }}</td>\n      <td class=\"vert-align\">{{ dampeningFire.evalTrueSetting }}</td>\n      <td class=\"vert-align\">{{ dampeningFire.evalTotalSetting }}</td>\n      <td class=\"vert-align\">{{ dampeningFire.evalTimeSetting }}</td>\n      <td style=\"vertical-align: middle;\">\n        <div class=\"text-right\">\n          <a ng-click=\"dc.viewDampening(dampeningFire)\" class=\"btn btn-primary\">View</a>\n        </div>\n      </td>\n    </tr>\n    <tr class=\"gradeA odd\">\n      <td class=\"vert-align\">{{ dampeningSafety.triggerMode }}</td>\n      <td class=\"vert-align\">{{ dampeningSafety.type }}</td>\n      <td class=\"vert-align\">{{ dampeningSafety.evalTrueSetting }}</td>\n      <td class=\"vert-align\">{{ dampeningSafety.evalTotalSetting }}</td>\n      <td class=\"vert-align\">{{ dampeningSafety.evalTimeSetting }}</td>\n      <td style=\"vertical-align: middle;\">\n        <div class=\"text-right\">\n          <a ng-click=\"dc.viewDampening(dampeningSafety)\" class=\"btn btn-primary\">View</a>\n        </div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n<div ng-if=\"statusDampening.status == \'edit\' || statusDampening.status == \'new\'\" class=\"col-md-12\">\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">\n      Type\n    </label>\n    <div class=\"col-md-6\">\n      <label class=\"radio\">\n        <input type=\"radio\" ng-model=\"editDampening.type\" class=\"radio\" value=\"STRICT\"> STRICT\n      </label>\n      <label class=\"radio\">\n        <input type=\"radio\" ng-model=\"editDampening.type\" class=\"radio\" value=\"RELAXED_COUNT\"> RELAXED_COUNT\n      </label>\n      <label class=\"radio\">\n        <input type=\"radio\" ng-model=\"editDampening.type\" class=\"radio\" value=\"RELAXED_TIME\"> RELAXED_TIME\n      </label>\n      <label class=\"radio\">\n        <input type=\"radio\" ng-model=\"editDampening.type\" class=\"radio\" value=\"STRICT_TIME\"> STRICT_TIME\n      </label>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\" for=\"trueEvals\">\n      True Evals\n    </label>\n    <div class=\"col-md-6\">\n      <input type=\"number\" id=\"trueEvals\" ng-model=\"editDampening.evalTrueSetting\" class=\"form-control\" ng-minlength=\"1\" required>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\" for=\"totalEvals\">\n      Total Evals\n    </label>\n    <div class=\"col-md-6\">\n      <input type=\"number\" id=\"totalEvals\" ng-model=\"editDampening.evalTotalSetting\" class=\"form-control\" ng-minlength=\"1\" required>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\" for=\"evalPeriod\">\n      Eval Period\n    </label>\n    <div class=\"col-md-6\">\n      <input type=\"number\" id=\"evalPeriod\" ng-model=\"editDampening.evalTimeSetting\" class=\"form-control\" ng-minlength=\"1\" required>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"col-md-offset-4 col-md-6\">\n      <button ng-click=\"dc.saveDampening()\" class=\"btn btn-primary\">Update {{ editDampening.triggerMode }}</button>\n      <button type=\"button\" ng-click=\"dc.getDampenings(trigger.id)\" class=\"btn btn-default\">Cancel</button>\n    </div>\n  </div>\n</div>\n");
$templateCache.put("plugins/alerts/html/definitionsEdit.html","<h1>{{ trigger.name }}</h1>\n<div class=\"col-md-12\">\n  <form class=\"form-horizontal\" name=\"editTriggerForm\">\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerName\">\n        Name\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"triggerName\" ng-model=\"trigger.name\" ng-minlength=\"1\" class=\"form-control\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerEnabled\">\n        Enabled\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"checkbox\" id=\"triggerEnabled\" ng-model=\"trigger.enabled\" class=\"checkbox\" >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerDescription\">\n        Description\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"triggerDescription\" ng-model=\"trigger.description\" class=\"form-control\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerActions\">\n        Actions\n      </label>\n      <div class=\"col-md-6\">\n        <ui-select id=\"triggerActions\" multiple ng-model=\"trigger.actions\" theme=\"bootstrap\" ng-disabled=\"disabled\" close-on-select=\"false\">\n          <ui-select-match placeholder=\"Select action...\">{{$item}}</ui-select-match>\n          <ui-select-choices repeat=\"action in actions | filter:$select.search\">\n            {{ action }}\n          </ui-select-choices>\n        </ui-select>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"safetyEnabled\">\n        Safety Enabled\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"checkbox\" id=\"safetyEnabled\" ng-model=\"trigger.safetyEnabled\" class=\"checkbox\" >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\">\n        Firing Match\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"trigger.firingMatch\" class=\"radio\" value=\"ALL\"> ALL\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"trigger.firingMatch\" class=\"radio\" value=\"ANY\"> ANY\n        </label>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\">\n        Safety Match\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"trigger.safetyMatch\" class=\"radio\" value=\"ALL\"> ALL\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"trigger.safetyMatch\" class=\"radio\" value=\"ANY\"> ANY\n        </label>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\">\n        <h2 class=\"h4\">Dampenings</h2>\n      </label>\n      <div class=\"col-md-6\" ng-include=\"\'plugins/alerts/html/definitionsDampening.html\'\">\n\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\">\n        <h2 class=\"h4\">Conditions</h2>\n      </label>\n      <div class=\"col-md-6\" ng-include=\"\'plugins/alerts/html/definitionsConditions.html\'\">\n\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <button class=\"btn btn-primary\" ng-click=\"dc.saveDefinition()\">Update Trigger</button>\n        <a class=\"btn btn-danger\" ng-click=\"dc.deleteDefinition(trigger.id, trigger.name)\">Delete</a>\n        <button type=\"button\" ng-click=\"dc.allDefinitions()\" class=\"btn btn-default\">Cancel</button>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <alert ng-repeat=\"alertMsg in msgs\" type=\"{{alertMsg.type}}\" close=\"dc.closeAlertMsg($index)\">{{alertMsg.msg}}</alert>\n      </div>\n    </div>\n  </form>\n</div>\n\n\n");
$templateCache.put("plugins/alerts/html/definitionsNew.html","<h1>New Trigger Definition</h1>\n<div class=\"col-md-12\">\n  <form class=\"form-horizontal\" name=\"newTriggerForm\" ng-submit=\"dc.saveDefinition()\">\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerName\">\n        Name\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"triggerName\" ng-model=\"trigger.name\" ng-minlength=\"1\" class=\"form-control\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerEnabled\">\n        Enabled\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"checkbox\" id=\"triggerEnabled\" ng-model=\"trigger.enabled\" class=\"checkbox\" >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerDescription\">\n        Description\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"triggerDescription\" ng-model=\"trigger.description\" class=\"form-control\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerActions\">\n        Actions\n      </label>\n      <div class=\"col-md-6\">\n        <ui-select id=\"triggerActions\" multiple ng-model=\"trigger.actions\" theme=\"bootstrap\" ng-disabled=\"disabled\" close-on-select=\"false\">\n          <ui-select-match placeholder=\"Select action...\">{{$item}}</ui-select-match>\n          <ui-select-choices repeat=\"action in actions | filter:$select.search\">\n            {{ action }}\n          </ui-select-choices>\n        </ui-select>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <button type=\"submit\" class=\"btn btn-primary\">Create Trigger</button>\n        <button type=\"button\" ng-click=\"dc.allDefinitions()\" class=\"btn btn-default\">Cancel</button>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <alert ng-repeat=\"alertMsg in msgs\" type=\"{{alertMsg.type}}\" close=\"dc.closeAlertMsg($index)\">{{alertMsg.msg}}</alert>\n      </div>\n    </div>\n  </form>\n</div>\n");}]); hawtioPluginLoader.addModule("hawkular-ui-components-alerts-templates");