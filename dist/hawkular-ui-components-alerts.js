/// Copyright 2014-2015 Red Hat, Inc. and/or its affiliates
/// and other contributors as indicated by the @author tags.
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///
///   http://www.apache.org/licenses/LICENSE-2.0
///
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.


var HawkularAlerts;
(function (HawkularAlerts) {
    HawkularAlerts.pluginName = "hawkular-alerts";
    HawkularAlerts.log = Logger.get(HawkularAlerts.pluginName);
    HawkularAlerts.templatePath = "plugins/alerts/html";
})(HawkularAlerts || (HawkularAlerts = {}));

var HawkularAlerts;
(function (HawkularAlerts) {
    HawkularAlerts._module = angular.module(HawkularAlerts.pluginName, ['ui.bootstrap', 'ui.select', 'hawkular.services']);
    var tab = undefined;
    HawkularAlerts._module.config(['$locationProvider', '$routeProvider', 'HawtioNavBuilderProvider', function ($locationProvider, $routeProvider, builder) {
        tab = builder.create().id(HawkularAlerts.pluginName).title(function () { return "Alerts"; }).href(function () { return "/alerts"; }).subPath("Dashboard", "dashboard", builder.join(HawkularAlerts.templatePath, 'dashboard.html')).subPath("Definitions", "definitions", builder.join(HawkularAlerts.templatePath, 'definitions.html')).subPath("Notifiers", "notifiers", builder.join(HawkularAlerts.templatePath, 'notifiers.html')).build();
        builder.configureRouting($routeProvider, tab);
        $locationProvider.html5Mode(true);
    }]);
    HawkularAlerts._module.run(['HawtioNav', function (HawtioNav) {
        HawtioNav.add(tab);
    }]);
    hawtioPluginLoader.addModule(HawkularAlerts.pluginName);
})(HawkularAlerts || (HawkularAlerts = {}));

var HawkularAlerts;
(function (HawkularAlerts) {
    ;
    var DashboardController = (function () {
        function DashboardController($scope, $interval, $log, HawkularAlert) {
            var _this = this;
            this.$scope = $scope;
            this.$interval = $interval;
            this.$log = $log;
            this.HawkularAlert = HawkularAlert;
            $scope.msgs = [];
            $scope.refresh = {
                interval: 2000
            };
            $scope.showRefresh = false;
            var oneHour = 1 * 60 * 60 * 1000;
            var endTime = Date.now() + oneHour;
            var startTime = endTime - (1.5 * oneHour);
            this.g = Graph.getInstance();
            this.g.init('alertsDashboard', 900, { top: 100, left: 125, bottom: 0, right: 0 }, startTime, endTime, function (series, timestamp) {
                var sanitizedSeries = series.substring(0, series.lastIndexOf('(')).trim();
                $scope.$apply(function () {
                    $scope.legend = _this.g.getEvent(sanitizedSeries, timestamp);
                });
            });
            this.getAlerts();
            this.stopInterval = $interval(function () {
                _this.getAlerts();
            }, $scope.refresh.interval);
            $scope.$on('$destroy', function () {
                _this.cancelRefresh();
            });
        }
        DashboardController.prototype.showRefreshForm = function () {
            this.$scope.showRefresh = true;
        };
        DashboardController.prototype.hideRefreshForm = function () {
            this.$scope.showRefresh = false;
        };
        DashboardController.prototype.updateRefresh = function () {
            var _this = this;
            this.$scope.showRefresh = false;
            this.cancelRefresh();
            this.stopInterval = this.$interval(function () {
                _this.getAlerts();
            }, this.$scope.refresh.interval);
        };
        DashboardController.prototype.closeAlertMsg = function (index) {
            this.$scope.msgs.splice(index, 1);
        };
        DashboardController.prototype.getAlerts = function () {
            var _this = this;
            this.HawkularAlert.Alert.query(function (alerts) {
                var alertsLength = alerts.length;
                for (var i = 0; i < alertsLength; i++) {
                    var alert = alerts[i];
                    alert.name = alert.triggerId;
                    alert.date = new Date(alert.time);
                    alert.description = alert.evalSets.toString();
                    _this.g.addEvent(alert);
                }
            }, function (reason) {
                _this.addAlertMsg(reason);
            });
        };
        DashboardController.prototype.cancelRefresh = function () {
            this.$interval.cancel(this.stopInterval);
        };
        DashboardController.prototype.addAlertMsg = function (reason) {
            var newAlert = { type: 'danger', msg: '' };
            if (reason.data && reason.data.errorMsg) {
                newAlert.msg = reason.data.errorMsg;
            }
            else {
                newAlert.msg = reason.statusText;
            }
            this.$scope.msgs.push(newAlert);
        };
        DashboardController.$inject = ['$scope', '$interval', '$log', 'HawkularAlert'];
        return DashboardController;
    })();
    HawkularAlerts.DashboardController = DashboardController;
    ;
    HawkularAlerts._module.controller('HawkularAlerts.DashboardController', DashboardController);
    var Graph = (function () {
        function Graph() {
            this._initialized = false;
            this._data = [];
            this._seriesIndexes = [];
            this._storage = [];
            if (Graph._instance) {
                throw new Error("Something error in Graph singleton initialization");
            }
            Graph._instance = this;
        }
        Graph.getInstance = function () {
            if (Graph._instance === null) {
                Graph._instance = new Graph();
            }
            return Graph._instance;
        };
        Graph.prototype.init = function (dashboardId, width, margin, startTime, endTime, hoverCallBack) {
            var _this = this;
            this._initialized = true;
            this._chartPlaceholder = document.getElementById(dashboardId);
            this._width = width;
            this._margin = margin;
            this._startTime = startTime;
            this._endTime = endTime;
            if (this._scaleDomain) {
                this._startTime = this._scaleDomain[0];
                this._endTime = this._scaleDomain[1];
            }
            this._color = d3.scale.category10();
            this._graph = d3.chart.eventDrops().start(new Date(this._startTime)).end(new Date(this._endTime)).eventColor(function (datum, index) {
                return _this._color(index);
            }).width(this._width).margin(this._margin).axisFormat(function (xAxis) {
                xAxis.ticks(5);
            }).eventHover(function (el) {
                var series = el.parentNode.firstChild.innerHTML;
                var timestamp = d3.select(el).data()[0];
                hoverCallBack(series, timestamp);
            }).eventZoom(function (scale) {
                _this._scaleDomain = scale.domain();
            });
            this._element = d3.select(this._chartPlaceholder).append('div').datum(this._data);
            this._data = this._element.datum();
            this._graph(this._element);
        };
        Graph.prototype.addEvent = function (event) {
            if (this._initialized) {
                if (this._storage[event.name] === undefined) {
                    var newSeries = [];
                    newSeries[event.date] = event;
                    this._storage[event.name] = newSeries;
                    this._seriesIndexes.push(event.name);
                    var newLine = {
                        name: event.name,
                        dates: [event.date]
                    };
                    this._data.push(newLine);
                    if (this._scaleDomain) {
                        this._graph.start(this._scaleDomain[0]);
                        this._graph.end(this._scaleDomain[1]);
                    }
                    this._graph(this._element);
                }
                else {
                    if (this._storage[event.name][event.date] === undefined) {
                        this._storage[event.name][event.date] = event;
                        var i = this._seriesIndexes.indexOf(event.name);
                        this._data[i].dates.push(event.date);
                        if (this._scaleDomain) {
                            this._graph.start(this._scaleDomain[0]);
                            this._graph.end(this._scaleDomain[1]);
                        }
                        this._graph(this._element);
                    }
                }
            }
        };
        Graph.prototype.getEvent = function (name, date) {
            if (this._initialized) {
                if (this._storage[name] !== undefined && this._storage[name][date] !== undefined) {
                    return this._storage[name][date];
                }
            }
        };
        Graph._instance = null;
        return Graph;
    })();
    HawkularAlerts.Graph = Graph;
})(HawkularAlerts || (HawkularAlerts = {}));

var HawkularAlerts;
(function (HawkularAlerts) {
    ;
    var DefinitionsController = (function () {
        function DefinitionsController($scope, $window, $log, HawkularAlert) {
            this.$scope = $scope;
            this.$window = $window;
            this.$log = $log;
            this.HawkularAlert = HawkularAlert;
            $scope.status = 'all';
            $scope.msgs = [];
            this.allDefinitions();
            this.allNotifiers();
        }
        DefinitionsController.prototype.allDefinitions = function () {
            this.$scope.status = 'all';
            this.$scope.triggers = this.HawkularAlert.Trigger.query();
        };
        DefinitionsController.prototype.newDefinition = function () {
            this.$scope.status = 'new';
            this.$scope.trigger = { match: "ALL", enabled: true };
            this.$scope.dampening = { type: 'RELAXED_COUNT', evalTrueSetting: 1, evalTotalSetting: 1, evalTimeSetting: 0 };
            this.$scope.statusDampening = { status: 'new' };
            this.allNotifiers();
        };
        DefinitionsController.prototype.saveDefinition = function () {
            var _this = this;
            this.$scope.msgs = [];
            if (this.$scope.status === 'new') {
                this.HawkularAlert.Trigger.save(this.$scope.trigger, function (trigger) {
                    _this.$scope.dampening.triggerId = trigger.id;
                    _this.HawkularAlert.Dampening.save(_this.$scope.dampening, function (dampening) {
                        _this.viewDefinition(dampening.triggerId);
                    }, function (reasonDampening) {
                        _this.addAlertMsg(reasonDampening);
                    });
                }, function (reason) {
                    _this.addAlertMsg(reason);
                });
            }
            if (this.$scope.status === 'edit') {
                this.HawkularAlert.Trigger.put({ triggerId: this.$scope.trigger.id }, this.$scope.trigger, function () {
                    _this.HawkularAlert.Dampening.put(_this.$scope.dampening, function () {
                        _this.allDefinitions();
                    }, function (reasonDampening) {
                        _this.addAlertMsg(reasonDampening);
                    });
                }, function (reason) {
                    _this.addAlertMsg(reason);
                });
            }
        };
        DefinitionsController.prototype.viewDefinition = function (id) {
            var _this = this;
            this.$scope.status = 'edit';
            this.$scope.trigger = {};
            this.HawkularAlert.Trigger.get({ triggerId: id }, function (response) {
                _this.$scope.trigger = response;
            }, function (reason) {
                _this.addAlertMsg(reason);
            });
            this.allConditions(id);
            this.getDampening(id);
        };
        DefinitionsController.prototype.deleteDefinition = function (id) {
            var _this = this;
            if (this.$window.confirm('Do you want to delete ' + id + ' ?')) {
                this.$scope.msgs = [];
                this.HawkularAlert.Trigger.delete({ triggerId: id }, function () {
                    _this.HawkularAlert.Dampening.delete({ triggerId: id }, function () {
                        _this.deleteAllConditions(id);
                        _this.allDefinitions();
                    }, function (reasonDampening) {
                        _this.addAlertMsg(reasonDampening);
                    });
                }, function (reason) {
                    _this.addAlertMsg(reason);
                });
            }
        };
        DefinitionsController.prototype.closeAlertMsg = function (index) {
            this.$scope.msgs.splice(index, 1);
        };
        DefinitionsController.prototype.addAlertMsg = function (reason) {
            var newAlert = { type: 'danger', msg: '' };
            if (reason.data.errorMsg) {
                newAlert.msg = reason.data.errorMsg;
            }
            else {
                newAlert.msg = reason.statusText;
            }
            this.$scope.msgs.push(newAlert);
        };
        DefinitionsController.prototype.allNotifiers = function () {
            var _this = this;
            this.$scope.notifiers = [];
            this.HawkularAlert.Notifier.query(function (result) {
                _this.$scope.notifiers = result;
            }, function (reason) {
                _this.addAlertMsg(reason);
            });
        };
        DefinitionsController.prototype.allConditions = function (triggerId) {
            var _this = this;
            this.$scope.conditions = [];
            this.$scope.statusCondition = { status: '', conditionId: '' };
            this.HawkularAlert.Trigger.conditions({ triggerId: triggerId }, function (conditionsList) {
                var conditionClass = {};
                for (var i = 0; i < conditionsList.length; i++) {
                    conditionClass[conditionsList[i].conditionId] = conditionsList[i].className;
                }
                for (i = 0; i < conditionsList.length; i++) {
                    var condition = conditionsList[i];
                    _this.HawkularAlert[condition.className].get({ conditionId: condition.conditionId }, function (conditionByType) {
                        var className = conditionClass[conditionByType.conditionId];
                        var newCondition = {
                            conditionId: conditionByType.conditionId,
                            className: className,
                            condition: conditionByType,
                            description: _this.getDescription(className, conditionByType)
                        };
                        _this.$scope.conditions.push(newCondition);
                    }, function (reasonType) {
                        _this.addAlertMsg(reasonType);
                    });
                }
            }, function (reasonList) {
                _this.addAlertMsg(reasonList);
            });
        };
        DefinitionsController.prototype.getDampening = function (triggerId) {
            var _this = this;
            this.$scope.dampening = {};
            this.$scope.statusDampening = { status: 'view' };
            this.HawkularAlert.Dampening.get({ triggerId: triggerId }, function (dampening) {
                _this.$scope.dampening = dampening;
            }, function (reason) {
                _this.$scope.dampening = { triggerId: triggerId, type: 'RELAXED_COUNT', evalTrueSetting: 1, evalTotalSetting: 1, evalTimeSetting: 0 };
                _this.HawkularAlert.Dampening.save(_this.$scope.dampening, function (reasonDampening) {
                    _this.addAlertMsg(reasonDampening);
                });
            });
        };
        DefinitionsController.prototype.saveDampening = function () {
            var _this = this;
            this.HawkularAlert.Dampening.put(this.$scope.dampening, function () {
                _this.$scope.statusDampening.status = 'view';
            }, function (reason) {
                _this.addAlertMsg(reason);
            });
        };
        DefinitionsController.prototype.deleteDampening = function (triggerId) {
            var _this = this;
            this.HawkularAlert.Dampening.delete({ triggerId: triggerId }, function (reason) {
                _this.addAlertMsg(reason);
            });
        };
        DefinitionsController.prototype.viewDampening = function (triggerId) {
            this.$scope.statusDampening = { status: 'edit' };
        };
        DefinitionsController.prototype.getDescription = function (className, condition) {
            var description = "";
            var op = "";
            if (className === 'AvailabilityCondition') {
                description = condition.dataId + " is " + condition.operator;
            }
            else if (className === 'CompareCondition') {
                op = this.getOperator(condition.operator);
                description = condition.data1Id + " " + op + " " + "(" + condition.data2Multiplier + " * " + condition.data2Id + ")";
            }
            else if (className === 'StringCondition') {
                description = condition.dataId + " " + condition.operator + " '" + condition.pattern + "' (A/a " + condition.ignoreCase + ")";
            }
            else if (className === 'ThresholdCondition') {
                op = this.getOperator(condition.operator);
                description = condition.dataId + " " + op + " " + condition.threshold;
            }
            else if (className === 'ThresholdRangeCondition') {
                var low = "[";
                var high = "]";
                if (condition.operatorLow !== 'INCLUSIVE') {
                    low = "(";
                }
                if (condition.operatorHigh !== 'INCLUSIVE') {
                    high = ")";
                }
                var inout = " in ";
                if (!condition.inRange) {
                    inout = " out ";
                }
                description = condition.dataId + inout + low + condition.thresholdLow + ", " + condition.thresholdHigh + high;
            }
            return description;
        };
        DefinitionsController.prototype.getOperator = function (opCode) {
            var op = "";
            if (opCode === 'GT') {
                op = ">";
            }
            else if (opCode === 'GTE') {
                op = ">=";
            }
            else if (opCode === 'LT') {
                op = "<";
            }
            else if (opCode === 'LTE') {
                op = "<=";
            }
            return op;
        };
        DefinitionsController.prototype.newCondition = function () {
            this.$scope.statusCondition = { status: 'new', conditionId: '', className: 'AvailabilityCondition' };
            this.$scope.editCondition = { triggerId: this.$scope.trigger.id, conditionSetSize: 1, conditionSetIndex: 1 };
            this.$scope.classNames = ['AvailabilityCondition', 'CompareCondition', 'StringCondition', 'ThresholdCondition', 'ThresholdRangeCondition'];
            this.changeConditionType();
        };
        DefinitionsController.prototype.changeConditionType = function () {
            if (this.$scope.statusCondition.className === 'AvailabilityCondition') {
                this.$scope.editCondition.dataId = '';
                this.$scope.editCondition.operator = 'DOWN';
            }
            else if (this.$scope.statusCondition.className === 'CompareCondition') {
                this.$scope.editCondition.data1Id = '';
                this.$scope.editCondition.operator = 'LT';
                this.$scope.editCondition.data2Multiplier = 1.0;
                this.$scope.editCondition.data2Id = '';
            }
            else if (this.$scope.statusCondition.className === 'StringCondition') {
                this.$scope.editCondition.dataId = '';
                this.$scope.editCondition.operator = 'EQUAL';
                this.$scope.editCondition.pattern = '';
                this.$scope.editCondition.ignoreCase = false;
            }
            else if (this.$scope.statusCondition.className === 'ThresholdCondition') {
                this.$scope.editCondition.dataId = '';
                this.$scope.editCondition.operator = 'LT';
                this.$scope.editCondition.threshold = 0.0;
            }
            else if (this.$scope.statusCondition.className === 'ThresholdRangeCondition') {
                this.$scope.editCondition.dataId = '';
                this.$scope.editCondition.operatorLow = 'INCLUSIVE';
                this.$scope.editCondition.operatorHigh = 'INCLUSIVE';
                this.$scope.editCondition.thresholdLow = 0.0;
                this.$scope.editCondition.thresholdHigh = 0.0;
                this.$scope.editCondition.inRange = true;
            }
        };
        DefinitionsController.prototype.viewCondition = function (condition) {
            this.$scope.statusCondition = { status: 'edit', conditionId: condition.conditionId, className: condition.className };
            this.$scope.editCondition = condition.condition;
        };
        DefinitionsController.prototype.saveCondition = function () {
            var _this = this;
            if (this.$scope.statusCondition.status === 'new') {
                var updatedCondition = this.prepareCondition(this.$scope.statusCondition.className, this.$scope.editCondition);
                this.HawkularAlert[this.$scope.statusCondition.className].save(updatedCondition, function () {
                    _this.$scope.statusCondition = { status: '' };
                    _this.viewDefinition(_this.$scope.trigger.id);
                }, function (reason) {
                    _this.addAlertMsg(reason);
                });
            }
            else {
                this.HawkularAlert[this.$scope.statusCondition.className].delete({ conditionId: this.$scope.editCondition.conditionId }, function () {
                    var updatedCondition = _this.prepareCondition(_this.$scope.statusCondition.className, _this.$scope.editCondition);
                    _this.HawkularAlert[_this.$scope.statusCondition.className].save(updatedCondition, function () {
                        _this.$scope.statusCondition = { status: '' };
                        _this.viewDefinition(_this.$scope.trigger.id);
                    }, function (reason) {
                        _this.addAlertMsg(reason);
                    });
                }, function (reasonDelete) {
                    _this.addAlertMsg(reasonDelete);
                });
            }
        };
        DefinitionsController.prototype.deleteCondition = function (conditionId, className) {
            var _this = this;
            if (this.$window.confirm('Do you want to delete ' + conditionId + ' ?')) {
                this.$log.debug('deleteCondition(' + conditionId + ')');
                this.$scope.msgs = [];
                this.HawkularAlert[className].delete({ conditionId: conditionId }, function () {
                    _this.$scope.statusCondition = { status: '' };
                    _this.viewDefinition(_this.$scope.trigger.id);
                }, function (reasonDelete) {
                    _this.addAlertMsg(reasonDelete);
                });
            }
        };
        DefinitionsController.prototype.deleteAllConditions = function (triggerId) {
            var _this = this;
            this.HawkularAlert.Trigger.conditions({ triggerId: triggerId }, function (conditionsList) {
                var conditionClass = {};
                for (var i = 0; i < conditionsList.length; i++) {
                    conditionClass[conditionsList[i].conditionId] = conditionsList[i].className;
                }
                for (i = 0; i < conditionsList.length; i++) {
                    var condition = conditionsList[i];
                    _this.HawkularAlert[condition.className].delete({ conditionId: condition.conditionId }, function (reasonType) {
                        _this.addAlertMsg(reasonType);
                    });
                }
            }, function (reasonList) {
                _this.addAlertMsg(reasonList);
            });
        };
        DefinitionsController.prototype.cancelCondition = function () {
            this.$scope.statusCondition = { status: '' };
        };
        DefinitionsController.prototype.reloadDefinitions = function () {
            this.$log.info('reloadDefinitions()');
            this.HawkularAlert.Alert.reload();
        };
        DefinitionsController.prototype.prepareCondition = function (className, condition) {
            var updatedCondition = {};
            updatedCondition.triggerId = condition.triggerId;
            updatedCondition.conditionSetSize = condition.conditionSetSize;
            updatedCondition.conditionSetIndex = condition.conditionSetIndex;
            if (className === 'AvailabilityCondition') {
                updatedCondition.dataId = condition.dataId;
                updatedCondition.operator = condition.operator;
            }
            else if (className === 'CompareCondition') {
                updatedCondition.data1Id = condition.data1Id;
                updatedCondition.operator = condition.operator;
                updatedCondition.data2Multiplier = condition.data2Multiplier;
                updatedCondition.data2Id = condition.data2Id;
            }
            else if (className === 'StringCondition') {
                updatedCondition.dataId = condition.dataId;
                updatedCondition.operator = condition.operator;
                updatedCondition.pattern = condition.pattern;
                updatedCondition.ignoreCase = condition.ignoreCase;
            }
            else if (className === 'ThresholdCondition') {
                updatedCondition.dataId = condition.dataId;
                updatedCondition.operator = condition.operator;
                updatedCondition.threshold = condition.threshold;
            }
            else if (className === 'ThresholdRangeCondition') {
                updatedCondition.dataId = condition.dataId;
                updatedCondition.operatorLow = condition.operatorLow;
                updatedCondition.operatorHigh = condition.operatorHigh;
                updatedCondition.thresholdLow = condition.thresholdLow;
                updatedCondition.thresholdHigh = condition.thresholdHigh;
                updatedCondition.inRange = condition.inRange;
            }
            return updatedCondition;
        };
        DefinitionsController.$inject = ['$scope', '$window', '$log', 'HawkularAlert'];
        return DefinitionsController;
    })();
    HawkularAlerts.DefinitionsController = DefinitionsController;
    ;
    HawkularAlerts._module.controller('HawkularAlerts.DefinitionsController', DefinitionsController);
})(HawkularAlerts || (HawkularAlerts = {}));

var HawkularAlerts;
(function (HawkularAlerts) {
    ;
    var NotifiersController = (function () {
        function NotifiersController($scope, $interval, $log, HawkularAlert) {
            this.$scope = $scope;
            this.$interval = $interval;
            this.$log = $log;
            this.HawkularAlert = HawkularAlert;
            $scope.status = 'all';
            $scope.msgs = [];
            $scope.notifiers = [];
            $scope.notifierTypes = [];
            this.allNotifiers();
        }
        NotifiersController.prototype.allNotifiers = function () {
            var _this = this;
            this.$scope.status = 'all';
            this.$scope.notifiers = [];
            this.HawkularAlert.Notifier.query(function (notifiers) {
                for (var i = 0; i < notifiers.length; i++) {
                    _this.HawkularAlert.Notifier.get({ notifierId: notifiers[i] }, function (notifier) {
                        var newNotifier = { notifierId: '', notifierType: notifier.NotifierType, description: notifier.description };
                        if (notifier.NotifierID) {
                            newNotifier.notifierId = notifier.NotifierID;
                        }
                        if (notifier.NotifierId) {
                            newNotifier.notifierId = notifier.NotifierId;
                        }
                        _this.$scope.notifiers.push(newNotifier);
                    }, function (reasonNotifier) {
                        _this.addAlertMsg(reasonNotifier);
                    });
                }
            }, function (reason) {
                _this.addAlertMsg(reason);
            });
        };
        NotifiersController.prototype.newNotifier = function () {
            var _this = this;
            this.$scope.status = 'new';
            this.$scope.notifier = {};
            this.$scope.notifierTypes = [];
            this.HawkularAlert.NotifierType.query(function (notifierTypes) {
                for (var i = 0; i < notifierTypes.length; i++) {
                    if (i === 0) {
                        _this.$scope.notifier.notifierType = notifierTypes[0];
                    }
                    _this.$scope.notifierTypes.push(notifierTypes[i]);
                }
            });
        };
        NotifiersController.prototype.viewNotifier = function (notifierId) {
            var _this = this;
            this.$scope.status = 'edit';
            this.$scope.notifier = {};
            this.$scope.notifierTypes = [];
            this.HawkularAlert.Notifier.get({ notifierId: notifierId }, function (notifier) {
                _this.$scope.notifier = { notifierId: '', notifierType: notifier.NotifierType, description: notifier.description };
                if (notifier.NotifierID) {
                    _this.$scope.notifier.notifierId = notifier.NotifierID;
                }
                if (notifier.NotifierId) {
                    _this.$scope.notifier.notifierId = notifier.NotifierId;
                }
            }, function (reason) {
                _this.addAlertMsg(reason);
            });
            this.HawkularAlert.NotifierType.query(function (notifierTypes) {
                for (var i = 0; i < notifierTypes.length; i++) {
                    _this.$scope.notifierTypes.push(notifierTypes[i]);
                }
            });
        };
        NotifiersController.prototype.saveNotifier = function () {
            var _this = this;
            var newNotifier = {
                NotifierId: this.$scope.notifier.notifierId,
                NotifierType: this.$scope.notifier.notifierType,
                description: this.$scope.notifier.description
            };
            if (this.$scope.status === 'new') {
                this.HawkularAlert.Notifier.save(newNotifier, function () {
                    _this.allNotifiers();
                }, function (reason) {
                    _this.addAlertMsg(reason);
                });
            }
            else {
                this.HawkularAlert.Notifier.put({ notifierId: newNotifier.NotifierId }, newNotifier, function () {
                    _this.allNotifiers();
                }, function (reason) {
                    _this.addAlertMsg(reason);
                });
            }
        };
        NotifiersController.prototype.deleteNotifier = function (notifierId) {
            var _this = this;
            this.HawkularAlert.Notifier.delete({ notifierId: notifierId }, function () {
                _this.allNotifiers();
            }, function (reason) {
                _this.addAlertMsg(reason);
            });
        };
        NotifiersController.prototype.addAlertMsg = function (reason) {
            var newAlert = { type: 'danger', msg: '' };
            if (reason.data.errorMsg) {
                newAlert.msg = reason.data.errorMsg;
            }
            else {
                newAlert.msg = reason.statusText;
            }
            this.$scope.msgs.push(newAlert);
        };
        NotifiersController.prototype.closeAlertMsg = function (index) {
            this.$scope.msgs.splice(index, 1);
        };
        NotifiersController.$inject = ['$scope', '$interval', '$log', 'HawkularAlert'];
        return NotifiersController;
    })();
    HawkularAlerts.NotifiersController = NotifiersController;
    ;
    HawkularAlerts._module.controller('HawkularAlerts.NotifiersController', NotifiersController);
})(HawkularAlerts || (HawkularAlerts = {}));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluY2x1ZGVzLmpzIiwiL1VzZXJzL2FtbWVuZG9uY2EvRHJvcGJveC93b3JrL3dvcmtzcGFjZS9yZWRoYXQvaGF3a3VsYXItdWktY29tcG9uZW50cy9hbGVydHMvdHMvYWxlcnRzR2xvYmFscy50cyIsIi9Vc2Vycy9hbW1lbmRvbmNhL0Ryb3Bib3gvd29yay93b3Jrc3BhY2UvcmVkaGF0L2hhd2t1bGFyLXVpLWNvbXBvbmVudHMvYWxlcnRzL3RzL2FsZXJ0c1BsdWdpbi50cyIsIi9Vc2Vycy9hbW1lbmRvbmNhL0Ryb3Bib3gvd29yay93b3Jrc3BhY2UvcmVkaGF0L2hhd2t1bGFyLXVpLWNvbXBvbmVudHMvYWxlcnRzL3RzL2Rhc2hib2FyZC50cyIsIi9Vc2Vycy9hbW1lbmRvbmNhL0Ryb3Bib3gvd29yay93b3Jrc3BhY2UvcmVkaGF0L2hhd2t1bGFyLXVpLWNvbXBvbmVudHMvYWxlcnRzL3RzL2RlZmluaXRpb25zLnRzIiwiL1VzZXJzL2FtbWVuZG9uY2EvRHJvcGJveC93b3JrL3dvcmtzcGFjZS9yZWRoYXQvaGF3a3VsYXItdWktY29tcG9uZW50cy9hbGVydHMvdHMvbm90aWZpZXJzLnRzIl0sIm5hbWVzIjpbIkhhd2t1bGFyQWxlcnRzIiwiSGF3a3VsYXJBbGVydHMuRGFzaGJvYXJkQ29udHJvbGxlciIsIkhhd2t1bGFyQWxlcnRzLkRhc2hib2FyZENvbnRyb2xsZXIuY29uc3RydWN0b3IiLCJIYXdrdWxhckFsZXJ0cy5EYXNoYm9hcmRDb250cm9sbGVyLnNob3dSZWZyZXNoRm9ybSIsIkhhd2t1bGFyQWxlcnRzLkRhc2hib2FyZENvbnRyb2xsZXIuaGlkZVJlZnJlc2hGb3JtIiwiSGF3a3VsYXJBbGVydHMuRGFzaGJvYXJkQ29udHJvbGxlci51cGRhdGVSZWZyZXNoIiwiSGF3a3VsYXJBbGVydHMuRGFzaGJvYXJkQ29udHJvbGxlci5jbG9zZUFsZXJ0TXNnIiwiSGF3a3VsYXJBbGVydHMuRGFzaGJvYXJkQ29udHJvbGxlci5nZXRBbGVydHMiLCJIYXdrdWxhckFsZXJ0cy5EYXNoYm9hcmRDb250cm9sbGVyLmNhbmNlbFJlZnJlc2giLCJIYXdrdWxhckFsZXJ0cy5EYXNoYm9hcmRDb250cm9sbGVyLmFkZEFsZXJ0TXNnIiwiSGF3a3VsYXJBbGVydHMuR3JhcGgiLCJIYXdrdWxhckFsZXJ0cy5HcmFwaC5jb25zdHJ1Y3RvciIsIkhhd2t1bGFyQWxlcnRzLkdyYXBoLmdldEluc3RhbmNlIiwiSGF3a3VsYXJBbGVydHMuR3JhcGguaW5pdCIsIkhhd2t1bGFyQWxlcnRzLkdyYXBoLmFkZEV2ZW50IiwiSGF3a3VsYXJBbGVydHMuR3JhcGguZ2V0RXZlbnQiLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIiLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIuY29uc3RydWN0b3IiLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIuYWxsRGVmaW5pdGlvbnMiLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIubmV3RGVmaW5pdGlvbiIsIkhhd2t1bGFyQWxlcnRzLkRlZmluaXRpb25zQ29udHJvbGxlci5zYXZlRGVmaW5pdGlvbiIsIkhhd2t1bGFyQWxlcnRzLkRlZmluaXRpb25zQ29udHJvbGxlci52aWV3RGVmaW5pdGlvbiIsIkhhd2t1bGFyQWxlcnRzLkRlZmluaXRpb25zQ29udHJvbGxlci5kZWxldGVEZWZpbml0aW9uIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLmNsb3NlQWxlcnRNc2ciLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIuYWRkQWxlcnRNc2ciLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIuYWxsTm90aWZpZXJzIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLmFsbENvbmRpdGlvbnMiLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIuZ2V0RGFtcGVuaW5nIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLnNhdmVEYW1wZW5pbmciLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIuZGVsZXRlRGFtcGVuaW5nIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLnZpZXdEYW1wZW5pbmciLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIuZ2V0RGVzY3JpcHRpb24iLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIuZ2V0T3BlcmF0b3IiLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIubmV3Q29uZGl0aW9uIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLmNoYW5nZUNvbmRpdGlvblR5cGUiLCJIYXdrdWxhckFsZXJ0cy5EZWZpbml0aW9uc0NvbnRyb2xsZXIudmlld0NvbmRpdGlvbiIsIkhhd2t1bGFyQWxlcnRzLkRlZmluaXRpb25zQ29udHJvbGxlci5zYXZlQ29uZGl0aW9uIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLmRlbGV0ZUNvbmRpdGlvbiIsIkhhd2t1bGFyQWxlcnRzLkRlZmluaXRpb25zQ29udHJvbGxlci5kZWxldGVBbGxDb25kaXRpb25zIiwiSGF3a3VsYXJBbGVydHMuRGVmaW5pdGlvbnNDb250cm9sbGVyLmNhbmNlbENvbmRpdGlvbiIsIkhhd2t1bGFyQWxlcnRzLkRlZmluaXRpb25zQ29udHJvbGxlci5yZWxvYWREZWZpbml0aW9ucyIsIkhhd2t1bGFyQWxlcnRzLkRlZmluaXRpb25zQ29udHJvbGxlci5wcmVwYXJlQ29uZGl0aW9uIiwiSGF3a3VsYXJBbGVydHMuTm90aWZpZXJzQ29udHJvbGxlciIsIkhhd2t1bGFyQWxlcnRzLk5vdGlmaWVyc0NvbnRyb2xsZXIuY29uc3RydWN0b3IiLCJIYXdrdWxhckFsZXJ0cy5Ob3RpZmllcnNDb250cm9sbGVyLmFsbE5vdGlmaWVycyIsIkhhd2t1bGFyQWxlcnRzLk5vdGlmaWVyc0NvbnRyb2xsZXIubmV3Tm90aWZpZXIiLCJIYXdrdWxhckFsZXJ0cy5Ob3RpZmllcnNDb250cm9sbGVyLnZpZXdOb3RpZmllciIsIkhhd2t1bGFyQWxlcnRzLk5vdGlmaWVyc0NvbnRyb2xsZXIuc2F2ZU5vdGlmaWVyIiwiSGF3a3VsYXJBbGVydHMuTm90aWZpZXJzQ29udHJvbGxlci5kZWxldGVOb3RpZmllciIsIkhhd2t1bGFyQWxlcnRzLk5vdGlmaWVyc0NvbnRyb2xsZXIuYWRkQWxlcnRNc2ciLCJIYXdrdWxhckFsZXJ0cy5Ob3RpZmllcnNDb250cm9sbGVyLmNsb3NlQWxlcnRNc2ciXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUNlQSxJQUFPLGNBQWMsQ0FRcEI7QUFSRCxXQUFPLGNBQWMsRUFBQyxDQUFDO0lBRVZBLHlCQUFVQSxHQUFHQSxpQkFBaUJBLENBQUNBO0lBRS9CQSxrQkFBR0EsR0FBa0JBLE1BQU1BLENBQUNBLEdBQUdBLENBQUNBLHlCQUFVQSxDQUFDQSxDQUFDQTtJQUU1Q0EsMkJBQVlBLEdBQUdBLHFCQUFxQkEsQ0FBQ0E7QUFFbERBLENBQUNBLEVBUk0sY0FBYyxLQUFkLGNBQWMsUUFRcEI7O0FDUEQsSUFBTyxjQUFjLENBeUJwQjtBQXpCRCxXQUFPLGNBQWMsRUFBQyxDQUFDO0lBRVZBLHNCQUFPQSxHQUFHQSxPQUFPQSxDQUFDQSxNQUFNQSxDQUFDQSxjQUFjQSxDQUFDQSxVQUFVQSxFQUFFQSxDQUFDQSxjQUFjQSxFQUFFQSxXQUFXQSxFQUFFQSxtQkFBbUJBLENBQUNBLENBQUNBLENBQUNBO0lBRW5IQSxJQUFJQSxHQUFHQSxHQUFPQSxTQUFTQSxDQUFDQTtJQUV4QkEsc0JBQU9BLENBQUNBLE1BQU1BLENBQUNBLENBQUNBLG1CQUFtQkEsRUFBRUEsZ0JBQWdCQSxFQUFFQSwwQkFBMEJBLEVBQUVBLFVBQUNBLGlCQUFpQkEsRUFBRUEsY0FBc0NBLEVBQUVBLE9BQW9DQTtRQUNqTEEsR0FBR0EsR0FBR0EsT0FBT0EsQ0FBQ0EsTUFBTUEsRUFBRUEsQ0FDbkJBLEVBQUVBLENBQUNBLGNBQWNBLENBQUNBLFVBQVVBLENBQUNBLENBQzdCQSxLQUFLQSxDQUFDQSxjQUFNQSxlQUFRQSxFQUFSQSxDQUFRQSxDQUFDQSxDQUNyQkEsSUFBSUEsQ0FBQ0EsY0FBTUEsZ0JBQVNBLEVBQVRBLENBQVNBLENBQUNBLENBQ3JCQSxPQUFPQSxDQUFDQSxXQUFXQSxFQUFFQSxXQUFXQSxFQUFFQSxPQUFPQSxDQUFDQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxZQUFZQSxFQUFFQSxnQkFBZ0JBLENBQUNBLENBQUNBLENBQzlGQSxPQUFPQSxDQUFDQSxhQUFhQSxFQUFFQSxhQUFhQSxFQUFFQSxPQUFPQSxDQUFDQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxZQUFZQSxFQUFFQSxrQkFBa0JBLENBQUNBLENBQUNBLENBQ3BHQSxPQUFPQSxDQUFDQSxXQUFXQSxFQUFFQSxXQUFXQSxFQUFFQSxPQUFPQSxDQUFDQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxZQUFZQSxFQUFFQSxnQkFBZ0JBLENBQUNBLENBQUNBLENBQzlGQSxLQUFLQSxFQUFFQSxDQUFDQTtRQUNYQSxPQUFPQSxDQUFDQSxnQkFBZ0JBLENBQUNBLGNBQWNBLEVBQUVBLEdBQUdBLENBQUNBLENBQUNBO1FBRTlDQSxpQkFBaUJBLENBQUNBLFNBQVNBLENBQUNBLElBQUlBLENBQUNBLENBQUNBO0lBQ3BDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUVKQSxzQkFBT0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsV0FBV0EsRUFBRUEsVUFBQ0EsU0FBZ0NBO1FBQ3pEQSxTQUFTQSxDQUFDQSxHQUFHQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQTtJQUNyQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFFSkEsa0JBQWtCQSxDQUFDQSxTQUFTQSxDQUFDQSxjQUFjQSxDQUFDQSxVQUFVQSxDQUFDQSxDQUFDQTtBQUMxREEsQ0FBQ0EsRUF6Qk0sY0FBYyxLQUFkLGNBQWMsUUF5QnBCOztBQzFCRCxJQUFPLGNBQWMsQ0FrUnBCO0FBbFJELFdBQU8sY0FBYyxFQUFDLENBQUM7SUFNbEJBLENBQUNBO0lBRUZBLElBQWFBLG1CQUFtQkE7UUFNNUJDLFNBTlNBLG1CQUFtQkEsQ0FNUkEsTUFBVUEsRUFDVkEsU0FBNkJBLEVBQzdCQSxJQUFtQkEsRUFDbkJBLGFBQWlCQTtZQVR6Q0MsaUJBcUdDQTtZQS9GdUJBLFdBQU1BLEdBQU5BLE1BQU1BLENBQUlBO1lBQ1ZBLGNBQVNBLEdBQVRBLFNBQVNBLENBQW9CQTtZQUM3QkEsU0FBSUEsR0FBSkEsSUFBSUEsQ0FBZUE7WUFDbkJBLGtCQUFhQSxHQUFiQSxhQUFhQSxDQUFJQTtZQUVqQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsR0FBR0EsRUFBRUEsQ0FBQ0E7WUFDakJBLE1BQU1BLENBQUNBLE9BQU9BLEdBQUdBO2dCQUNiQSxRQUFRQSxFQUFFQSxJQUFJQTthQUNqQkEsQ0FBQ0E7WUFDRkEsTUFBTUEsQ0FBQ0EsV0FBV0EsR0FBR0EsS0FBS0EsQ0FBQ0E7WUFFM0JBLElBQUlBLE9BQU9BLEdBQUdBLENBQUNBLEdBQUdBLEVBQUVBLEdBQUdBLEVBQUVBLEdBQUdBLElBQUlBLENBQUNBO1lBQ2pDQSxJQUFJQSxPQUFPQSxHQUFHQSxJQUFJQSxDQUFDQSxHQUFHQSxFQUFFQSxHQUFHQSxPQUFPQSxDQUFDQTtZQUNuQ0EsSUFBSUEsU0FBU0EsR0FBR0EsT0FBT0EsR0FBR0EsQ0FBQ0EsR0FBR0EsR0FBR0EsT0FBT0EsQ0FBQ0EsQ0FBQ0E7WUFFMUNBLElBQUlBLENBQUNBLENBQUNBLEdBQUdBLEtBQUtBLENBQUNBLFdBQVdBLEVBQUVBLENBQUNBO1lBRTdCQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxpQkFBaUJBLEVBQ3pCQSxHQUFHQSxFQUNIQSxFQUFFQSxHQUFHQSxFQUFFQSxHQUFHQSxFQUFFQSxJQUFJQSxFQUFFQSxHQUFHQSxFQUFFQSxNQUFNQSxFQUFFQSxDQUFDQSxFQUFFQSxLQUFLQSxFQUFFQSxDQUFDQSxFQUFFQSxFQUM1Q0EsU0FBU0EsRUFDVEEsT0FBT0EsRUFDUEEsVUFBQ0EsTUFBTUEsRUFBRUEsU0FBU0E7Z0JBSWRBLElBQUlBLGVBQWVBLEdBQUdBLE1BQU1BLENBQUNBLFNBQVNBLENBQUNBLENBQUNBLEVBQUVBLE1BQU1BLENBQUNBLFdBQVdBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLENBQUNBLElBQUlBLEVBQUVBLENBQUNBO2dCQUMxRUEsTUFBTUEsQ0FBQ0EsTUFBTUEsQ0FBQ0E7b0JBQ1ZBLE1BQU1BLENBQUNBLE1BQU1BLEdBQUdBLEtBQUlBLENBQUNBLENBQUNBLENBQUNBLFFBQVFBLENBQUNBLGVBQWVBLEVBQUVBLFNBQVNBLENBQUNBLENBQUNBO2dCQUNoRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDUEEsQ0FBQ0EsQ0FDSkEsQ0FBQ0E7WUFFRkEsSUFBSUEsQ0FBQ0EsU0FBU0EsRUFBRUEsQ0FBQ0E7WUFFakJBLElBQUlBLENBQUNBLFlBQVlBLEdBQUdBLFNBQVNBLENBQUNBO2dCQUMxQkEsS0FBSUEsQ0FBQ0EsU0FBU0EsRUFBRUEsQ0FBQ0E7WUFDckJBLENBQUNBLEVBQUVBLE1BQU1BLENBQUNBLE9BQU9BLENBQUNBLFFBQVFBLENBQUNBLENBQUNBO1lBRTVCQSxNQUFNQSxDQUFDQSxHQUFHQSxDQUFDQSxVQUFVQSxFQUFFQTtnQkFDbkJBLEtBQUlBLENBQUNBLGFBQWFBLEVBQUVBLENBQUNBO1lBQ3pCQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUNQQSxDQUFDQTtRQUVERCw2Q0FBZUEsR0FBZkE7WUFDSUUsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsV0FBV0EsR0FBR0EsSUFBSUEsQ0FBQ0E7UUFDbkNBLENBQUNBO1FBRURGLDZDQUFlQSxHQUFmQTtZQUNJRyxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxXQUFXQSxHQUFHQSxLQUFLQSxDQUFDQTtRQUNwQ0EsQ0FBQ0E7UUFFREgsMkNBQWFBLEdBQWJBO1lBQUFJLGlCQU1DQTtZQUxHQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxXQUFXQSxHQUFHQSxLQUFLQSxDQUFDQTtZQUNoQ0EsSUFBSUEsQ0FBQ0EsYUFBYUEsRUFBRUEsQ0FBQ0E7WUFDckJBLElBQUlBLENBQUNBLFlBQVlBLEdBQUdBLElBQUlBLENBQUNBLFNBQVNBLENBQUNBO2dCQUMvQkEsS0FBSUEsQ0FBQ0EsU0FBU0EsRUFBRUEsQ0FBQ0E7WUFDckJBLENBQUNBLEVBQUVBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLE9BQU9BLENBQUNBLFFBQVFBLENBQUNBLENBQUNBO1FBQ3JDQSxDQUFDQTtRQUVESiwyQ0FBYUEsR0FBYkEsVUFBY0EsS0FBYUE7WUFDdkJLLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLEtBQUtBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBO1FBQ3RDQSxDQUFDQTtRQUVPTCx1Q0FBU0EsR0FBakJBO1lBQUFNLGlCQWdCQ0E7WUFmR0EsSUFBSUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsS0FBS0EsQ0FDMUJBLFVBQUNBLE1BQU1BO2dCQUNIQSxJQUFJQSxZQUFZQSxHQUFHQSxNQUFNQSxDQUFDQSxNQUFNQSxDQUFDQTtnQkFDakNBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLEVBQUVBLENBQUNBLEdBQUdBLFlBQVlBLEVBQUVBLENBQUNBLEVBQUVBLEVBQUVBLENBQUNBO29CQUNwQ0EsSUFBSUEsS0FBS0EsR0FBR0EsTUFBTUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7b0JBQ3RCQSxLQUFLQSxDQUFDQSxJQUFJQSxHQUFHQSxLQUFLQSxDQUFDQSxTQUFTQSxDQUFDQTtvQkFDN0JBLEtBQUtBLENBQUNBLElBQUlBLEdBQUdBLElBQUlBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLENBQUNBO29CQUVsQ0EsS0FBS0EsQ0FBQ0EsV0FBV0EsR0FBR0EsS0FBS0EsQ0FBQ0EsUUFBUUEsQ0FBQ0EsUUFBUUEsRUFBRUEsQ0FBQ0E7b0JBQzlDQSxLQUFJQSxDQUFDQSxDQUFDQSxDQUFDQSxRQUFRQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQTtnQkFDM0JBLENBQUNBO1lBQ0xBLENBQUNBLEVBQUVBLFVBQUNBLE1BQU1BO2dCQUNOQSxLQUFJQSxDQUFDQSxXQUFXQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQTtZQUM3QkEsQ0FBQ0EsQ0FDSkEsQ0FBQ0E7UUFDTkEsQ0FBQ0E7UUFFT04sMkNBQWFBLEdBQXJCQTtZQUNJTyxJQUFJQSxDQUFDQSxTQUFTQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxZQUFZQSxDQUFDQSxDQUFDQTtRQUM3Q0EsQ0FBQ0E7UUFFT1AseUNBQVdBLEdBQW5CQSxVQUFvQkEsTUFBV0E7WUFDM0JRLElBQUlBLFFBQVFBLEdBQUdBLEVBQUNBLElBQUlBLEVBQUVBLFFBQVFBLEVBQUVBLEdBQUdBLEVBQUVBLEVBQUVBLEVBQUNBLENBQUNBO1lBQ3pDQSxFQUFFQSxDQUFDQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxJQUFJQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDdENBLFFBQVFBLENBQUNBLEdBQUdBLEdBQUdBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBO1lBQ3hDQSxDQUFDQTtZQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtnQkFDSkEsUUFBUUEsQ0FBQ0EsR0FBR0EsR0FBR0EsTUFBTUEsQ0FBQ0EsVUFBVUEsQ0FBQ0E7WUFDckNBLENBQUNBO1lBQ0RBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLENBQUNBO1FBQ3BDQSxDQUFDQTtRQW5HY1IsMkJBQU9BLEdBQUdBLENBQUNBLFFBQVFBLEVBQUVBLFdBQVdBLEVBQUVBLE1BQU1BLEVBQUVBLGVBQWVBLENBQUNBLENBQUNBO1FBb0c5RUEsMEJBQUNBO0lBQURBLENBckdBRCxBQXFHQ0MsSUFBQUQ7SUFyR1lBLGtDQUFtQkEsR0FBbkJBLG1CQXFHWkEsQ0FBQUE7SUFBQUEsQ0FBQ0E7SUFFRkEsc0JBQU9BLENBQUNBLFVBQVVBLENBQUNBLG9DQUFvQ0EsRUFBRUEsbUJBQW1CQSxDQUFDQSxDQUFDQTtJQUU5RUEsSUFBYUEsS0FBS0E7UUFrRGRVLFNBbERTQSxLQUFLQTtZQUlOQyxpQkFBWUEsR0FBWUEsS0FBS0EsQ0FBQ0E7WUFnQjlCQSxVQUFLQSxHQUFHQSxFQUFFQSxDQUFDQTtZQVFYQSxtQkFBY0EsR0FBR0EsRUFBRUEsQ0FBQ0E7WUFTcEJBLGFBQVFBLEdBQUdBLEVBQUVBLENBQUNBO1lBY2xCQSxFQUFFQSxDQUFDQSxDQUFDQSxLQUFLQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDbEJBLE1BQU1BLElBQUlBLEtBQUtBLENBQUNBLG1EQUFtREEsQ0FBQ0EsQ0FBQ0E7WUFDekVBLENBQUNBO1lBQ0RBLEtBQUtBLENBQUNBLFNBQVNBLEdBQUdBLElBQUlBLENBQUNBO1FBQzNCQSxDQUFDQTtRQUVhRCxpQkFBV0EsR0FBekJBO1lBQ0lFLEVBQUVBLENBQUNBLENBQUNBLEtBQUtBLENBQUNBLFNBQVNBLEtBQUtBLElBQUlBLENBQUNBLENBQUNBLENBQUNBO2dCQUMzQkEsS0FBS0EsQ0FBQ0EsU0FBU0EsR0FBR0EsSUFBSUEsS0FBS0EsRUFBRUEsQ0FBQ0E7WUFDbENBLENBQUNBO1lBQ0RBLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBLFNBQVNBLENBQUNBO1FBQzNCQSxDQUFDQTtRQUVNRixvQkFBSUEsR0FBWEEsVUFBWUEsV0FBbUJBLEVBQ25CQSxLQUFhQSxFQUNiQSxNQUFXQSxFQUNYQSxTQUFpQkEsRUFDakJBLE9BQWVBLEVBQ2ZBLGFBQXVCQTtZQUxuQ0csaUJBNENDQTtZQXRDR0EsSUFBSUEsQ0FBQ0EsWUFBWUEsR0FBR0EsSUFBSUEsQ0FBQ0E7WUFDekJBLElBQUlBLENBQUNBLGlCQUFpQkEsR0FBR0EsUUFBUUEsQ0FBQ0EsY0FBY0EsQ0FBQ0EsV0FBV0EsQ0FBQ0EsQ0FBQ0E7WUFDOURBLElBQUlBLENBQUNBLE1BQU1BLEdBQUdBLEtBQUtBLENBQUNBO1lBQ3BCQSxJQUFJQSxDQUFDQSxPQUFPQSxHQUFHQSxNQUFNQSxDQUFDQTtZQUN0QkEsSUFBSUEsQ0FBQ0EsVUFBVUEsR0FBR0EsU0FBU0EsQ0FBQ0E7WUFDNUJBLElBQUlBLENBQUNBLFFBQVFBLEdBQUdBLE9BQU9BLENBQUNBO1lBRXhCQSxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxZQUFZQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDcEJBLElBQUlBLENBQUNBLFVBQVVBLEdBQUdBLElBQUlBLENBQUNBLFlBQVlBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO2dCQUN2Q0EsSUFBSUEsQ0FBQ0EsUUFBUUEsR0FBR0EsSUFBSUEsQ0FBQ0EsWUFBWUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDekNBLENBQUNBO1lBRURBLElBQUlBLENBQUNBLE1BQU1BLEdBQUdBLEVBQUVBLENBQUNBLEtBQUtBLENBQUNBLFVBQVVBLEVBQUVBLENBQUNBO1lBQ3BDQSxJQUFJQSxDQUFDQSxNQUFNQSxHQUFHQSxFQUFFQSxDQUFDQSxLQUFLQSxDQUFDQSxVQUFVQSxFQUFFQSxDQUM5QkEsS0FBS0EsQ0FBQ0EsSUFBSUEsSUFBSUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsVUFBVUEsQ0FBQ0EsQ0FBQ0EsQ0FDaENBLEdBQUdBLENBQUNBLElBQUlBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLENBQUNBLENBQzVCQSxVQUFVQSxDQUFDQSxVQUFDQSxLQUFLQSxFQUFFQSxLQUFLQTtnQkFDckJBLE1BQU1BLENBQUNBLEtBQUlBLENBQUNBLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBLENBQUNBO1lBQzlCQSxDQUFDQSxDQUFDQSxDQUNEQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUNsQkEsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FDcEJBLFVBQVVBLENBQUNBLFVBQUNBLEtBQUtBO2dCQUNkQSxLQUFLQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNuQkEsQ0FBQ0EsQ0FBQ0EsQ0FDREEsVUFBVUEsQ0FBQ0EsVUFBQ0EsRUFBRUE7Z0JBQ1hBLElBQUlBLE1BQU1BLEdBQUdBLEVBQUVBLENBQUNBLFVBQVVBLENBQUNBLFVBQVVBLENBQUNBLFNBQVNBLENBQUNBO2dCQUNoREEsSUFBSUEsU0FBU0EsR0FBR0EsRUFBRUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBRXhDQSxhQUFhQSxDQUFDQSxNQUFNQSxFQUFFQSxTQUFTQSxDQUFDQSxDQUFDQTtZQUVyQ0EsQ0FBQ0EsQ0FBQ0EsQ0FDREEsU0FBU0EsQ0FBQ0EsVUFBQ0EsS0FBS0E7Z0JBQ2JBLEtBQUlBLENBQUNBLFlBQVlBLEdBQUdBLEtBQUtBLENBQUNBLE1BQU1BLEVBQUVBLENBQUNBO1lBQ3ZDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUVQQSxJQUFJQSxDQUFDQSxRQUFRQSxHQUFHQSxFQUFFQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxpQkFBaUJBLENBQUNBLENBQUNBLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBLENBQUNBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLENBQUNBO1lBQ2xGQSxJQUFJQSxDQUFDQSxLQUFLQSxHQUFHQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxLQUFLQSxFQUFFQSxDQUFDQTtZQUNuQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0E7UUFDL0JBLENBQUNBO1FBRU1ILHdCQUFRQSxHQUFmQSxVQUFnQkEsS0FBVUE7WUFDdEJJLEVBQUVBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLFlBQVlBLENBQUNBLENBQUNBLENBQUNBO2dCQUNwQkEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsS0FBS0EsU0FBU0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7b0JBRTFDQSxJQUFJQSxTQUFTQSxHQUFHQSxFQUFFQSxDQUFDQTtvQkFDbkJBLFNBQVNBLENBQUNBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLEdBQUdBLEtBQUtBLENBQUNBO29CQUM5QkEsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsR0FBR0EsU0FBU0EsQ0FBQ0E7b0JBR3RDQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtvQkFDckNBLElBQUlBLE9BQU9BLEdBQUdBO3dCQUNWQSxJQUFJQSxFQUFFQSxLQUFLQSxDQUFDQSxJQUFJQTt3QkFDaEJBLEtBQUtBLEVBQUVBLENBQUVBLEtBQUtBLENBQUNBLElBQUlBLENBQUVBO3FCQUN4QkEsQ0FBQ0E7b0JBQ0ZBLElBQUlBLENBQUVBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLENBQUNBO29CQUcxQkEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsWUFBWUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7d0JBQ3BCQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxZQUFZQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTt3QkFDeENBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLEdBQUdBLENBQUNBLElBQUlBLENBQUNBLFlBQVlBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO29CQUMxQ0EsQ0FBQ0E7b0JBQ0RBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLENBQUNBO2dCQUMvQkEsQ0FBQ0E7Z0JBQUNBLElBQUlBLENBQUNBLENBQUNBO29CQUNKQSxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxTQUFTQSxDQUFDQSxDQUFDQSxDQUFDQTt3QkFFdERBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLENBQUNBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLEdBQUdBLEtBQUtBLENBQUNBO3dCQUc5Q0EsSUFBSUEsQ0FBQ0EsR0FBR0EsSUFBSUEsQ0FBQ0EsY0FBY0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7d0JBQ2hEQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTt3QkFHckNBLEVBQUVBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLFlBQVlBLENBQUNBLENBQUNBLENBQUNBOzRCQUNwQkEsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsWUFBWUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7NEJBQ3hDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxHQUFHQSxDQUFDQSxJQUFJQSxDQUFDQSxZQUFZQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTt3QkFDMUNBLENBQUNBO3dCQUNEQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxDQUFDQTtvQkFDL0JBLENBQUNBO2dCQUNMQSxDQUFDQTtZQUNMQSxDQUFDQTtRQUNMQSxDQUFDQTtRQUVNSix3QkFBUUEsR0FBZkEsVUFBZ0JBLElBQVNBLEVBQUVBLElBQVNBO1lBQ2hDSyxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxZQUFZQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDcEJBLEVBQUVBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLElBQUlBLENBQUNBLEtBQUtBLFNBQVNBLElBQUlBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLElBQUlBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLEtBQUtBLFNBQVNBLENBQUNBLENBQUNBLENBQUNBO29CQUMvRUEsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7Z0JBQ3JDQSxDQUFDQTtZQUNMQSxDQUFDQTtRQUNMQSxDQUFDQTtRQTVKY0wsZUFBU0EsR0FBU0EsSUFBSUEsQ0FBQ0E7UUE4SjFDQSxZQUFDQTtJQUFEQSxDQWhLQVYsQUFnS0NVLElBQUFWO0lBaEtZQSxvQkFBS0EsR0FBTEEsS0FnS1pBLENBQUFBO0FBQ0xBLENBQUNBLEVBbFJNLGNBQWMsS0FBZCxjQUFjLFFBa1JwQjs7QUNsUkQsSUFBTyxjQUFjLENBZ2FwQjtBQWhhRCxXQUFPLGNBQWMsRUFBQyxDQUFDO0lBaUJsQkEsQ0FBQ0E7SUFFRkEsSUFBYUEscUJBQXFCQTtRQUc5QmdCLFNBSFNBLHFCQUFxQkEsQ0FHVkEsTUFBVUEsRUFDVkEsT0FBV0EsRUFDWEEsSUFBbUJBLEVBQ25CQSxhQUFpQkE7WUFIakJDLFdBQU1BLEdBQU5BLE1BQU1BLENBQUlBO1lBQ1ZBLFlBQU9BLEdBQVBBLE9BQU9BLENBQUlBO1lBQ1hBLFNBQUlBLEdBQUpBLElBQUlBLENBQWVBO1lBQ25CQSxrQkFBYUEsR0FBYkEsYUFBYUEsQ0FBSUE7WUFFakNBLE1BQU1BLENBQUNBLE1BQU1BLEdBQUdBLEtBQUtBLENBQUNBO1lBQ3RCQSxNQUFNQSxDQUFDQSxJQUFJQSxHQUFHQSxFQUFFQSxDQUFDQTtZQUNqQkEsSUFBSUEsQ0FBQ0EsY0FBY0EsRUFBRUEsQ0FBQ0E7WUFDdEJBLElBQUlBLENBQUNBLFlBQVlBLEVBQUVBLENBQUNBO1FBQ3hCQSxDQUFDQTtRQUVERCw4Q0FBY0EsR0FBZEE7WUFDSUUsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsTUFBTUEsR0FBR0EsS0FBS0EsQ0FBQ0E7WUFDM0JBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLFFBQVFBLEdBQUdBLElBQUlBLENBQUNBLGFBQWFBLENBQUNBLE9BQU9BLENBQUNBLEtBQUtBLEVBQUVBLENBQUNBO1FBQzlEQSxDQUFDQTtRQUVERiw2Q0FBYUEsR0FBYkE7WUFDSUcsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsTUFBTUEsR0FBR0EsS0FBS0EsQ0FBQ0E7WUFDM0JBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLE9BQU9BLEdBQUdBLEVBQUVBLEtBQUtBLEVBQUVBLEtBQUtBLEVBQUVBLE9BQU9BLEVBQUVBLElBQUlBLEVBQUNBLENBQUNBO1lBQ3JEQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxTQUFTQSxHQUFHQSxFQUFFQSxJQUFJQSxFQUFFQSxlQUFlQSxFQUNuQkEsZUFBZUEsRUFBRUEsQ0FBQ0EsRUFDbEJBLGdCQUFnQkEsRUFBRUEsQ0FBQ0EsRUFDbkJBLGVBQWVBLEVBQUVBLENBQUNBLEVBQUNBLENBQUNBO1lBQ2hEQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxlQUFlQSxHQUFHQSxFQUFDQSxNQUFNQSxFQUFFQSxLQUFLQSxFQUFDQSxDQUFDQTtZQUM5Q0EsSUFBSUEsQ0FBQ0EsWUFBWUEsRUFBRUEsQ0FBQ0E7UUFDeEJBLENBQUNBO1FBRURILDhDQUFjQSxHQUFkQTtZQUFBSSxpQkFnQ0NBO1lBL0JHQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxHQUFHQSxFQUFFQSxDQUFDQTtZQUN0QkEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsTUFBTUEsS0FBS0EsS0FBS0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQy9CQSxJQUFJQSxDQUFDQSxhQUFhQSxDQUFDQSxPQUFPQSxDQUFDQSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxPQUFPQSxFQUMvQ0EsVUFBQ0EsT0FBT0E7b0JBQ0pBLEtBQUlBLENBQUNBLE1BQU1BLENBQUNBLFNBQVNBLENBQUNBLFNBQVNBLEdBQUdBLE9BQU9BLENBQUNBLEVBQUVBLENBQUNBO29CQUM3Q0EsS0FBSUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsS0FBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsU0FBU0EsRUFDbkRBLFVBQUNBLFNBQVNBO3dCQUNOQSxLQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxTQUFTQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQTtvQkFDN0NBLENBQUNBLEVBQUVBLFVBQUNBLGVBQWVBO3dCQUNmQSxLQUFJQSxDQUFDQSxXQUFXQSxDQUFDQSxlQUFlQSxDQUFDQSxDQUFDQTtvQkFDdENBLENBQUNBLENBQ0pBLENBQUNBO2dCQUNOQSxDQUFDQSxFQUFFQSxVQUFDQSxNQUFNQTtvQkFDTkEsS0FBSUEsQ0FBQ0EsV0FBV0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0E7Z0JBQzdCQSxDQUFDQSxDQUNKQSxDQUFDQTtZQUNOQSxDQUFDQTtZQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxNQUFNQSxLQUFLQSxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDbENBLElBQUlBLENBQUNBLGFBQWFBLENBQUNBLE9BQU9BLENBQUNBLEdBQUdBLENBQUNBLEVBQUNBLFNBQVNBLEVBQUVBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLE9BQU9BLENBQUNBLEVBQUVBLEVBQUNBLEVBQUVBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLE9BQU9BLEVBQ25GQTtvQkFDSUEsS0FBSUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsS0FBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsU0FBU0EsRUFDbERBO3dCQUNJQSxLQUFJQSxDQUFDQSxjQUFjQSxFQUFFQSxDQUFDQTtvQkFDMUJBLENBQUNBLEVBQUVBLFVBQUNBLGVBQWVBO3dCQUNuQkEsS0FBSUEsQ0FBQ0EsV0FBV0EsQ0FBQ0EsZUFBZUEsQ0FBQ0EsQ0FBQ0E7b0JBQ3RDQSxDQUFDQSxDQUNBQSxDQUFDQTtnQkFDTkEsQ0FBQ0EsRUFBRUEsVUFBQ0EsTUFBTUE7b0JBQ05BLEtBQUlBLENBQUNBLFdBQVdBLENBQUNBLE1BQU1BLENBQUNBLENBQUNBO2dCQUM3QkEsQ0FBQ0EsQ0FDSkEsQ0FBQ0E7WUFDTkEsQ0FBQ0E7UUFDTEEsQ0FBQ0E7UUFFREosOENBQWNBLEdBQWRBLFVBQWVBLEVBQVVBO1lBQXpCSyxpQkFXQ0E7WUFWR0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsTUFBTUEsR0FBR0EsTUFBTUEsQ0FBQ0E7WUFDNUJBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLE9BQU9BLEdBQUdBLEVBQUVBLENBQUNBO1lBQ3pCQSxJQUFJQSxDQUFDQSxhQUFhQSxDQUFDQSxPQUFPQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFDQSxTQUFTQSxFQUFFQSxFQUFFQSxFQUFDQSxFQUMxQ0EsVUFBQ0EsUUFBUUE7Z0JBQ0xBLEtBQUlBLENBQUNBLE1BQU1BLENBQUNBLE9BQU9BLEdBQUdBLFFBQVFBLENBQUNBO1lBQ25DQSxDQUFDQSxFQUFFQSxVQUFDQSxNQUFNQTtnQkFDTkEsS0FBSUEsQ0FBQ0EsV0FBV0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0E7WUFDN0JBLENBQUNBLENBQUNBLENBQUNBO1lBQ1BBLElBQUlBLENBQUNBLGFBQWFBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBO1lBQ3ZCQSxJQUFJQSxDQUFDQSxZQUFZQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQTtRQUMxQkEsQ0FBQ0E7UUFFREwsZ0RBQWdCQSxHQUFoQkEsVUFBaUJBLEVBQVVBO1lBQTNCTSxpQkFrQkNBO1lBakJHQSxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxPQUFPQSxDQUFDQSxPQUFPQSxDQUFDQSx3QkFBd0JBLEdBQUdBLEVBQUVBLEdBQUdBLElBQUlBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO2dCQUM3REEsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsR0FBR0EsRUFBRUEsQ0FBQ0E7Z0JBQ3RCQSxJQUFJQSxDQUFDQSxhQUFhQSxDQUFDQSxPQUFPQSxDQUFDQSxNQUFNQSxDQUFDQSxFQUFDQSxTQUFTQSxFQUFFQSxFQUFFQSxFQUFDQSxFQUM3Q0E7b0JBQ0lBLEtBQUlBLENBQUNBLGFBQWFBLENBQUNBLFNBQVNBLENBQUNBLE1BQU1BLENBQUNBLEVBQUNBLFNBQVNBLEVBQUVBLEVBQUVBLEVBQUNBLEVBQy9DQTt3QkFDSUEsS0FBSUEsQ0FBQ0EsbUJBQW1CQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQTt3QkFDN0JBLEtBQUlBLENBQUNBLGNBQWNBLEVBQUVBLENBQUNBO29CQUMxQkEsQ0FBQ0EsRUFBRUEsVUFBQ0EsZUFBZUE7d0JBQ2ZBLEtBQUlBLENBQUNBLFdBQVdBLENBQUNBLGVBQWVBLENBQUNBLENBQUNBO29CQUN0Q0EsQ0FBQ0EsQ0FDSkEsQ0FBQ0E7Z0JBQ05BLENBQUNBLEVBQUVBLFVBQUNBLE1BQU1BO29CQUNOQSxLQUFJQSxDQUFDQSxXQUFXQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQTtnQkFDN0JBLENBQUNBLENBQ0pBLENBQUNBO1lBQ05BLENBQUNBO1FBQ0xBLENBQUNBO1FBRUROLDZDQUFhQSxHQUFiQSxVQUFjQSxLQUFhQTtZQUN2Qk8sSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsS0FBS0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDdENBLENBQUNBO1FBRU9QLDJDQUFXQSxHQUFuQkEsVUFBb0JBLE1BQVdBO1lBQzNCUSxJQUFJQSxRQUFRQSxHQUFHQSxFQUFDQSxJQUFJQSxFQUFFQSxRQUFRQSxFQUFFQSxHQUFHQSxFQUFFQSxFQUFFQSxFQUFDQSxDQUFDQTtZQUN6Q0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ3ZCQSxRQUFRQSxDQUFDQSxHQUFHQSxHQUFHQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQTtZQUN4Q0EsQ0FBQ0E7WUFBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7Z0JBQ0pBLFFBQVFBLENBQUNBLEdBQUdBLEdBQUdBLE1BQU1BLENBQUNBLFVBQVVBLENBQUNBO1lBQ3JDQSxDQUFDQTtZQUNEQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxDQUFDQTtRQUNwQ0EsQ0FBQ0E7UUFFT1IsNENBQVlBLEdBQXBCQTtZQUFBUyxpQkFTQ0E7WUFSR0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsU0FBU0EsR0FBR0EsRUFBRUEsQ0FBQ0E7WUFDM0JBLElBQUlBLENBQUNBLGFBQWFBLENBQUNBLFFBQVFBLENBQUNBLEtBQUtBLENBQzdCQSxVQUFDQSxNQUFNQTtnQkFDSEEsS0FBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsU0FBU0EsR0FBR0EsTUFBTUEsQ0FBQ0E7WUFDbkNBLENBQUNBLEVBQUVBLFVBQUNBLE1BQU1BO2dCQUNOQSxLQUFJQSxDQUFDQSxXQUFXQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQTtZQUM3QkEsQ0FBQ0EsQ0FDSkEsQ0FBQ0E7UUFDTkEsQ0FBQ0E7UUFFT1QsNkNBQWFBLEdBQXJCQSxVQUFzQkEsU0FBaUJBO1lBQXZDVSxpQkE0QkNBO1lBM0JHQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxVQUFVQSxHQUFHQSxFQUFFQSxDQUFDQTtZQUM1QkEsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsZUFBZUEsR0FBR0EsRUFBRUEsTUFBTUEsRUFBRUEsRUFBRUEsRUFBRUEsV0FBV0EsRUFBRUEsRUFBRUEsRUFBQ0EsQ0FBQ0E7WUFDN0RBLElBQUlBLENBQUNBLGFBQWFBLENBQUNBLE9BQU9BLENBQUNBLFVBQVVBLENBQUNBLEVBQUNBLFNBQVNBLEVBQUVBLFNBQVNBLEVBQUNBLEVBQ3hEQSxVQUFDQSxjQUFjQTtnQkFDWEEsSUFBSUEsY0FBY0EsR0FBT0EsRUFBRUEsQ0FBQ0E7Z0JBQzVCQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFFQSxDQUFDQSxHQUFHQSxjQUFjQSxDQUFDQSxNQUFNQSxFQUFFQSxDQUFDQSxFQUFFQSxFQUFFQSxDQUFDQTtvQkFDN0NBLGNBQWNBLENBQUNBLGNBQWNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLFdBQVdBLENBQUNBLEdBQUdBLGNBQWNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLFNBQVNBLENBQUNBO2dCQUNoRkEsQ0FBQ0E7Z0JBQ0RBLEdBQUdBLENBQUNBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLEVBQUVBLENBQUNBLEdBQUdBLGNBQWNBLENBQUNBLE1BQU1BLEVBQUVBLENBQUNBLEVBQUVBLEVBQUVBLENBQUNBO29CQUN6Q0EsSUFBSUEsU0FBU0EsR0FBR0EsY0FBY0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7b0JBQ2xDQSxLQUFJQSxDQUFDQSxhQUFhQSxDQUFDQSxTQUFTQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFDQSxXQUFXQSxFQUFFQSxTQUFTQSxDQUFDQSxXQUFXQSxFQUFDQSxFQUM1RUEsVUFBQ0EsZUFBZUE7d0JBQ1pBLElBQUlBLFNBQVNBLEdBQUdBLGNBQWNBLENBQUNBLGVBQWVBLENBQUNBLFdBQVdBLENBQUNBLENBQUNBO3dCQUM1REEsSUFBSUEsWUFBWUEsR0FBR0E7NEJBQ2ZBLFdBQVdBLEVBQUVBLGVBQWVBLENBQUNBLFdBQVdBOzRCQUN4Q0EsU0FBU0EsRUFBRUEsU0FBU0E7NEJBQ3BCQSxTQUFTQSxFQUFFQSxlQUFlQTs0QkFDMUJBLFdBQVdBLEVBQUVBLEtBQUlBLENBQUNBLGNBQWNBLENBQUNBLFNBQVNBLEVBQUVBLGVBQWVBLENBQUNBO3lCQUMvREEsQ0FBQ0E7d0JBQ0ZBLEtBQUlBLENBQUNBLE1BQU1BLENBQUNBLFVBQVVBLENBQUNBLElBQUlBLENBQUNBLFlBQVlBLENBQUNBLENBQUNBO29CQUM5Q0EsQ0FBQ0EsRUFBRUEsVUFBQ0EsVUFBVUE7d0JBQ1ZBLEtBQUlBLENBQUNBLFdBQVdBLENBQUNBLFVBQVVBLENBQUNBLENBQUNBO29CQUNqQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ1hBLENBQUNBO1lBQ0xBLENBQUNBLEVBQUVBLFVBQUNBLFVBQVVBO2dCQUNWQSxLQUFJQSxDQUFDQSxXQUFXQSxDQUFDQSxVQUFVQSxDQUFDQSxDQUFDQTtZQUNqQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDWEEsQ0FBQ0E7UUFFT1YsNENBQVlBLEdBQXBCQSxVQUFxQkEsU0FBaUJBO1lBQXRDVyxpQkFvQkNBO1lBbkJHQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxTQUFTQSxHQUFHQSxFQUFFQSxDQUFDQTtZQUMzQkEsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsZUFBZUEsR0FBR0EsRUFBRUEsTUFBTUEsRUFBRUEsTUFBTUEsRUFBQ0EsQ0FBQ0E7WUFFaERBLElBQUlBLENBQUNBLGFBQWFBLENBQUNBLFNBQVNBLENBQUNBLEdBQUdBLENBQUNBLEVBQUNBLFNBQVNBLEVBQUVBLFNBQVNBLEVBQUNBLEVBQ25EQSxVQUFDQSxTQUFTQTtnQkFDTkEsS0FBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsU0FBU0EsR0FBR0EsU0FBU0EsQ0FBQ0E7WUFDdENBLENBQUNBLEVBQUVBLFVBQUNBLE1BQU1BO2dCQUNOQSxLQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxTQUFTQSxHQUFHQSxFQUFFQSxTQUFTQSxFQUFFQSxTQUFTQSxFQUMxQ0EsSUFBSUEsRUFBRUEsZUFBZUEsRUFDckJBLGVBQWVBLEVBQUVBLENBQUNBLEVBQ2xCQSxnQkFBZ0JBLEVBQUVBLENBQUNBLEVBQ25CQSxlQUFlQSxFQUFFQSxDQUFDQSxFQUFDQSxDQUFDQTtnQkFDeEJBLEtBQUlBLENBQUNBLGFBQWFBLENBQUNBLFNBQVNBLENBQUNBLElBQUlBLENBQUNBLEtBQUlBLENBQUNBLE1BQU1BLENBQUNBLFNBQVNBLEVBQ25EQSxVQUFDQSxlQUFlQTtvQkFDWkEsS0FBSUEsQ0FBQ0EsV0FBV0EsQ0FBQ0EsZUFBZUEsQ0FBQ0EsQ0FBQ0E7Z0JBQ3RDQSxDQUFDQSxDQUNKQSxDQUFDQTtZQUVOQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUNYQSxDQUFDQTtRQUVEWCw2Q0FBYUEsR0FBYkE7WUFBQVksaUJBT0NBO1lBTkdBLElBQUlBLENBQUNBLGFBQWFBLENBQUNBLFNBQVNBLENBQUNBLEdBQUdBLENBQUNBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLFNBQVNBLEVBQ2xEQTtnQkFDR0EsS0FBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsZUFBZUEsQ0FBQ0EsTUFBTUEsR0FBR0EsTUFBTUEsQ0FBQ0E7WUFDL0NBLENBQUNBLEVBQUVBLFVBQUNBLE1BQU1BO2dCQUNOQSxLQUFJQSxDQUFDQSxXQUFXQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQTtZQUM3QkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDWEEsQ0FBQ0E7UUFFT1osK0NBQWVBLEdBQXZCQSxVQUF3QkEsU0FBaUJBO1lBQXpDYSxpQkFNQ0E7WUFMR0EsSUFBSUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsRUFBQ0EsU0FBU0EsRUFBRUEsU0FBU0EsRUFBQ0EsRUFDdkRBLFVBQUNBLE1BQU1BO2dCQUNGQSxLQUFJQSxDQUFDQSxXQUFXQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQTtZQUM3QkEsQ0FBQ0EsQ0FDSkEsQ0FBQ0E7UUFDTkEsQ0FBQ0E7UUFFTWIsNkNBQWFBLEdBQXBCQSxVQUFxQkEsU0FBaUJBO1lBQ2xDYyxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxlQUFlQSxHQUFHQSxFQUFFQSxNQUFNQSxFQUFFQSxNQUFNQSxFQUFDQSxDQUFDQTtRQUNwREEsQ0FBQ0E7UUFFT2QsOENBQWNBLEdBQXRCQSxVQUF1QkEsU0FBaUJBLEVBQUVBLFNBQWNBO1lBQ3BEZSxJQUFJQSxXQUFXQSxHQUFHQSxFQUFFQSxDQUFDQTtZQUNyQkEsSUFBSUEsRUFBRUEsR0FBR0EsRUFBRUEsQ0FBQ0E7WUFDWkEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsU0FBU0EsS0FBS0EsdUJBQXVCQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDeENBLFdBQVdBLEdBQUdBLFNBQVNBLENBQUNBLE1BQU1BLEdBQUdBLE1BQU1BLEdBQUdBLFNBQVNBLENBQUNBLFFBQVFBLENBQUNBO1lBQ2pFQSxDQUFDQTtZQUFDQSxJQUFJQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxTQUFTQSxLQUFLQSxrQkFBa0JBLENBQUNBLENBQUNBLENBQUNBO2dCQUMxQ0EsRUFBRUEsR0FBR0EsSUFBSUEsQ0FBQ0EsV0FBV0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0E7Z0JBQzFDQSxXQUFXQSxHQUFHQSxTQUFTQSxDQUFDQSxPQUFPQSxHQUFHQSxHQUFHQSxHQUFHQSxFQUFFQSxHQUFHQSxHQUFHQSxHQUM1Q0EsR0FBR0EsR0FBR0EsU0FBU0EsQ0FBQ0EsZUFBZUEsR0FBR0EsS0FBS0EsR0FBR0EsU0FBU0EsQ0FBQ0EsT0FBT0EsR0FBR0EsR0FBR0EsQ0FBQ0E7WUFDMUVBLENBQUNBO1lBQUNBLElBQUlBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLFNBQVNBLEtBQUtBLGlCQUFpQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ3pDQSxXQUFXQSxHQUFHQSxTQUFTQSxDQUFDQSxNQUFNQSxHQUFHQSxHQUFHQSxHQUFHQSxTQUFTQSxDQUFDQSxRQUFRQSxHQUFHQSxJQUFJQSxHQUM1REEsU0FBU0EsQ0FBQ0EsT0FBT0EsR0FBR0EsU0FBU0EsR0FBR0EsU0FBU0EsQ0FBQ0EsVUFBVUEsR0FBR0EsR0FBR0EsQ0FBQ0E7WUFDbkVBLENBQUNBO1lBQUNBLElBQUlBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLFNBQVNBLEtBQUtBLG9CQUFvQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQzVDQSxFQUFFQSxHQUFHQSxJQUFJQSxDQUFDQSxXQUFXQSxDQUFDQSxTQUFTQSxDQUFDQSxRQUFRQSxDQUFDQSxDQUFDQTtnQkFDMUNBLFdBQVdBLEdBQUdBLFNBQVNBLENBQUNBLE1BQU1BLEdBQUdBLEdBQUdBLEdBQUdBLEVBQUVBLEdBQUdBLEdBQUdBLEdBQUdBLFNBQVNBLENBQUNBLFNBQVNBLENBQUNBO1lBQzFFQSxDQUFDQTtZQUFDQSxJQUFJQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxTQUFTQSxLQUFLQSx5QkFBeUJBLENBQUNBLENBQUNBLENBQUNBO2dCQUNqREEsSUFBSUEsR0FBR0EsR0FBR0EsR0FBR0EsQ0FBQ0E7Z0JBQ2RBLElBQUlBLElBQUlBLEdBQUdBLEdBQUdBLENBQUNBO2dCQUNmQSxFQUFFQSxDQUFDQSxDQUFDQSxTQUFTQSxDQUFDQSxXQUFXQSxLQUFLQSxXQUFXQSxDQUFDQSxDQUFDQSxDQUFDQTtvQkFDeENBLEdBQUdBLEdBQUdBLEdBQUdBLENBQUNBO2dCQUNkQSxDQUFDQTtnQkFDREEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsWUFBWUEsS0FBS0EsV0FBV0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7b0JBQ3pDQSxJQUFJQSxHQUFHQSxHQUFHQSxDQUFDQTtnQkFDZkEsQ0FBQ0E7Z0JBQ0RBLElBQUlBLEtBQUtBLEdBQUdBLE1BQU1BLENBQUNBO2dCQUNuQkEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7b0JBQ3JCQSxLQUFLQSxHQUFHQSxPQUFPQSxDQUFDQTtnQkFDcEJBLENBQUNBO2dCQUNEQSxXQUFXQSxHQUFHQSxTQUFTQSxDQUFDQSxNQUFNQSxHQUFHQSxLQUFLQSxHQUFHQSxHQUFHQSxHQUFHQSxTQUFTQSxDQUFDQSxZQUFZQSxHQUFHQSxJQUFJQSxHQUN4RUEsU0FBU0EsQ0FBQ0EsYUFBYUEsR0FBR0EsSUFBSUEsQ0FBQ0E7WUFDdkNBLENBQUNBO1lBQ0RBLE1BQU1BLENBQUNBLFdBQVdBLENBQUNBO1FBQ3ZCQSxDQUFDQTtRQUVPZiwyQ0FBV0EsR0FBbkJBLFVBQW9CQSxNQUFjQTtZQUM5QmdCLElBQUlBLEVBQUVBLEdBQUdBLEVBQUVBLENBQUNBO1lBQ1pBLEVBQUVBLENBQUNBLENBQUNBLE1BQU1BLEtBQUtBLElBQUlBLENBQUNBLENBQUNBLENBQUNBO2dCQUNsQkEsRUFBRUEsR0FBR0EsR0FBR0EsQ0FBQ0E7WUFDYkEsQ0FBQ0E7WUFBQ0EsSUFBSUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsTUFBTUEsS0FBS0EsS0FBS0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQzFCQSxFQUFFQSxHQUFHQSxJQUFJQSxDQUFDQTtZQUNkQSxDQUFDQTtZQUFDQSxJQUFJQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxNQUFNQSxLQUFLQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDekJBLEVBQUVBLEdBQUdBLEdBQUdBLENBQUNBO1lBQ2JBLENBQUNBO1lBQUNBLElBQUlBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLE1BQU1BLEtBQUtBLEtBQUtBLENBQUNBLENBQUNBLENBQUNBO2dCQUMxQkEsRUFBRUEsR0FBR0EsSUFBSUEsQ0FBQ0E7WUFDZEEsQ0FBQ0E7WUFDREEsTUFBTUEsQ0FBQ0EsRUFBRUEsQ0FBQ0E7UUFDZEEsQ0FBQ0E7UUFFRGhCLDRDQUFZQSxHQUFaQTtZQUNJaUIsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsZUFBZUEsR0FBR0EsRUFBQ0EsTUFBTUEsRUFBRUEsS0FBS0EsRUFBRUEsV0FBV0EsRUFBRUEsRUFBRUEsRUFBRUEsU0FBU0EsRUFBRUEsdUJBQXVCQSxFQUFDQSxDQUFDQTtZQUNuR0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsYUFBYUEsR0FBR0EsRUFBRUEsU0FBU0EsRUFBRUEsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsRUFBRUEsRUFBRUEsZ0JBQWdCQSxFQUFFQSxDQUFDQSxFQUFFQSxpQkFBaUJBLEVBQUVBLENBQUNBLEVBQUNBLENBQUNBO1lBQzVHQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxVQUFVQSxHQUFHQSxDQUFDQSx1QkFBdUJBLEVBQUVBLGtCQUFrQkEsRUFBRUEsaUJBQWlCQSxFQUNwRkEsb0JBQW9CQSxFQUFFQSx5QkFBeUJBLENBQUNBLENBQUNBO1lBQ3JEQSxJQUFJQSxDQUFDQSxtQkFBbUJBLEVBQUVBLENBQUNBO1FBQy9CQSxDQUFDQTtRQUVEakIsbURBQW1CQSxHQUFuQkE7WUFDSWtCLEVBQUVBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLGVBQWVBLENBQUNBLFNBQVNBLEtBQUtBLHVCQUF1QkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ3BFQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxhQUFhQSxDQUFDQSxNQUFNQSxHQUFHQSxFQUFFQSxDQUFDQTtnQkFDdENBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLGFBQWFBLENBQUNBLFFBQVFBLEdBQUdBLE1BQU1BLENBQUNBO1lBQ2hEQSxDQUFDQTtZQUFDQSxJQUFJQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxlQUFlQSxDQUFDQSxTQUFTQSxLQUFLQSxrQkFBa0JBLENBQUNBLENBQUNBLENBQUNBO2dCQUN0RUEsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsT0FBT0EsR0FBR0EsRUFBRUEsQ0FBQ0E7Z0JBQ3ZDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxhQUFhQSxDQUFDQSxRQUFRQSxHQUFHQSxJQUFJQSxDQUFDQTtnQkFDMUNBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLGFBQWFBLENBQUNBLGVBQWVBLEdBQUdBLEdBQUdBLENBQUNBO2dCQUNoREEsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsT0FBT0EsR0FBR0EsRUFBRUEsQ0FBQ0E7WUFDM0NBLENBQUNBO1lBQUNBLElBQUlBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLGVBQWVBLENBQUNBLFNBQVNBLEtBQUtBLGlCQUFpQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ3JFQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxhQUFhQSxDQUFDQSxNQUFNQSxHQUFHQSxFQUFFQSxDQUFDQTtnQkFDdENBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLGFBQWFBLENBQUNBLFFBQVFBLEdBQUdBLE9BQU9BLENBQUNBO2dCQUM3Q0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsT0FBT0EsR0FBR0EsRUFBRUEsQ0FBQ0E7Z0JBQ3ZDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxhQUFhQSxDQUFDQSxVQUFVQSxHQUFHQSxLQUFLQSxDQUFDQTtZQUNqREEsQ0FBQ0E7WUFBQ0EsSUFBSUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsZUFBZUEsQ0FBQ0EsU0FBU0EsS0FBS0Esb0JBQW9CQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDeEVBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLGFBQWFBLENBQUNBLE1BQU1BLEdBQUdBLEVBQUVBLENBQUNBO2dCQUN0Q0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsUUFBUUEsR0FBR0EsSUFBSUEsQ0FBQ0E7Z0JBQzFDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxhQUFhQSxDQUFDQSxTQUFTQSxHQUFHQSxHQUFHQSxDQUFDQTtZQUM5Q0EsQ0FBQ0E7WUFBQ0EsSUFBSUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsZUFBZUEsQ0FBQ0EsU0FBU0EsS0FBS0EseUJBQXlCQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDN0VBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLGFBQWFBLENBQUNBLE1BQU1BLEdBQUdBLEVBQUVBLENBQUNBO2dCQUN0Q0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsV0FBV0EsR0FBR0EsV0FBV0EsQ0FBQ0E7Z0JBQ3BEQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxhQUFhQSxDQUFDQSxZQUFZQSxHQUFHQSxXQUFXQSxDQUFDQTtnQkFDckRBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLGFBQWFBLENBQUNBLFlBQVlBLEdBQUdBLEdBQUdBLENBQUNBO2dCQUM3Q0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsYUFBYUEsR0FBR0EsR0FBR0EsQ0FBQ0E7Z0JBQzlDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxhQUFhQSxDQUFDQSxPQUFPQSxHQUFHQSxJQUFJQSxDQUFDQTtZQUM3Q0EsQ0FBQ0E7UUFDTEEsQ0FBQ0E7UUFFRGxCLDZDQUFhQSxHQUFiQSxVQUFjQSxTQUFjQTtZQUN4Qm1CLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLGVBQWVBLEdBQUdBLEVBQUNBLE1BQU1BLEVBQUVBLE1BQU1BLEVBQUVBLFdBQVdBLEVBQUVBLFNBQVNBLENBQUNBLFdBQVdBLEVBQUVBLFNBQVNBLEVBQUVBLFNBQVNBLENBQUNBLFNBQVNBLEVBQUNBLENBQUNBO1lBQ25IQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxhQUFhQSxHQUFHQSxTQUFTQSxDQUFDQSxTQUFTQSxDQUFDQTtRQUNwREEsQ0FBQ0E7UUFFRG5CLDZDQUFhQSxHQUFiQTtZQUFBb0IsaUJBMkJDQTtZQTFCR0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsZUFBZUEsQ0FBQ0EsTUFBTUEsS0FBS0EsS0FBS0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQy9DQSxJQUFJQSxnQkFBZ0JBLEdBQUdBLElBQUlBLENBQUNBLGdCQUFnQkEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsZUFBZUEsQ0FBQ0EsU0FBU0EsRUFBRUEsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsQ0FBQ0E7Z0JBQy9HQSxJQUFJQSxDQUFDQSxhQUFhQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxlQUFlQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxnQkFBZ0JBLEVBQzNFQTtvQkFDSUEsS0FBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsZUFBZUEsR0FBR0EsRUFBQ0EsTUFBTUEsRUFBRUEsRUFBRUEsRUFBQ0EsQ0FBQ0E7b0JBQzNDQSxLQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxLQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxPQUFPQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQTtnQkFDaERBLENBQUNBLEVBQUVBLFVBQUNBLE1BQU1BO29CQUNOQSxLQUFJQSxDQUFDQSxXQUFXQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQTtnQkFDN0JBLENBQUNBLENBQUNBLENBQUNBO1lBQ1hBLENBQUNBO1lBQUNBLElBQUlBLENBQUNBLENBQUNBO2dCQUNKQSxJQUFJQSxDQUFDQSxhQUFhQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxlQUFlQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQSxNQUFNQSxDQUFDQSxFQUFDQSxXQUFXQSxFQUFFQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxhQUFhQSxDQUFDQSxXQUFXQSxFQUFDQSxFQUNqSEE7b0JBQ0lBLElBQUlBLGdCQUFnQkEsR0FBR0EsS0FBSUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxLQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxlQUFlQSxDQUFDQSxTQUFTQSxFQUFFQSxLQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxhQUFhQSxDQUFDQSxDQUFDQTtvQkFDL0dBLEtBQUlBLENBQUNBLGFBQWFBLENBQUNBLEtBQUlBLENBQUNBLE1BQU1BLENBQUNBLGVBQWVBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLGdCQUFnQkEsRUFDM0VBO3dCQUNJQSxLQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxlQUFlQSxHQUFHQSxFQUFDQSxNQUFNQSxFQUFFQSxFQUFFQSxFQUFDQSxDQUFDQTt3QkFDM0NBLEtBQUlBLENBQUNBLGNBQWNBLENBQUNBLEtBQUlBLENBQUNBLE1BQU1BLENBQUNBLE9BQU9BLENBQUNBLEVBQUVBLENBQUNBLENBQUNBO29CQUNoREEsQ0FBQ0EsRUFBRUEsVUFBQ0EsTUFBTUE7d0JBQ05BLEtBQUlBLENBQUNBLFdBQVdBLENBQUNBLE1BQU1BLENBQUNBLENBQUNBO29CQUM3QkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ1hBLENBQUNBLEVBQUVBLFVBQUNBLFlBQVlBO29CQUNaQSxLQUFJQSxDQUFDQSxXQUFXQSxDQUFDQSxZQUFZQSxDQUFDQSxDQUFDQTtnQkFDbkNBLENBQUNBLENBQ0pBLENBQUNBO1lBRU5BLENBQUNBO1FBQ0xBLENBQUNBO1FBRURwQiwrQ0FBZUEsR0FBZkEsVUFBZ0JBLFdBQW1CQSxFQUFFQSxTQUFpQkE7WUFBdERxQixpQkFjQ0E7WUFiR0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsT0FBT0EsQ0FBQ0Esd0JBQXdCQSxHQUFHQSxXQUFXQSxHQUFHQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDdEVBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLGtCQUFrQkEsR0FBR0EsV0FBV0EsR0FBR0EsR0FBR0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ3hEQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxHQUFHQSxFQUFFQSxDQUFDQTtnQkFDdEJBLElBQUlBLENBQUNBLGFBQWFBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBLE1BQU1BLENBQUNBLEVBQUNBLFdBQVdBLEVBQUVBLFdBQVdBLEVBQUNBLEVBQzNEQTtvQkFDSUEsS0FBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsZUFBZUEsR0FBR0EsRUFBQ0EsTUFBTUEsRUFBRUEsRUFBRUEsRUFBQ0EsQ0FBQ0E7b0JBQzNDQSxLQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxLQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxPQUFPQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQTtnQkFDaERBLENBQUNBLEVBQUVBLFVBQUNBLFlBQVlBO29CQUNaQSxLQUFJQSxDQUFDQSxXQUFXQSxDQUFDQSxZQUFZQSxDQUFDQSxDQUFDQTtnQkFDbkNBLENBQUNBLENBQ0pBLENBQUNBO1lBRU5BLENBQUNBO1FBQ0xBLENBQUNBO1FBRU9yQixtREFBbUJBLEdBQTNCQSxVQUE0QkEsU0FBaUJBO1lBQTdDc0IsaUJBaUJDQTtZQWhCR0EsSUFBSUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsVUFBVUEsQ0FBQ0EsRUFBQ0EsU0FBU0EsRUFBRUEsU0FBU0EsRUFBQ0EsRUFDeERBLFVBQUNBLGNBQWNBO2dCQUNYQSxJQUFJQSxjQUFjQSxHQUFPQSxFQUFFQSxDQUFDQTtnQkFDNUJBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLEVBQUVBLENBQUNBLEdBQUdBLGNBQWNBLENBQUNBLE1BQU1BLEVBQUVBLENBQUNBLEVBQUVBLEVBQUVBLENBQUNBO29CQUM3Q0EsY0FBY0EsQ0FBQ0EsY0FBY0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsV0FBV0EsQ0FBQ0EsR0FBR0EsY0FBY0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsU0FBU0EsQ0FBQ0E7Z0JBQ2hGQSxDQUFDQTtnQkFDREEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsRUFBRUEsQ0FBQ0EsR0FBR0EsY0FBY0EsQ0FBQ0EsTUFBTUEsRUFBRUEsQ0FBQ0EsRUFBRUEsRUFBRUEsQ0FBQ0E7b0JBQ3pDQSxJQUFJQSxTQUFTQSxHQUFHQSxjQUFjQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtvQkFDbENBLEtBQUlBLENBQUNBLGFBQWFBLENBQUNBLFNBQVNBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBLE1BQU1BLENBQUNBLEVBQUNBLFdBQVdBLEVBQUVBLFNBQVNBLENBQUNBLFdBQVdBLEVBQUNBLEVBQy9FQSxVQUFDQSxVQUFVQTt3QkFDUEEsS0FBSUEsQ0FBQ0EsV0FBV0EsQ0FBQ0EsVUFBVUEsQ0FBQ0EsQ0FBQ0E7b0JBQ2pDQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDWEEsQ0FBQ0E7WUFDTEEsQ0FBQ0EsRUFBRUEsVUFBQ0EsVUFBVUE7Z0JBQ1ZBLEtBQUlBLENBQUNBLFdBQVdBLENBQUNBLFVBQVVBLENBQUNBLENBQUNBO1lBQ2pDQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUNYQSxDQUFDQTtRQUVEdEIsK0NBQWVBLEdBQWZBO1lBQ0l1QixJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxlQUFlQSxHQUFHQSxFQUFDQSxNQUFNQSxFQUFFQSxFQUFFQSxFQUFDQSxDQUFDQTtRQUMvQ0EsQ0FBQ0E7UUFFRHZCLGlEQUFpQkEsR0FBakJBO1lBQ0l3QixJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxxQkFBcUJBLENBQUNBLENBQUNBO1lBQ3RDQSxJQUFJQSxDQUFDQSxhQUFhQSxDQUFDQSxLQUFLQSxDQUFDQSxNQUFNQSxFQUFFQSxDQUFDQTtRQUN0Q0EsQ0FBQ0E7UUFNT3hCLGdEQUFnQkEsR0FBeEJBLFVBQXlCQSxTQUFnQkEsRUFBRUEsU0FBYUE7WUFDcER5QixJQUFJQSxnQkFBZ0JBLEdBQU9BLEVBQUdBLENBQUNBO1lBQy9CQSxnQkFBZ0JBLENBQUNBLFNBQVNBLEdBQUdBLFNBQVNBLENBQUNBLFNBQVNBLENBQUNBO1lBQ2pEQSxnQkFBZ0JBLENBQUNBLGdCQUFnQkEsR0FBR0EsU0FBU0EsQ0FBQ0EsZ0JBQWdCQSxDQUFDQTtZQUMvREEsZ0JBQWdCQSxDQUFDQSxpQkFBaUJBLEdBQUdBLFNBQVNBLENBQUNBLGlCQUFpQkEsQ0FBQ0E7WUFDakVBLEVBQUVBLENBQUNBLENBQUNBLFNBQVNBLEtBQUtBLHVCQUF1QkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ3hDQSxnQkFBZ0JBLENBQUNBLE1BQU1BLEdBQUdBLFNBQVNBLENBQUNBLE1BQU1BLENBQUNBO2dCQUMzQ0EsZ0JBQWdCQSxDQUFDQSxRQUFRQSxHQUFHQSxTQUFTQSxDQUFDQSxRQUFRQSxDQUFDQTtZQUNuREEsQ0FBQ0E7WUFBQ0EsSUFBSUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsU0FBU0EsS0FBS0Esa0JBQWtCQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDMUNBLGdCQUFnQkEsQ0FBQ0EsT0FBT0EsR0FBR0EsU0FBU0EsQ0FBQ0EsT0FBT0EsQ0FBQ0E7Z0JBQzdDQSxnQkFBZ0JBLENBQUNBLFFBQVFBLEdBQUdBLFNBQVNBLENBQUNBLFFBQVFBLENBQUNBO2dCQUMvQ0EsZ0JBQWdCQSxDQUFDQSxlQUFlQSxHQUFHQSxTQUFTQSxDQUFDQSxlQUFlQSxDQUFDQTtnQkFDN0RBLGdCQUFnQkEsQ0FBQ0EsT0FBT0EsR0FBR0EsU0FBU0EsQ0FBQ0EsT0FBT0EsQ0FBQ0E7WUFDakRBLENBQUNBO1lBQUNBLElBQUlBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLFNBQVNBLEtBQUtBLGlCQUFpQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ3pDQSxnQkFBZ0JBLENBQUNBLE1BQU1BLEdBQUdBLFNBQVNBLENBQUNBLE1BQU1BLENBQUNBO2dCQUMzQ0EsZ0JBQWdCQSxDQUFDQSxRQUFRQSxHQUFHQSxTQUFTQSxDQUFDQSxRQUFRQSxDQUFDQTtnQkFDL0NBLGdCQUFnQkEsQ0FBQ0EsT0FBT0EsR0FBR0EsU0FBU0EsQ0FBQ0EsT0FBT0EsQ0FBQ0E7Z0JBQzdDQSxnQkFBZ0JBLENBQUNBLFVBQVVBLEdBQUdBLFNBQVNBLENBQUNBLFVBQVVBLENBQUNBO1lBQ3ZEQSxDQUFDQTtZQUFDQSxJQUFJQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxTQUFTQSxLQUFLQSxvQkFBb0JBLENBQUNBLENBQUNBLENBQUNBO2dCQUM1Q0EsZ0JBQWdCQSxDQUFDQSxNQUFNQSxHQUFHQSxTQUFTQSxDQUFDQSxNQUFNQSxDQUFDQTtnQkFDM0NBLGdCQUFnQkEsQ0FBQ0EsUUFBUUEsR0FBR0EsU0FBU0EsQ0FBQ0EsUUFBUUEsQ0FBQ0E7Z0JBQy9DQSxnQkFBZ0JBLENBQUNBLFNBQVNBLEdBQUdBLFNBQVNBLENBQUNBLFNBQVNBLENBQUNBO1lBQ3JEQSxDQUFDQTtZQUFDQSxJQUFJQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxTQUFTQSxLQUFLQSx5QkFBeUJBLENBQUNBLENBQUNBLENBQUNBO2dCQUNqREEsZ0JBQWdCQSxDQUFDQSxNQUFNQSxHQUFHQSxTQUFTQSxDQUFDQSxNQUFNQSxDQUFDQTtnQkFDM0NBLGdCQUFnQkEsQ0FBQ0EsV0FBV0EsR0FBR0EsU0FBU0EsQ0FBQ0EsV0FBV0EsQ0FBQ0E7Z0JBQ3JEQSxnQkFBZ0JBLENBQUNBLFlBQVlBLEdBQUdBLFNBQVNBLENBQUNBLFlBQVlBLENBQUNBO2dCQUN2REEsZ0JBQWdCQSxDQUFDQSxZQUFZQSxHQUFHQSxTQUFTQSxDQUFDQSxZQUFZQSxDQUFDQTtnQkFDdkRBLGdCQUFnQkEsQ0FBQ0EsYUFBYUEsR0FBR0EsU0FBU0EsQ0FBQ0EsYUFBYUEsQ0FBQ0E7Z0JBQ3pEQSxnQkFBZ0JBLENBQUNBLE9BQU9BLEdBQUdBLFNBQVNBLENBQUNBLE9BQU9BLENBQUNBO1lBQ2pEQSxDQUFDQTtZQUVEQSxNQUFNQSxDQUFDQSxnQkFBZ0JBLENBQUNBO1FBQzVCQSxDQUFDQTtRQXhZY3pCLDZCQUFPQSxHQUFHQSxDQUFDQSxRQUFRQSxFQUFFQSxTQUFTQSxFQUFFQSxNQUFNQSxFQUFFQSxlQUFlQSxDQUFDQSxDQUFDQTtRQXlZNUVBLDRCQUFDQTtJQUFEQSxDQTFZQWhCLEFBMFlDZ0IsSUFBQWhCO0lBMVlZQSxvQ0FBcUJBLEdBQXJCQSxxQkEwWVpBLENBQUFBO0lBQUFBLENBQUNBO0lBRUZBLHNCQUFPQSxDQUFDQSxVQUFVQSxDQUFDQSxzQ0FBc0NBLEVBQUVBLHFCQUFxQkEsQ0FBQ0EsQ0FBQ0E7QUFDdEZBLENBQUNBLEVBaGFNLGNBQWMsS0FBZCxjQUFjLFFBZ2FwQjs7QUNoYUQsSUFBTyxjQUFjLENBb0pwQjtBQXBKRCxXQUFPLGNBQWMsRUFBQyxDQUFDO0lBU2xCQSxDQUFDQTtJQUVGQSxJQUFhQSxtQkFBbUJBO1FBRzVCMEMsU0FIU0EsbUJBQW1CQSxDQUdSQSxNQUFVQSxFQUNWQSxTQUE2QkEsRUFDN0JBLElBQW1CQSxFQUNuQkEsYUFBaUJBO1lBSGpCQyxXQUFNQSxHQUFOQSxNQUFNQSxDQUFJQTtZQUNWQSxjQUFTQSxHQUFUQSxTQUFTQSxDQUFvQkE7WUFDN0JBLFNBQUlBLEdBQUpBLElBQUlBLENBQWVBO1lBQ25CQSxrQkFBYUEsR0FBYkEsYUFBYUEsQ0FBSUE7WUFFakNBLE1BQU1BLENBQUNBLE1BQU1BLEdBQUdBLEtBQUtBLENBQUNBO1lBQ3RCQSxNQUFNQSxDQUFDQSxJQUFJQSxHQUFHQSxFQUFFQSxDQUFDQTtZQUNqQkEsTUFBTUEsQ0FBQ0EsU0FBU0EsR0FBR0EsRUFBRUEsQ0FBQ0E7WUFDdEJBLE1BQU1BLENBQUNBLGFBQWFBLEdBQUdBLEVBQUVBLENBQUNBO1lBQzFCQSxJQUFJQSxDQUFDQSxZQUFZQSxFQUFFQSxDQUFDQTtRQUN4QkEsQ0FBQ0E7UUFFTUQsMENBQVlBLEdBQW5CQTtZQUFBRSxpQkF5QkNBO1lBeEJHQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxNQUFNQSxHQUFHQSxLQUFLQSxDQUFDQTtZQUMzQkEsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsU0FBU0EsR0FBR0EsRUFBRUEsQ0FBQ0E7WUFDM0JBLElBQUlBLENBQUNBLGFBQWFBLENBQUNBLFFBQVFBLENBQUNBLEtBQUtBLENBQzdCQSxVQUFDQSxTQUFTQTtnQkFDTkEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsRUFBRUEsQ0FBQ0EsR0FBR0EsU0FBU0EsQ0FBQ0EsTUFBTUEsRUFBRUEsQ0FBQ0EsRUFBRUEsRUFBRUEsQ0FBQ0E7b0JBQ3hDQSxLQUFJQSxDQUFDQSxhQUFhQSxDQUFDQSxRQUFRQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFDQSxVQUFVQSxFQUFFQSxTQUFTQSxDQUFDQSxDQUFDQSxDQUFDQSxFQUFDQSxFQUN0REEsVUFBQ0EsUUFBUUE7d0JBQ0xBLElBQUlBLFdBQVdBLEdBQUdBLEVBQUNBLFVBQVVBLEVBQUVBLEVBQUVBLEVBQ2JBLFlBQVlBLEVBQUVBLFFBQVFBLENBQUNBLFlBQVlBLEVBQ25DQSxXQUFXQSxFQUFFQSxRQUFRQSxDQUFDQSxXQUFXQSxFQUFFQSxDQUFDQTt3QkFDeERBLEVBQUVBLENBQUNBLENBQUNBLFFBQVFBLENBQUNBLFVBQVVBLENBQUNBLENBQUNBLENBQUNBOzRCQUN0QkEsV0FBV0EsQ0FBQ0EsVUFBVUEsR0FBR0EsUUFBUUEsQ0FBQ0EsVUFBVUEsQ0FBQ0E7d0JBQ2pEQSxDQUFDQTt3QkFDREEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsUUFBUUEsQ0FBQ0EsVUFBVUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7NEJBQ3RCQSxXQUFXQSxDQUFDQSxVQUFVQSxHQUFHQSxRQUFRQSxDQUFDQSxVQUFVQSxDQUFDQTt3QkFDakRBLENBQUNBO3dCQUNEQSxLQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxTQUFTQSxDQUFDQSxJQUFJQSxDQUFDQSxXQUFXQSxDQUFDQSxDQUFDQTtvQkFDNUNBLENBQUNBLEVBQUVBLFVBQUNBLGNBQWNBO3dCQUNkQSxLQUFJQSxDQUFDQSxXQUFXQSxDQUFDQSxjQUFjQSxDQUFDQSxDQUFDQTtvQkFDckNBLENBQUNBLENBQUNBLENBQUNBO2dCQUNYQSxDQUFDQTtZQUNMQSxDQUFDQSxFQUFFQSxVQUFDQSxNQUFNQTtnQkFDTkEsS0FBSUEsQ0FBQ0EsV0FBV0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0E7WUFDN0JBLENBQUNBLENBQUNBLENBQUNBO1FBQ1hBLENBQUNBO1FBRU1GLHlDQUFXQSxHQUFsQkE7WUFBQUcsaUJBY0NBO1lBYkdBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLE1BQU1BLEdBQUdBLEtBQUtBLENBQUNBO1lBQzNCQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxRQUFRQSxHQUFHQSxFQUFFQSxDQUFDQTtZQUMxQkEsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsYUFBYUEsR0FBR0EsRUFBRUEsQ0FBQ0E7WUFDL0JBLElBQUlBLENBQUNBLGFBQWFBLENBQUNBLFlBQVlBLENBQUNBLEtBQUtBLENBQ2pDQSxVQUFDQSxhQUFhQTtnQkFDVkEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsRUFBRUEsQ0FBQ0EsR0FBR0EsYUFBYUEsQ0FBQ0EsTUFBTUEsRUFBRUEsQ0FBQ0EsRUFBRUEsRUFBRUEsQ0FBQ0E7b0JBQzVDQSxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTt3QkFDVkEsS0FBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsWUFBWUEsR0FBR0EsYUFBYUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7b0JBQ3pEQSxDQUFDQTtvQkFDREEsS0FBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ3JEQSxDQUFDQTtZQUNMQSxDQUFDQSxDQUNKQSxDQUFDQTtRQUNOQSxDQUFDQTtRQUVNSCwwQ0FBWUEsR0FBbkJBLFVBQW9CQSxVQUFrQkE7WUFBdENJLGlCQTBCQ0E7WUF6QkdBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLE1BQU1BLEdBQUdBLE1BQU1BLENBQUNBO1lBQzVCQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxRQUFRQSxHQUFHQSxFQUFFQSxDQUFDQTtZQUMxQkEsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsYUFBYUEsR0FBR0EsRUFBRUEsQ0FBQ0E7WUFDL0JBLElBQUlBLENBQUNBLGFBQWFBLENBQUNBLFFBQVFBLENBQUNBLEdBQUdBLENBQUNBLEVBQUNBLFVBQVVBLEVBQUVBLFVBQVVBLEVBQUNBLEVBQ3BEQSxVQUFDQSxRQUFRQTtnQkFDTEEsS0FBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsUUFBUUEsR0FBR0EsRUFBQ0EsVUFBVUEsRUFBRUEsRUFBRUEsRUFDZEEsWUFBWUEsRUFBRUEsUUFBUUEsQ0FBQ0EsWUFBWUEsRUFDbkNBLFdBQVdBLEVBQUVBLFFBQVFBLENBQUNBLFdBQVdBLEVBQUNBLENBQUNBO2dCQUMzREEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsUUFBUUEsQ0FBQ0EsVUFBVUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7b0JBQ3RCQSxLQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxRQUFRQSxDQUFDQSxVQUFVQSxHQUFHQSxRQUFRQSxDQUFDQSxVQUFVQSxDQUFDQTtnQkFDMURBLENBQUNBO2dCQUNEQSxFQUFFQSxDQUFDQSxDQUFDQSxRQUFRQSxDQUFDQSxVQUFVQSxDQUFDQSxDQUFDQSxDQUFDQTtvQkFDdEJBLEtBQUlBLENBQUNBLE1BQU1BLENBQUNBLFFBQVFBLENBQUNBLFVBQVVBLEdBQUdBLFFBQVFBLENBQUNBLFVBQVVBLENBQUNBO2dCQUMxREEsQ0FBQ0E7WUFDTEEsQ0FBQ0EsRUFBRUEsVUFBQ0EsTUFBTUE7Z0JBQ05BLEtBQUlBLENBQUNBLFdBQVdBLENBQUNBLE1BQU1BLENBQUNBLENBQUNBO1lBQzdCQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNQQSxJQUFJQSxDQUFDQSxhQUFhQSxDQUFDQSxZQUFZQSxDQUFDQSxLQUFLQSxDQUNqQ0EsVUFBQ0EsYUFBYUE7Z0JBQ1ZBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLEVBQUVBLENBQUNBLEdBQUdBLGFBQWFBLENBQUNBLE1BQU1BLEVBQUVBLENBQUNBLEVBQUVBLEVBQUVBLENBQUNBO29CQUM1Q0EsS0FBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ3JEQSxDQUFDQTtZQUNMQSxDQUFDQSxDQUNKQSxDQUFDQTtRQUVOQSxDQUFDQTtRQUVNSiwwQ0FBWUEsR0FBbkJBO1lBQUFLLGlCQXNCQ0E7WUFyQkdBLElBQUlBLFdBQVdBLEdBQUdBO2dCQUNkQSxVQUFVQSxFQUFFQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxRQUFRQSxDQUFDQSxVQUFVQTtnQkFDM0NBLFlBQVlBLEVBQUVBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLFFBQVFBLENBQUNBLFlBQVlBO2dCQUMvQ0EsV0FBV0EsRUFBRUEsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsV0FBV0E7YUFDaERBLENBQUNBO1lBQ0ZBLEVBQUVBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLE1BQU1BLEtBQUtBLEtBQUtBLENBQUNBLENBQUNBLENBQUNBO2dCQUMvQkEsSUFBSUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsV0FBV0EsRUFDeENBO29CQUNJQSxLQUFJQSxDQUFDQSxZQUFZQSxFQUFFQSxDQUFDQTtnQkFDeEJBLENBQUNBLEVBQUVBLFVBQUNBLE1BQU1BO29CQUNOQSxLQUFJQSxDQUFDQSxXQUFXQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQTtnQkFDN0JBLENBQUNBLENBQUNBLENBQUNBO1lBQ1hBLENBQUNBO1lBQUNBLElBQUlBLENBQUNBLENBQUNBO2dCQUNKQSxJQUFJQSxDQUFDQSxhQUFhQSxDQUFDQSxRQUFRQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFDQSxVQUFVQSxFQUFFQSxXQUFXQSxDQUFDQSxVQUFVQSxFQUFDQSxFQUFFQSxXQUFXQSxFQUM3RUE7b0JBQ0lBLEtBQUlBLENBQUNBLFlBQVlBLEVBQUVBLENBQUNBO2dCQUN4QkEsQ0FBQ0EsRUFBRUEsVUFBQ0EsTUFBTUE7b0JBQ05BLEtBQUlBLENBQUNBLFdBQVdBLENBQUNBLE1BQU1BLENBQUNBLENBQUNBO2dCQUM3QkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDWEEsQ0FBQ0E7UUFFTEEsQ0FBQ0E7UUFFTUwsNENBQWNBLEdBQXJCQSxVQUFzQkEsVUFBa0JBO1lBQXhDTSxpQkFRQ0E7WUFQR0EsSUFBSUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsRUFBQ0EsVUFBVUEsRUFBRUEsVUFBVUEsRUFBQ0EsRUFDdkRBO2dCQUNJQSxLQUFJQSxDQUFDQSxZQUFZQSxFQUFFQSxDQUFDQTtZQUN4QkEsQ0FBQ0EsRUFDREEsVUFBQ0EsTUFBTUE7Z0JBQ0hBLEtBQUlBLENBQUNBLFdBQVdBLENBQUNBLE1BQU1BLENBQUNBLENBQUNBO1lBQzdCQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUNYQSxDQUFDQTtRQUVPTix5Q0FBV0EsR0FBbkJBLFVBQW9CQSxNQUFXQTtZQUMzQk8sSUFBSUEsUUFBUUEsR0FBR0EsRUFBQ0EsSUFBSUEsRUFBRUEsUUFBUUEsRUFBRUEsR0FBR0EsRUFBRUEsRUFBRUEsRUFBQ0EsQ0FBQ0E7WUFDekNBLEVBQUVBLENBQUNBLENBQUNBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLENBQUNBLENBQUNBO2dCQUN2QkEsUUFBUUEsQ0FBQ0EsR0FBR0EsR0FBR0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0E7WUFDeENBLENBQUNBO1lBQUNBLElBQUlBLENBQUNBLENBQUNBO2dCQUNKQSxRQUFRQSxDQUFDQSxHQUFHQSxHQUFHQSxNQUFNQSxDQUFDQSxVQUFVQSxDQUFDQTtZQUNyQ0EsQ0FBQ0E7WUFDREEsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0E7UUFDcENBLENBQUNBO1FBRU1QLDJDQUFhQSxHQUFwQkEsVUFBcUJBLEtBQWFBO1lBQzlCUSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxLQUFLQSxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUN0Q0EsQ0FBQ0E7UUFuSWNSLDJCQUFPQSxHQUFHQSxDQUFDQSxRQUFRQSxFQUFFQSxXQUFXQSxFQUFFQSxNQUFNQSxFQUFFQSxlQUFlQSxDQUFDQSxDQUFDQTtRQXFJOUVBLDBCQUFDQTtJQUFEQSxDQXRJQTFDLEFBc0lDMEMsSUFBQTFDO0lBdElZQSxrQ0FBbUJBLEdBQW5CQSxtQkFzSVpBLENBQUFBO0lBQUFBLENBQUNBO0lBRUZBLHNCQUFPQSxDQUFDQSxVQUFVQSxDQUFDQSxvQ0FBb0NBLEVBQUVBLG1CQUFtQkEsQ0FBQ0EsQ0FBQ0E7QUFDbEZBLENBQUNBLEVBcEpNLGNBQWMsS0FBZCxjQUFjLFFBb0pwQiIsImZpbGUiOiJjb21waWxlZC5qcyIsInNvdXJjZXNDb250ZW50IjpbbnVsbCwiLy8vIENvcHlyaWdodCAyMDE0LTIwMTUgUmVkIEhhdCwgSW5jLiBhbmQvb3IgaXRzIGFmZmlsaWF0ZXNcbi8vLyBhbmQgb3RoZXIgY29udHJpYnV0b3JzIGFzIGluZGljYXRlZCBieSB0aGUgQGF1dGhvciB0YWdzLlxuLy8vXG4vLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vLy9cbi8vLyAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy8vXG4vLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi8uLi9pbmNsdWRlcy50c1wiLz5cbm1vZHVsZSBIYXdrdWxhckFsZXJ0cyB7XG5cbiAgZXhwb3J0IHZhciBwbHVnaW5OYW1lID0gXCJoYXdrdWxhci1hbGVydHNcIjtcblxuICBleHBvcnQgdmFyIGxvZzpMb2dnaW5nLkxvZ2dlciA9IExvZ2dlci5nZXQocGx1Z2luTmFtZSk7XG5cbiAgZXhwb3J0IHZhciB0ZW1wbGF0ZVBhdGggPSBcInBsdWdpbnMvYWxlcnRzL2h0bWxcIjtcbiAgXG59XG4iLCIvLy8gQ29weXJpZ2h0IDIwMTQtMjAxNSBSZWQgSGF0LCBJbmMuIGFuZC9vciBpdHMgYWZmaWxpYXRlc1xuLy8vIGFuZCBvdGhlciBjb250cmlidXRvcnMgYXMgaW5kaWNhdGVkIGJ5IHRoZSBAYXV0aG9yIHRhZ3MuXG4vLy9cbi8vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vL1xuLy8vICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vLy9cbi8vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uLy4uL2luY2x1ZGVzLnRzXCIvPlxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cImFsZXJ0c0dsb2JhbHMudHNcIi8+XG5tb2R1bGUgSGF3a3VsYXJBbGVydHMge1xuXG4gIGV4cG9ydCB2YXIgX21vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKEhhd2t1bGFyQWxlcnRzLnBsdWdpbk5hbWUsIFsndWkuYm9vdHN0cmFwJywgJ3VpLnNlbGVjdCcsICdoYXdrdWxhci5zZXJ2aWNlcyddKTtcblxuICB2YXIgdGFiOmFueSA9IHVuZGVmaW5lZDtcblxuICBfbW9kdWxlLmNvbmZpZyhbJyRsb2NhdGlvblByb3ZpZGVyJywgJyRyb3V0ZVByb3ZpZGVyJywgJ0hhd3Rpb05hdkJ1aWxkZXJQcm92aWRlcicsICgkbG9jYXRpb25Qcm92aWRlciwgJHJvdXRlUHJvdmlkZXI6bmcucm91dGUuSVJvdXRlUHJvdmlkZXIsIGJ1aWxkZXI6SGF3dGlvTWFpbk5hdi5CdWlsZGVyRmFjdG9yeSkgPT4ge1xuICAgIHRhYiA9IGJ1aWxkZXIuY3JlYXRlKClcbiAgICAgIC5pZChIYXdrdWxhckFsZXJ0cy5wbHVnaW5OYW1lKVxuICAgICAgLnRpdGxlKCgpID0+IFwiQWxlcnRzXCIpXG4gICAgICAuaHJlZigoKSA9PiBcIi9hbGVydHNcIilcbiAgICAgIC5zdWJQYXRoKFwiRGFzaGJvYXJkXCIsIFwiZGFzaGJvYXJkXCIsIGJ1aWxkZXIuam9pbihIYXdrdWxhckFsZXJ0cy50ZW1wbGF0ZVBhdGgsICdkYXNoYm9hcmQuaHRtbCcpKVxuICAgICAgLnN1YlBhdGgoXCJEZWZpbml0aW9uc1wiLCBcImRlZmluaXRpb25zXCIsIGJ1aWxkZXIuam9pbihIYXdrdWxhckFsZXJ0cy50ZW1wbGF0ZVBhdGgsICdkZWZpbml0aW9ucy5odG1sJykpXG4gICAgICAuc3ViUGF0aChcIk5vdGlmaWVyc1wiLCBcIm5vdGlmaWVyc1wiLCBidWlsZGVyLmpvaW4oSGF3a3VsYXJBbGVydHMudGVtcGxhdGVQYXRoLCAnbm90aWZpZXJzLmh0bWwnKSlcbiAgICAgIC5idWlsZCgpO1xuICAgIGJ1aWxkZXIuY29uZmlndXJlUm91dGluZygkcm91dGVQcm92aWRlciwgdGFiKTtcblxuICAgICRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh0cnVlKTtcbiAgfV0pO1xuXG4gIF9tb2R1bGUucnVuKFsnSGF3dGlvTmF2JywgKEhhd3Rpb05hdjpIYXd0aW9NYWluTmF2LlJlZ2lzdHJ5KSA9PiB7XG4gICAgSGF3dGlvTmF2LmFkZCh0YWIpO1xuICB9XSk7XG5cbiAgaGF3dGlvUGx1Z2luTG9hZGVyLmFkZE1vZHVsZShIYXdrdWxhckFsZXJ0cy5wbHVnaW5OYW1lKTtcbn1cbiIsIi8vLyBDb3B5cmlnaHQgMjAxNC0yMDE1IFJlZCBIYXQsIEluYy4gYW5kL29yIGl0cyBhZmZpbGlhdGVzXG4vLy8gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycyBhcyBpbmRpY2F0ZWQgYnkgdGhlIEBhdXRob3IgdGFncy5cbi8vL1xuLy8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy8vXG4vLy8gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vL1xuLy8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiYWxlcnRzUGx1Z2luLnRzXCIvPlxubW9kdWxlIEhhd2t1bGFyQWxlcnRzIHtcblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgSURhc2hib2FyZENvbnRyb2xsZXIge1xuICAgICAgICBzaG93UmVmcmVzaEZvcm0oKTogdm9pZDtcbiAgICAgICAgaGlkZVJlZnJlc2hGb3JtKCk6IHZvaWQ7XG4gICAgICAgIHVwZGF0ZVJlZnJlc2goKTogdm9pZDtcbiAgICB9O1xuXG4gICAgZXhwb3J0IGNsYXNzIERhc2hib2FyZENvbnRyb2xsZXIgaW1wbGVtZW50cyBJRGFzaGJvYXJkQ29udHJvbGxlciB7XG4gICAgICAgIHB1YmxpYyBzdGF0aWMgICRpbmplY3QgPSBbJyRzY29wZScsICckaW50ZXJ2YWwnLCAnJGxvZycsICdIYXdrdWxhckFsZXJ0J107XG5cbiAgICAgICAgcHJpdmF0ZSBzdG9wSW50ZXJ2YWw6IGFueTtcbiAgICAgICAgcHJpdmF0ZSBnOiBHcmFwaDtcblxuICAgICAgICBjb25zdHJ1Y3Rvcihwcml2YXRlICRzY29wZTphbnksXG4gICAgICAgICAgICAgICAgICAgIHByaXZhdGUgJGludGVydmFsOm5nLklJbnRlcnZhbFNlcnZpY2UsXG4gICAgICAgICAgICAgICAgICAgIHByaXZhdGUgJGxvZzpuZy5JTG9nU2VydmljZSxcbiAgICAgICAgICAgICAgICAgICAgcHJpdmF0ZSBIYXdrdWxhckFsZXJ0OmFueSkge1xuXG4gICAgICAgICAgICAkc2NvcGUubXNncyA9IFtdO1xuICAgICAgICAgICAgJHNjb3BlLnJlZnJlc2ggPSB7XG4gICAgICAgICAgICAgICAgaW50ZXJ2YWw6IDIwMDBcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICAkc2NvcGUuc2hvd1JlZnJlc2ggPSBmYWxzZTtcblxuICAgICAgICAgICAgdmFyIG9uZUhvdXIgPSAxICogNjAgKiA2MCAqIDEwMDA7XG4gICAgICAgICAgICB2YXIgZW5kVGltZSA9IERhdGUubm93KCkgKyBvbmVIb3VyO1xuICAgICAgICAgICAgdmFyIHN0YXJ0VGltZSA9IGVuZFRpbWUgLSAoMS41ICogb25lSG91cik7XG5cbiAgICAgICAgICAgIHRoaXMuZyA9IEdyYXBoLmdldEluc3RhbmNlKCk7XG5cbiAgICAgICAgICAgIHRoaXMuZy5pbml0KCdhbGVydHNEYXNoYm9hcmQnLFxuICAgICAgICAgICAgICAgIDkwMCxcbiAgICAgICAgICAgICAgICB7IHRvcDogMTAwLCBsZWZ0OiAxMjUsIGJvdHRvbTogMCwgcmlnaHQ6IDAgfSxcbiAgICAgICAgICAgICAgICBzdGFydFRpbWUsXG4gICAgICAgICAgICAgICAgZW5kVGltZSxcbiAgICAgICAgICAgICAgICAoc2VyaWVzLCB0aW1lc3RhbXApID0+IHtcbiAgICAgICAgICAgICAgICAgICAgLypcbiAgICAgICAgICAgICAgICAgICAgIFwic2VyaWVzXCIgdmFyIHdpbGwgc3RvcmUgd2hvbGUgdGV4dCB3aXRoICg8bnVtYmVyPikgY291bnRlciByZXByZXNlbnRhdGlvblxuICAgICAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICAgICAgdmFyIHNhbml0aXplZFNlcmllcyA9IHNlcmllcy5zdWJzdHJpbmcoMCwgc2VyaWVzLmxhc3RJbmRleE9mKCcoJykpLnRyaW0oKTtcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLiRhcHBseSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUubGVnZW5kID0gdGhpcy5nLmdldEV2ZW50KHNhbml0aXplZFNlcmllcywgdGltZXN0YW1wKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgdGhpcy5nZXRBbGVydHMoKTtcblxuICAgICAgICAgICAgdGhpcy5zdG9wSW50ZXJ2YWwgPSAkaW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2V0QWxlcnRzKCk7XG4gICAgICAgICAgICB9LCAkc2NvcGUucmVmcmVzaC5pbnRlcnZhbCk7XG5cbiAgICAgICAgICAgICRzY29wZS4kb24oJyRkZXN0cm95JywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY2FuY2VsUmVmcmVzaCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBzaG93UmVmcmVzaEZvcm0oKTogdm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zaG93UmVmcmVzaCA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBoaWRlUmVmcmVzaEZvcm0oKTogdm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zaG93UmVmcmVzaCA9IGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgdXBkYXRlUmVmcmVzaCgpOiB2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLnNob3dSZWZyZXNoID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLmNhbmNlbFJlZnJlc2goKTtcbiAgICAgICAgICAgIHRoaXMuc3RvcEludGVydmFsID0gdGhpcy4kaW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2V0QWxlcnRzKCk7XG4gICAgICAgICAgICB9LCB0aGlzLiRzY29wZS5yZWZyZXNoLmludGVydmFsKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNsb3NlQWxlcnRNc2coaW5kZXg6IG51bWJlcik6dm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5tc2dzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGdldEFsZXJ0cygpOiB2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5BbGVydC5xdWVyeShcbiAgICAgICAgICAgICAgICAoYWxlcnRzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBhbGVydHNMZW5ndGggPSBhbGVydHMubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFsZXJ0c0xlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYWxlcnQgPSBhbGVydHNbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydC5uYW1lID0gYWxlcnQudHJpZ2dlcklkO1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQuZGF0ZSA9IG5ldyBEYXRlKGFsZXJ0LnRpbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gQ3JlYXRlIGEgZGVzY3JpcHRpb25cbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0LmRlc2NyaXB0aW9uID0gYWxlcnQuZXZhbFNldHMudG9TdHJpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZy5hZGRFdmVudChhbGVydCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LCAocmVhc29uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBjYW5jZWxSZWZyZXNoKCk6IHZvaWQge1xuICAgICAgICAgICAgdGhpcy4kaW50ZXJ2YWwuY2FuY2VsKHRoaXMuc3RvcEludGVydmFsKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgYWRkQWxlcnRNc2cocmVhc29uOiBhbnkpOnZvaWQge1xuICAgICAgICAgICAgdmFyIG5ld0FsZXJ0ID0ge3R5cGU6ICdkYW5nZXInLCBtc2c6ICcnfTtcbiAgICAgICAgICAgIGlmIChyZWFzb24uZGF0YSAmJiByZWFzb24uZGF0YS5lcnJvck1zZykge1xuICAgICAgICAgICAgICAgIG5ld0FsZXJ0Lm1zZyA9IHJlYXNvbi5kYXRhLmVycm9yTXNnO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBuZXdBbGVydC5tc2cgPSByZWFzb24uc3RhdHVzVGV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLm1zZ3MucHVzaChuZXdBbGVydCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgX21vZHVsZS5jb250cm9sbGVyKCdIYXdrdWxhckFsZXJ0cy5EYXNoYm9hcmRDb250cm9sbGVyJywgRGFzaGJvYXJkQ29udHJvbGxlcik7XG5cbiAgICBleHBvcnQgY2xhc3MgR3JhcGgge1xuXG4gICAgICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTpHcmFwaCA9IG51bGw7XG5cbiAgICAgICAgcHJpdmF0ZSBfaW5pdGlhbGl6ZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICAgICAgcHJpdmF0ZSBfY2hhcnRQbGFjZWhvbGRlcjogYW55O1xuICAgICAgICBwcml2YXRlIF93aWR0aDogbnVtYmVyO1xuICAgICAgICBwcml2YXRlIF9tYXJnaW46IGFueTtcbiAgICAgICAgcHJpdmF0ZSBfc3RhcnRUaW1lOiBudW1iZXI7XG4gICAgICAgIHByaXZhdGUgX2VuZFRpbWU6IG51bWJlcjtcbiAgICAgICAgcHJpdmF0ZSBfY29sb3I7XG5cbiAgICAgICAgLypcbiAgICAgICAgICAgICBHbG9iYWwgZGF0YSBvZiB0aGUgZ3JhcGg6XG4gICAgICAgICAgICAgLSBJdCBpcyBhIGxpc3Qgb2YgYXJyYXlzLlxuICAgICAgICAgICAgIC0gRWFjaCBhcnJheSBoYXM6XG4gICAgICAgICAgICAgYSkgZmlyc3QgZWxlbWVudDogYSB0ZXh0IGNvbnRhaW5pbmcgbmFtZSBvZiB0aGUgc2VyaWVzLlxuICAgICAgICAgICAgIGIpIG90aGVyIGVsZW1lbnRzOiBkYXRlIG9iamVjdHMgcmVwcmVzZW50aW5nIGV2ZW50cy5cbiAgICAgICAgICAgICAtIFRoaXMgYXJyYXkgaXMgcGFzc2VkIHRvIGQzIG9iamVjdCBhcyBpbnB1dCBmb3IgcmF3IGRhdGEuXG4gICAgICAgICAqL1xuICAgICAgICBwcml2YXRlIF9kYXRhID0gW107XG5cbiAgICAgICAgLypcbiAgICAgICAgICAgICBBdXggYXNzb2NpYXRpdmUgYXJyYXkgdG8gbWFwIGEgbmFtZSBvZiBzZXJpZXMgd2l0aCB0aGUgaW5kZXggb24gX2RhdGFbXSBhcnJheS5cbiAgICAgICAgICAgICBJZiB3ZSBoYXZlIGEgc2VyaWVzIG5hbWUsIHdlIGNhbiBhY2NlcyB0byBpdHMgc2VyaWVzIGRhdGEgdXNpbmc6XG5cbiAgICAgICAgICAgICBfZGF0YVtfc2VyaWVzSW5kZXhlc1snTXlTZXJpZXMnXV1cbiAgICAgICAgICovXG4gICAgICAgIHByaXZhdGUgX3Nlcmllc0luZGV4ZXMgPSBbXTtcblxuICAgICAgICAvKlxuICAgICAgICAgICAgIEFzc29jaWF0aXZlIGFycmF5IHRvIHN0b3JlIFwiZXZlbnRzXCIuXG4gICAgICAgICAgICAgLSBGaXJzdCBsZXZlbCBpcyBhbiBhc3NvY2lhdGl2ZSBhcnJheSBiYXNlZCBvbiBldmVudC5uYW1lLlxuICAgICAgICAgICAgIC0gU2Vjb25kIGxldmVsIGlzIGFuIGFzc29jaWF0aXZlIGFycmF5IGJhc2VkIG9uIGV2ZW50LmRhdGUuXG5cbiAgICAgICAgICAgICBfc3RvcmFnZVtldmVudC5uYW1lXVtldmVudC5kYXRlXSA9IGV2ZW50XG4gICAgICAgICAqL1xuICAgICAgICBwcml2YXRlIF9zdG9yYWdlID0gW107XG5cbiAgICAgICAgLypcbiAgICAgICAgIEdsb2JhbCBncmFwaCBvYmplY3QuXG4gICAgICAgICAqL1xuICAgICAgICBwcml2YXRlIF9ncmFwaDtcbiAgICAgICAgcHJpdmF0ZSBfZWxlbWVudDtcblxuICAgICAgICAvKlxuICAgICAgICAgICAgU2NhbGUgdG8gbWFpbnRhaW4gYXNwZWN0IHJhdGlvIGFmdGVyIHJlZHJhd1xuICAgICAgICAgKi9cbiAgICAgICAgcHJpdmF0ZSBfc2NhbGVEb21haW47XG5cbiAgICAgICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgICAgICBpZiAoR3JhcGguX2luc3RhbmNlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU29tZXRoaW5nIGVycm9yIGluIEdyYXBoIHNpbmdsZXRvbiBpbml0aWFsaXphdGlvblwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEdyYXBoLl9pbnN0YW5jZSA9IHRoaXM7XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgc3RhdGljIGdldEluc3RhbmNlKCk6R3JhcGgge1xuICAgICAgICAgICAgaWYgKEdyYXBoLl9pbnN0YW5jZSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIEdyYXBoLl9pbnN0YW5jZSA9IG5ldyBHcmFwaCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIEdyYXBoLl9pbnN0YW5jZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBpbml0KGRhc2hib2FyZElkOiBzdHJpbmcsXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBudW1iZXIsXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogYW55LFxuICAgICAgICAgICAgICAgICAgICBzdGFydFRpbWU6IG51bWJlcixcbiAgICAgICAgICAgICAgICAgICAgZW5kVGltZTogbnVtYmVyLFxuICAgICAgICAgICAgICAgICAgICBob3ZlckNhbGxCYWNrOiBGdW5jdGlvbik6IHZvaWQge1xuICAgICAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5fY2hhcnRQbGFjZWhvbGRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGRhc2hib2FyZElkKTtcbiAgICAgICAgICAgIHRoaXMuX3dpZHRoID0gd2lkdGg7XG4gICAgICAgICAgICB0aGlzLl9tYXJnaW4gPSBtYXJnaW47XG4gICAgICAgICAgICB0aGlzLl9zdGFydFRpbWUgPSBzdGFydFRpbWU7XG4gICAgICAgICAgICB0aGlzLl9lbmRUaW1lID0gZW5kVGltZTtcblxuICAgICAgICAgICAgaWYgKHRoaXMuX3NjYWxlRG9tYWluKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fc3RhcnRUaW1lID0gdGhpcy5fc2NhbGVEb21haW5bMF07XG4gICAgICAgICAgICAgICAgdGhpcy5fZW5kVGltZSA9IHRoaXMuX3NjYWxlRG9tYWluWzFdO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLl9jb2xvciA9IGQzLnNjYWxlLmNhdGVnb3J5MTAoKTtcbiAgICAgICAgICAgIHRoaXMuX2dyYXBoID0gZDMuY2hhcnQuZXZlbnREcm9wcygpXG4gICAgICAgICAgICAgICAgLnN0YXJ0KG5ldyBEYXRlKHRoaXMuX3N0YXJ0VGltZSkpXG4gICAgICAgICAgICAgICAgLmVuZChuZXcgRGF0ZSh0aGlzLl9lbmRUaW1lKSlcbiAgICAgICAgICAgICAgICAuZXZlbnRDb2xvcigoZGF0dW0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9jb2xvcihpbmRleCk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAud2lkdGgodGhpcy5fd2lkdGgpXG4gICAgICAgICAgICAgICAgLm1hcmdpbih0aGlzLl9tYXJnaW4pXG4gICAgICAgICAgICAgICAgLmF4aXNGb3JtYXQoKHhBeGlzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHhBeGlzLnRpY2tzKDUpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmV2ZW50SG92ZXIoKGVsKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzZXJpZXMgPSBlbC5wYXJlbnROb2RlLmZpcnN0Q2hpbGQuaW5uZXJIVE1MO1xuICAgICAgICAgICAgICAgICAgICB2YXIgdGltZXN0YW1wID0gZDMuc2VsZWN0KGVsKS5kYXRhKClbMF07XG5cbiAgICAgICAgICAgICAgICAgICAgaG92ZXJDYWxsQmFjayhzZXJpZXMsIHRpbWVzdGFtcCk7XG5cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5ldmVudFpvb20oKHNjYWxlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3NjYWxlRG9tYWluID0gc2NhbGUuZG9tYWluKCk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQgPSBkMy5zZWxlY3QodGhpcy5fY2hhcnRQbGFjZWhvbGRlcikuYXBwZW5kKCdkaXYnKS5kYXR1bSh0aGlzLl9kYXRhKTtcbiAgICAgICAgICAgIHRoaXMuX2RhdGEgPSB0aGlzLl9lbGVtZW50LmRhdHVtKCk7XG4gICAgICAgICAgICB0aGlzLl9ncmFwaCh0aGlzLl9lbGVtZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBhZGRFdmVudChldmVudDogYW55KTogdm9pZCB7XG4gICAgICAgICAgICBpZiAodGhpcy5faW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fc3RvcmFnZVtldmVudC5uYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSBfc3RvcmFnZVxuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3U2VyaWVzID0gW107XG4gICAgICAgICAgICAgICAgICAgIG5ld1Nlcmllc1tldmVudC5kYXRlXSA9IGV2ZW50O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9zdG9yYWdlW2V2ZW50Lm5hbWVdID0gbmV3U2VyaWVzO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSBfZGF0YVxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9zZXJpZXNJbmRleGVzLnB1c2goZXZlbnQubmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBuZXdMaW5lID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogZXZlbnQubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVzOiBbIGV2ZW50LmRhdGUgXVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLiBfZGF0YS5wdXNoKG5ld0xpbmUpO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIFJlZHJhd1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fc2NhbGVEb21haW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2dyYXBoLnN0YXJ0KHRoaXMuX3NjYWxlRG9tYWluWzBdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2dyYXBoLmVuZCh0aGlzLl9zY2FsZURvbWFpblsxXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZ3JhcGgodGhpcy5fZWxlbWVudCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX3N0b3JhZ2VbZXZlbnQubmFtZV1bZXZlbnQuZGF0ZV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gVXBkYXRlIF9zdG9yYWdlXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9zdG9yYWdlW2V2ZW50Lm5hbWVdW2V2ZW50LmRhdGVdID0gZXZlbnQ7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSBfZGF0YVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGkgPSB0aGlzLl9zZXJpZXNJbmRleGVzLmluZGV4T2YoZXZlbnQubmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9kYXRhW2ldLmRhdGVzLnB1c2goZXZlbnQuZGF0ZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFJlZHJhd1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX3NjYWxlRG9tYWluKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fZ3JhcGguc3RhcnQodGhpcy5fc2NhbGVEb21haW5bMF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2dyYXBoLmVuZCh0aGlzLl9zY2FsZURvbWFpblsxXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9ncmFwaCh0aGlzLl9lbGVtZW50KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBnZXRFdmVudChuYW1lOiBhbnksIGRhdGU6IGFueSk6IGFueSB7XG4gICAgICAgICAgICBpZiAodGhpcy5faW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fc3RvcmFnZVtuYW1lXSAhPT0gdW5kZWZpbmVkICYmIHRoaXMuX3N0b3JhZ2VbbmFtZV1bZGF0ZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fc3RvcmFnZVtuYW1lXVtkYXRlXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cbn1cbiIsIi8vLyBDb3B5cmlnaHQgMjAxNC0yMDE1IFJlZCBIYXQsIEluYy4gYW5kL29yIGl0cyBhZmZpbGlhdGVzXG4vLy8gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycyBhcyBpbmRpY2F0ZWQgYnkgdGhlIEBhdXRob3IgdGFncy5cbi8vL1xuLy8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy8vXG4vLy8gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vL1xuLy8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiYWxlcnRzUGx1Z2luLnRzXCIvPlxubW9kdWxlIEhhd2t1bGFyQWxlcnRzIHtcblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgSURlZmluaXRpb25zQ29udHJvbGxlciB7XG4gICAgICAgIGFsbERlZmluaXRpb25zKCk6dm9pZDtcbiAgICAgICAgbmV3RGVmaW5pdGlvbigpOnZvaWQ7XG4gICAgICAgIHNhdmVEZWZpbml0aW9uKCk6dm9pZDtcbiAgICAgICAgdmlld0RlZmluaXRpb24oaWQ6IHN0cmluZyk6dm9pZDtcbiAgICAgICAgZGVsZXRlRGVmaW5pdGlvbihpZDogc3RyaW5nKTp2b2lkO1xuICAgICAgICBjbG9zZUFsZXJ0TXNnKGluZGV4OiBudW1iZXIpOnZvaWQ7XG4gICAgICAgIG5ld0NvbmRpdGlvbigpOnZvaWQ7XG4gICAgICAgIGNoYW5nZUNvbmRpdGlvblR5cGUoKTp2b2lkO1xuICAgICAgICB2aWV3Q29uZGl0aW9uKGNvbmRpdGlvbklkOiBzdHJpbmcpOnZvaWQ7XG4gICAgICAgIHNhdmVDb25kaXRpb24oKTp2b2lkO1xuICAgICAgICBkZWxldGVDb25kaXRpb24oY29uZGl0aW9uSWQ6IHN0cmluZywgY2xhc3NOYW1lOiBzdHJpbmcpOnZvaWQ7XG4gICAgICAgIGNhbmNlbENvbmRpdGlvbigpOnZvaWQ7XG4gICAgICAgIHNhdmVEYW1wZW5pbmcoKTp2b2lkO1xuICAgICAgICByZWxvYWREZWZpbml0aW9ucygpOnZvaWQ7XG4gICAgfTtcblxuICAgIGV4cG9ydCBjbGFzcyBEZWZpbml0aW9uc0NvbnRyb2xsZXIgaW1wbGVtZW50cyBJRGVmaW5pdGlvbnNDb250cm9sbGVyIHtcbiAgICAgICAgcHVibGljIHN0YXRpYyAgJGluamVjdCA9IFsnJHNjb3BlJywgJyR3aW5kb3cnLCAnJGxvZycsICdIYXdrdWxhckFsZXJ0J107XG5cbiAgICAgICAgY29uc3RydWN0b3IocHJpdmF0ZSAkc2NvcGU6YW55LFxuICAgICAgICAgICAgICAgICAgICBwcml2YXRlICR3aW5kb3c6YW55LFxuICAgICAgICAgICAgICAgICAgICBwcml2YXRlICRsb2c6bmcuSUxvZ1NlcnZpY2UsXG4gICAgICAgICAgICAgICAgICAgIHByaXZhdGUgSGF3a3VsYXJBbGVydDphbnkpIHtcblxuICAgICAgICAgICAgJHNjb3BlLnN0YXR1cyA9ICdhbGwnO1xuICAgICAgICAgICAgJHNjb3BlLm1zZ3MgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuYWxsRGVmaW5pdGlvbnMoKTtcbiAgICAgICAgICAgIHRoaXMuYWxsTm90aWZpZXJzKCk7XG4gICAgICAgIH1cblxuICAgICAgICBhbGxEZWZpbml0aW9ucygpOnZvaWQge1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUuc3RhdHVzID0gJ2FsbCc7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS50cmlnZ2VycyA9IHRoaXMuSGF3a3VsYXJBbGVydC5UcmlnZ2VyLnF1ZXJ5KCk7XG4gICAgICAgIH1cblxuICAgICAgICBuZXdEZWZpbml0aW9uKCk6dm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zdGF0dXMgPSAnbmV3JztcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLnRyaWdnZXIgPSB7IG1hdGNoOiBcIkFMTFwiLCBlbmFibGVkOiB0cnVlfTtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLmRhbXBlbmluZyA9IHsgdHlwZTogJ1JFTEFYRURfQ09VTlQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2YWxUcnVlU2V0dGluZzogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmFsVG90YWxTZXR0aW5nOiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2YWxUaW1lU2V0dGluZzogMH07XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zdGF0dXNEYW1wZW5pbmcgPSB7c3RhdHVzOiAnbmV3J307XG4gICAgICAgICAgICB0aGlzLmFsbE5vdGlmaWVycygpO1xuICAgICAgICB9XG5cbiAgICAgICAgc2F2ZURlZmluaXRpb24oKTp2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLm1zZ3MgPSBbXTtcbiAgICAgICAgICAgIGlmICh0aGlzLiRzY29wZS5zdGF0dXMgPT09ICduZXcnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0LlRyaWdnZXIuc2F2ZSh0aGlzLiRzY29wZS50cmlnZ2VyLFxuICAgICAgICAgICAgICAgICAgICAodHJpZ2dlcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZGFtcGVuaW5nLnRyaWdnZXJJZCA9IHRyaWdnZXIuaWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuRGFtcGVuaW5nLnNhdmUodGhpcy4kc2NvcGUuZGFtcGVuaW5nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChkYW1wZW5pbmcpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy52aWV3RGVmaW5pdGlvbihkYW1wZW5pbmcudHJpZ2dlcklkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAocmVhc29uRGFtcGVuaW5nKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uRGFtcGVuaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB9LCAocmVhc29uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEFsZXJ0TXNnKHJlYXNvbik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSBpZiAodGhpcy4kc2NvcGUuc3RhdHVzID09PSAnZWRpdCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuVHJpZ2dlci5wdXQoe3RyaWdnZXJJZDogdGhpcy4kc2NvcGUudHJpZ2dlci5pZH0sIHRoaXMuJHNjb3BlLnRyaWdnZXIsXG4gICAgICAgICAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5EYW1wZW5pbmcucHV0KHRoaXMuJHNjb3BlLmRhbXBlbmluZyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWxsRGVmaW5pdGlvbnMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAocmVhc29uRGFtcGVuaW5nKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb25EYW1wZW5pbmcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgKHJlYXNvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb24pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZpZXdEZWZpbml0aW9uKGlkOiBzdHJpbmcpOnZvaWQge1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUuc3RhdHVzID0gJ2VkaXQnO1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUudHJpZ2dlciA9IHt9O1xuICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0LlRyaWdnZXIuZ2V0KHt0cmlnZ2VySWQ6IGlkfSxcbiAgICAgICAgICAgICAgICAocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUudHJpZ2dlciA9IHJlc3BvbnNlO1xuICAgICAgICAgICAgICAgIH0sIChyZWFzb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb24pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5hbGxDb25kaXRpb25zKGlkKTtcbiAgICAgICAgICAgIHRoaXMuZ2V0RGFtcGVuaW5nKGlkKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGRlbGV0ZURlZmluaXRpb24oaWQ6IHN0cmluZyk6dm9pZCB7XG4gICAgICAgICAgICBpZiAodGhpcy4kd2luZG93LmNvbmZpcm0oJ0RvIHlvdSB3YW50IHRvIGRlbGV0ZSAnICsgaWQgKyAnID8nKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLm1zZ3MgPSBbXTtcbiAgICAgICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuVHJpZ2dlci5kZWxldGUoe3RyaWdnZXJJZDogaWR9LFxuICAgICAgICAgICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuRGFtcGVuaW5nLmRlbGV0ZSh7dHJpZ2dlcklkOiBpZH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRlbGV0ZUFsbENvbmRpdGlvbnMoaWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFsbERlZmluaXRpb25zKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgKHJlYXNvbkRhbXBlbmluZykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEFsZXJ0TXNnKHJlYXNvbkRhbXBlbmluZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgKHJlYXNvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb24pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNsb3NlQWxlcnRNc2coaW5kZXg6IG51bWJlcik6dm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5tc2dzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGFkZEFsZXJ0TXNnKHJlYXNvbjogYW55KTp2b2lkIHtcbiAgICAgICAgICAgIHZhciBuZXdBbGVydCA9IHt0eXBlOiAnZGFuZ2VyJywgbXNnOiAnJ307XG4gICAgICAgICAgICBpZiAocmVhc29uLmRhdGEuZXJyb3JNc2cpIHtcbiAgICAgICAgICAgICAgICBuZXdBbGVydC5tc2cgPSByZWFzb24uZGF0YS5lcnJvck1zZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbmV3QWxlcnQubXNnID0gcmVhc29uLnN0YXR1c1RleHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5tc2dzLnB1c2gobmV3QWxlcnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBhbGxOb3RpZmllcnMoKTp2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLm5vdGlmaWVycyA9IFtdO1xuICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0Lk5vdGlmaWVyLnF1ZXJ5KFxuICAgICAgICAgICAgICAgIChyZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUubm90aWZpZXJzID0gcmVzdWx0O1xuICAgICAgICAgICAgICAgIH0sIChyZWFzb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb24pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGFsbENvbmRpdGlvbnModHJpZ2dlcklkOiBzdHJpbmcpOnZvaWQge1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUuY29uZGl0aW9ucyA9IFtdO1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUuc3RhdHVzQ29uZGl0aW9uID0geyBzdGF0dXM6ICcnLCBjb25kaXRpb25JZDogJyd9O1xuICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0LlRyaWdnZXIuY29uZGl0aW9ucyh7dHJpZ2dlcklkOiB0cmlnZ2VySWR9LFxuICAgICAgICAgICAgICAgIChjb25kaXRpb25zTGlzdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY29uZGl0aW9uQ2xhc3M6YW55ID0ge307XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29uZGl0aW9uc0xpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmRpdGlvbkNsYXNzW2NvbmRpdGlvbnNMaXN0W2ldLmNvbmRpdGlvbklkXSA9IGNvbmRpdGlvbnNMaXN0W2ldLmNsYXNzTmFtZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY29uZGl0aW9uc0xpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjb25kaXRpb24gPSBjb25kaXRpb25zTGlzdFtpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydFtjb25kaXRpb24uY2xhc3NOYW1lXS5nZXQoe2NvbmRpdGlvbklkOiBjb25kaXRpb24uY29uZGl0aW9uSWR9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjb25kaXRpb25CeVR5cGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNsYXNzTmFtZSA9IGNvbmRpdGlvbkNsYXNzW2NvbmRpdGlvbkJ5VHlwZS5jb25kaXRpb25JZF07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZXdDb25kaXRpb24gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25kaXRpb25JZDogY29uZGl0aW9uQnlUeXBlLmNvbmRpdGlvbklkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25kaXRpb246IGNvbmRpdGlvbkJ5VHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLmdldERlc2NyaXB0aW9uKGNsYXNzTmFtZSwgY29uZGl0aW9uQnlUeXBlKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5jb25kaXRpb25zLnB1c2gobmV3Q29uZGl0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAocmVhc29uVHlwZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEFsZXJ0TXNnKHJlYXNvblR5cGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSwgKHJlYXNvbkxpc3QpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb25MaXN0KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgZ2V0RGFtcGVuaW5nKHRyaWdnZXJJZDogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5kYW1wZW5pbmcgPSB7fTtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLnN0YXR1c0RhbXBlbmluZyA9IHsgc3RhdHVzOiAndmlldyd9O1xuXG4gICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuRGFtcGVuaW5nLmdldCh7dHJpZ2dlcklkOiB0cmlnZ2VySWR9LFxuICAgICAgICAgICAgICAgIChkYW1wZW5pbmcpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZGFtcGVuaW5nID0gZGFtcGVuaW5nO1xuICAgICAgICAgICAgICAgIH0sIChyZWFzb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZGFtcGVuaW5nID0geyB0cmlnZ2VySWQ6IHRyaWdnZXJJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdSRUxBWEVEX0NPVU5UJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2YWxUcnVlU2V0dGluZzogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2YWxUb3RhbFNldHRpbmc6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICBldmFsVGltZVNldHRpbmc6IDB9O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuRGFtcGVuaW5nLnNhdmUodGhpcy4kc2NvcGUuZGFtcGVuaW5nLFxuICAgICAgICAgICAgICAgICAgICAgICAgKHJlYXNvbkRhbXBlbmluZykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uRGFtcGVuaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgc2F2ZURhbXBlbmluZygpOiB2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5EYW1wZW5pbmcucHV0KHRoaXMuJHNjb3BlLmRhbXBlbmluZyxcbiAgICAgICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuc3RhdHVzRGFtcGVuaW5nLnN0YXR1cyA9ICd2aWV3JztcbiAgICAgICAgICAgICAgICB9LCAocmVhc29uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgZGVsZXRlRGFtcGVuaW5nKHRyaWdnZXJJZDogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuRGFtcGVuaW5nLmRlbGV0ZSh7dHJpZ2dlcklkOiB0cmlnZ2VySWR9LFxuICAgICAgICAgICAgICAgKHJlYXNvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEFsZXJ0TXNnKHJlYXNvbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyB2aWV3RGFtcGVuaW5nKHRyaWdnZXJJZDogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zdGF0dXNEYW1wZW5pbmcgPSB7IHN0YXR1czogJ2VkaXQnfTtcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgZ2V0RGVzY3JpcHRpb24oY2xhc3NOYW1lOiBzdHJpbmcsIGNvbmRpdGlvbjogYW55KTpzdHJpbmcge1xuICAgICAgICAgICAgdmFyIGRlc2NyaXB0aW9uID0gXCJcIjtcbiAgICAgICAgICAgIHZhciBvcCA9IFwiXCI7XG4gICAgICAgICAgICBpZiAoY2xhc3NOYW1lID09PSAnQXZhaWxhYmlsaXR5Q29uZGl0aW9uJykge1xuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gY29uZGl0aW9uLmRhdGFJZCArIFwiIGlzIFwiICsgY29uZGl0aW9uLm9wZXJhdG9yO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChjbGFzc05hbWUgPT09ICdDb21wYXJlQ29uZGl0aW9uJykge1xuICAgICAgICAgICAgICAgIG9wID0gdGhpcy5nZXRPcGVyYXRvcihjb25kaXRpb24ub3BlcmF0b3IpO1xuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gY29uZGl0aW9uLmRhdGExSWQgKyBcIiBcIiArIG9wICsgXCIgXCIgK1xuICAgICAgICAgICAgICAgICAgICBcIihcIiArIGNvbmRpdGlvbi5kYXRhMk11bHRpcGxpZXIgKyBcIiAqIFwiICsgY29uZGl0aW9uLmRhdGEySWQgKyBcIilcIjtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoY2xhc3NOYW1lID09PSAnU3RyaW5nQ29uZGl0aW9uJykge1xuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gY29uZGl0aW9uLmRhdGFJZCArIFwiIFwiICsgY29uZGl0aW9uLm9wZXJhdG9yICsgXCIgJ1wiICtcbiAgICAgICAgICAgICAgICAgICAgY29uZGl0aW9uLnBhdHRlcm4gKyBcIicgKEEvYSBcIiArIGNvbmRpdGlvbi5pZ25vcmVDYXNlICsgXCIpXCI7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGNsYXNzTmFtZSA9PT0gJ1RocmVzaG9sZENvbmRpdGlvbicpIHtcbiAgICAgICAgICAgICAgICBvcCA9IHRoaXMuZ2V0T3BlcmF0b3IoY29uZGl0aW9uLm9wZXJhdG9yKTtcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiA9IGNvbmRpdGlvbi5kYXRhSWQgKyBcIiBcIiArIG9wICsgXCIgXCIgKyBjb25kaXRpb24udGhyZXNob2xkO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChjbGFzc05hbWUgPT09ICdUaHJlc2hvbGRSYW5nZUNvbmRpdGlvbicpIHtcbiAgICAgICAgICAgICAgICB2YXIgbG93ID0gXCJbXCI7XG4gICAgICAgICAgICAgICAgdmFyIGhpZ2ggPSBcIl1cIjtcbiAgICAgICAgICAgICAgICBpZiAoY29uZGl0aW9uLm9wZXJhdG9yTG93ICE9PSAnSU5DTFVTSVZFJykge1xuICAgICAgICAgICAgICAgICAgICBsb3cgPSBcIihcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGNvbmRpdGlvbi5vcGVyYXRvckhpZ2ggIT09ICdJTkNMVVNJVkUnKSB7XG4gICAgICAgICAgICAgICAgICAgIGhpZ2ggPSBcIilcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGlub3V0ID0gXCIgaW4gXCI7XG4gICAgICAgICAgICAgICAgaWYgKCFjb25kaXRpb24uaW5SYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICBpbm91dCA9IFwiIG91dCBcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gPSBjb25kaXRpb24uZGF0YUlkICsgaW5vdXQgKyBsb3cgKyBjb25kaXRpb24udGhyZXNob2xkTG93ICsgXCIsIFwiICtcbiAgICAgICAgICAgICAgICAgICAgY29uZGl0aW9uLnRocmVzaG9sZEhpZ2ggKyBoaWdoO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGRlc2NyaXB0aW9uO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBnZXRPcGVyYXRvcihvcENvZGU6IHN0cmluZyk6c3RyaW5nIHtcbiAgICAgICAgICAgIHZhciBvcCA9IFwiXCI7XG4gICAgICAgICAgICBpZiAob3BDb2RlID09PSAnR1QnKSB7XG4gICAgICAgICAgICAgICAgb3AgPSBcIj5cIjtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAob3BDb2RlID09PSAnR1RFJykge1xuICAgICAgICAgICAgICAgIG9wID0gXCI+PVwiO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChvcENvZGUgPT09ICdMVCcpIHtcbiAgICAgICAgICAgICAgICBvcCA9IFwiPFwiO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChvcENvZGUgPT09ICdMVEUnKSB7XG4gICAgICAgICAgICAgICAgb3AgPSBcIjw9XCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gb3A7XG4gICAgICAgIH1cblxuICAgICAgICBuZXdDb25kaXRpb24oKTp2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLnN0YXR1c0NvbmRpdGlvbiA9IHtzdGF0dXM6ICduZXcnLCBjb25kaXRpb25JZDogJycsIGNsYXNzTmFtZTogJ0F2YWlsYWJpbGl0eUNvbmRpdGlvbid9O1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbiA9IHsgdHJpZ2dlcklkOiB0aGlzLiRzY29wZS50cmlnZ2VyLmlkLCBjb25kaXRpb25TZXRTaXplOiAxLCBjb25kaXRpb25TZXRJbmRleDogMX07XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5jbGFzc05hbWVzID0gWydBdmFpbGFiaWxpdHlDb25kaXRpb24nLCAnQ29tcGFyZUNvbmRpdGlvbicsICdTdHJpbmdDb25kaXRpb24nLFxuICAgICAgICAgICAgICAgICdUaHJlc2hvbGRDb25kaXRpb24nLCAnVGhyZXNob2xkUmFuZ2VDb25kaXRpb24nXTtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlQ29uZGl0aW9uVHlwZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgY2hhbmdlQ29uZGl0aW9uVHlwZSgpOnZvaWQge1xuICAgICAgICAgICAgaWYgKHRoaXMuJHNjb3BlLnN0YXR1c0NvbmRpdGlvbi5jbGFzc05hbWUgPT09ICdBdmFpbGFiaWxpdHlDb25kaXRpb24nKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbi5kYXRhSWQgPSAnJztcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLm9wZXJhdG9yID0gJ0RPV04nO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLiRzY29wZS5zdGF0dXNDb25kaXRpb24uY2xhc3NOYW1lID09PSAnQ29tcGFyZUNvbmRpdGlvbicpIHtcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLmRhdGExSWQgPSAnJztcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLm9wZXJhdG9yID0gJ0xUJztcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLmRhdGEyTXVsdGlwbGllciA9IDEuMDtcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLmRhdGEySWQgPSAnJztcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy4kc2NvcGUuc3RhdHVzQ29uZGl0aW9uLmNsYXNzTmFtZSA9PT0gJ1N0cmluZ0NvbmRpdGlvbicpIHtcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLmRhdGFJZCA9ICcnO1xuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24ub3BlcmF0b3IgPSAnRVFVQUwnO1xuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24ucGF0dGVybiA9ICcnO1xuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24uaWdub3JlQ2FzZSA9IGZhbHNlO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLiRzY29wZS5zdGF0dXNDb25kaXRpb24uY2xhc3NOYW1lID09PSAnVGhyZXNob2xkQ29uZGl0aW9uJykge1xuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24uZGF0YUlkID0gJyc7XG4gICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbi5vcGVyYXRvciA9ICdMVCc7XG4gICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbi50aHJlc2hvbGQgPSAwLjA7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuJHNjb3BlLnN0YXR1c0NvbmRpdGlvbi5jbGFzc05hbWUgPT09ICdUaHJlc2hvbGRSYW5nZUNvbmRpdGlvbicpIHtcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLmRhdGFJZCA9ICcnO1xuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24ub3BlcmF0b3JMb3cgPSAnSU5DTFVTSVZFJztcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLm9wZXJhdG9ySGlnaCA9ICdJTkNMVVNJVkUnO1xuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24udGhyZXNob2xkTG93ID0gMC4wO1xuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24udGhyZXNob2xkSGlnaCA9IDAuMDtcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLmluUmFuZ2UgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdmlld0NvbmRpdGlvbihjb25kaXRpb246IGFueSk6dm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zdGF0dXNDb25kaXRpb24gPSB7c3RhdHVzOiAnZWRpdCcsIGNvbmRpdGlvbklkOiBjb25kaXRpb24uY29uZGl0aW9uSWQsIGNsYXNzTmFtZTogY29uZGl0aW9uLmNsYXNzTmFtZX07XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uID0gY29uZGl0aW9uLmNvbmRpdGlvbjtcbiAgICAgICAgfVxuXG4gICAgICAgIHNhdmVDb25kaXRpb24oKTp2b2lkIHtcbiAgICAgICAgICAgIGlmICh0aGlzLiRzY29wZS5zdGF0dXNDb25kaXRpb24uc3RhdHVzID09PSAnbmV3Jykge1xuICAgICAgICAgICAgICAgIHZhciB1cGRhdGVkQ29uZGl0aW9uID0gdGhpcy5wcmVwYXJlQ29uZGl0aW9uKHRoaXMuJHNjb3BlLnN0YXR1c0NvbmRpdGlvbi5jbGFzc05hbWUsIHRoaXMuJHNjb3BlLmVkaXRDb25kaXRpb24pO1xuICAgICAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydFt0aGlzLiRzY29wZS5zdGF0dXNDb25kaXRpb24uY2xhc3NOYW1lXS5zYXZlKHVwZGF0ZWRDb25kaXRpb24sXG4gICAgICAgICAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLnN0YXR1c0NvbmRpdGlvbiA9IHtzdGF0dXM6ICcnfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudmlld0RlZmluaXRpb24odGhpcy4kc2NvcGUudHJpZ2dlci5pZCk7XG4gICAgICAgICAgICAgICAgICAgIH0sIChyZWFzb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydFt0aGlzLiRzY29wZS5zdGF0dXNDb25kaXRpb24uY2xhc3NOYW1lXS5kZWxldGUoe2NvbmRpdGlvbklkOiB0aGlzLiRzY29wZS5lZGl0Q29uZGl0aW9uLmNvbmRpdGlvbklkfSxcbiAgICAgICAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVwZGF0ZWRDb25kaXRpb24gPSB0aGlzLnByZXBhcmVDb25kaXRpb24odGhpcy4kc2NvcGUuc3RhdHVzQ29uZGl0aW9uLmNsYXNzTmFtZSwgdGhpcy4kc2NvcGUuZWRpdENvbmRpdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnRbdGhpcy4kc2NvcGUuc3RhdHVzQ29uZGl0aW9uLmNsYXNzTmFtZV0uc2F2ZSh1cGRhdGVkQ29uZGl0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuc3RhdHVzQ29uZGl0aW9uID0ge3N0YXR1czogJyd9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnZpZXdEZWZpbml0aW9uKHRoaXMuJHNjb3BlLnRyaWdnZXIuaWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIChyZWFzb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9LCAocmVhc29uRGVsZXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEFsZXJ0TXNnKHJlYXNvbkRlbGV0ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBkZWxldGVDb25kaXRpb24oY29uZGl0aW9uSWQ6IHN0cmluZywgY2xhc3NOYW1lOiBzdHJpbmcpOnZvaWQge1xuICAgICAgICAgICAgaWYgKHRoaXMuJHdpbmRvdy5jb25maXJtKCdEbyB5b3Ugd2FudCB0byBkZWxldGUgJyArIGNvbmRpdGlvbklkICsgJyA/JykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLiRsb2cuZGVidWcoJ2RlbGV0ZUNvbmRpdGlvbignICsgY29uZGl0aW9uSWQgKyAnKScpO1xuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLm1zZ3MgPSBbXTtcbiAgICAgICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnRbY2xhc3NOYW1lXS5kZWxldGUoe2NvbmRpdGlvbklkOiBjb25kaXRpb25JZH0sXG4gICAgICAgICAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLnN0YXR1c0NvbmRpdGlvbiA9IHtzdGF0dXM6ICcnfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudmlld0RlZmluaXRpb24odGhpcy4kc2NvcGUudHJpZ2dlci5pZCk7XG4gICAgICAgICAgICAgICAgICAgIH0sIChyZWFzb25EZWxldGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uRGVsZXRlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgZGVsZXRlQWxsQ29uZGl0aW9ucyh0cmlnZ2VySWQ6IHN0cmluZyk6dm9pZCB7XG4gICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuVHJpZ2dlci5jb25kaXRpb25zKHt0cmlnZ2VySWQ6IHRyaWdnZXJJZH0sXG4gICAgICAgICAgICAgICAgKGNvbmRpdGlvbnNMaXN0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjb25kaXRpb25DbGFzczphbnkgPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb25kaXRpb25zTGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uZGl0aW9uQ2xhc3NbY29uZGl0aW9uc0xpc3RbaV0uY29uZGl0aW9uSWRdID0gY29uZGl0aW9uc0xpc3RbaV0uY2xhc3NOYW1lO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBjb25kaXRpb25zTGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNvbmRpdGlvbiA9IGNvbmRpdGlvbnNMaXN0W2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0W2NvbmRpdGlvbi5jbGFzc05hbWVdLmRlbGV0ZSh7Y29uZGl0aW9uSWQ6IGNvbmRpdGlvbi5jb25kaXRpb25JZH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHJlYXNvblR5cGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb25UeXBlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIChyZWFzb25MaXN0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uTGlzdCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBjYW5jZWxDb25kaXRpb24oKTp2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLnN0YXR1c0NvbmRpdGlvbiA9IHtzdGF0dXM6ICcnfTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlbG9hZERlZmluaXRpb25zKCk6dm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRsb2cuaW5mbygncmVsb2FkRGVmaW5pdGlvbnMoKScpO1xuICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0LkFsZXJ0LnJlbG9hZCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgLypcbiAgICAgICAgICAgIFByZXBhcmUgYSBjb25kaXRpb24gZm9yIHNhdmUuXG4gICAgICAgICAgICBDaGVja3MgZmllbGRzIGFuZCBjb25kaXRpb25JZC5cbiAgICAgICAgICovXG4gICAgICAgIHByaXZhdGUgcHJlcGFyZUNvbmRpdGlvbihjbGFzc05hbWU6c3RyaW5nLCBjb25kaXRpb246YW55KTphbnkge1xuICAgICAgICAgICAgdmFyIHVwZGF0ZWRDb25kaXRpb246YW55ID0geyB9O1xuICAgICAgICAgICAgdXBkYXRlZENvbmRpdGlvbi50cmlnZ2VySWQgPSBjb25kaXRpb24udHJpZ2dlcklkO1xuICAgICAgICAgICAgdXBkYXRlZENvbmRpdGlvbi5jb25kaXRpb25TZXRTaXplID0gY29uZGl0aW9uLmNvbmRpdGlvblNldFNpemU7XG4gICAgICAgICAgICB1cGRhdGVkQ29uZGl0aW9uLmNvbmRpdGlvblNldEluZGV4ID0gY29uZGl0aW9uLmNvbmRpdGlvblNldEluZGV4O1xuICAgICAgICAgICAgaWYgKGNsYXNzTmFtZSA9PT0gJ0F2YWlsYWJpbGl0eUNvbmRpdGlvbicpIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVkQ29uZGl0aW9uLmRhdGFJZCA9IGNvbmRpdGlvbi5kYXRhSWQ7XG4gICAgICAgICAgICAgICAgdXBkYXRlZENvbmRpdGlvbi5vcGVyYXRvciA9IGNvbmRpdGlvbi5vcGVyYXRvcjtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoY2xhc3NOYW1lID09PSAnQ29tcGFyZUNvbmRpdGlvbicpIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVkQ29uZGl0aW9uLmRhdGExSWQgPSBjb25kaXRpb24uZGF0YTFJZDtcbiAgICAgICAgICAgICAgICB1cGRhdGVkQ29uZGl0aW9uLm9wZXJhdG9yID0gY29uZGl0aW9uLm9wZXJhdG9yO1xuICAgICAgICAgICAgICAgIHVwZGF0ZWRDb25kaXRpb24uZGF0YTJNdWx0aXBsaWVyID0gY29uZGl0aW9uLmRhdGEyTXVsdGlwbGllcjtcbiAgICAgICAgICAgICAgICB1cGRhdGVkQ29uZGl0aW9uLmRhdGEySWQgPSBjb25kaXRpb24uZGF0YTJJZDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoY2xhc3NOYW1lID09PSAnU3RyaW5nQ29uZGl0aW9uJykge1xuICAgICAgICAgICAgICAgIHVwZGF0ZWRDb25kaXRpb24uZGF0YUlkID0gY29uZGl0aW9uLmRhdGFJZDtcbiAgICAgICAgICAgICAgICB1cGRhdGVkQ29uZGl0aW9uLm9wZXJhdG9yID0gY29uZGl0aW9uLm9wZXJhdG9yO1xuICAgICAgICAgICAgICAgIHVwZGF0ZWRDb25kaXRpb24ucGF0dGVybiA9IGNvbmRpdGlvbi5wYXR0ZXJuO1xuICAgICAgICAgICAgICAgIHVwZGF0ZWRDb25kaXRpb24uaWdub3JlQ2FzZSA9IGNvbmRpdGlvbi5pZ25vcmVDYXNlO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChjbGFzc05hbWUgPT09ICdUaHJlc2hvbGRDb25kaXRpb24nKSB7XG4gICAgICAgICAgICAgICAgdXBkYXRlZENvbmRpdGlvbi5kYXRhSWQgPSBjb25kaXRpb24uZGF0YUlkO1xuICAgICAgICAgICAgICAgIHVwZGF0ZWRDb25kaXRpb24ub3BlcmF0b3IgPSBjb25kaXRpb24ub3BlcmF0b3I7XG4gICAgICAgICAgICAgICAgdXBkYXRlZENvbmRpdGlvbi50aHJlc2hvbGQgPSBjb25kaXRpb24udGhyZXNob2xkO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChjbGFzc05hbWUgPT09ICdUaHJlc2hvbGRSYW5nZUNvbmRpdGlvbicpIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVkQ29uZGl0aW9uLmRhdGFJZCA9IGNvbmRpdGlvbi5kYXRhSWQ7XG4gICAgICAgICAgICAgICAgdXBkYXRlZENvbmRpdGlvbi5vcGVyYXRvckxvdyA9IGNvbmRpdGlvbi5vcGVyYXRvckxvdztcbiAgICAgICAgICAgICAgICB1cGRhdGVkQ29uZGl0aW9uLm9wZXJhdG9ySGlnaCA9IGNvbmRpdGlvbi5vcGVyYXRvckhpZ2g7XG4gICAgICAgICAgICAgICAgdXBkYXRlZENvbmRpdGlvbi50aHJlc2hvbGRMb3cgPSBjb25kaXRpb24udGhyZXNob2xkTG93O1xuICAgICAgICAgICAgICAgIHVwZGF0ZWRDb25kaXRpb24udGhyZXNob2xkSGlnaCA9IGNvbmRpdGlvbi50aHJlc2hvbGRIaWdoO1xuICAgICAgICAgICAgICAgIHVwZGF0ZWRDb25kaXRpb24uaW5SYW5nZSA9IGNvbmRpdGlvbi5pblJhbmdlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gdXBkYXRlZENvbmRpdGlvbjtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBfbW9kdWxlLmNvbnRyb2xsZXIoJ0hhd2t1bGFyQWxlcnRzLkRlZmluaXRpb25zQ29udHJvbGxlcicsIERlZmluaXRpb25zQ29udHJvbGxlcik7XG59XG4iLCIvLy8gQ29weXJpZ2h0IDIwMTQtMjAxNSBSZWQgSGF0LCBJbmMuIGFuZC9vciBpdHMgYWZmaWxpYXRlc1xuLy8vIGFuZCBvdGhlciBjb250cmlidXRvcnMgYXMgaW5kaWNhdGVkIGJ5IHRoZSBAYXV0aG9yIHRhZ3MuXG4vLy9cbi8vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vL1xuLy8vICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vLy9cbi8vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cImFsZXJ0c1BsdWdpbi50c1wiLz5cbm1vZHVsZSBIYXdrdWxhckFsZXJ0cyB7XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIElOb3RpZmllcnNDb250cm9sbGVyIHtcbiAgICAgICAgYWxsTm90aWZpZXJzKCk6IHZvaWQ7XG4gICAgICAgIG5ld05vdGlmaWVyKCk6IHZvaWQ7XG4gICAgICAgIHZpZXdOb3RpZmllcihub3RpZmllcklkOiBzdHJpbmcpOnZvaWQ7XG4gICAgICAgIHNhdmVOb3RpZmllcigpOnZvaWQ7XG4gICAgICAgIGRlbGV0ZU5vdGlmaWVyKG5vdGlmaWVySWQ6IHN0cmluZyk6dm9pZDtcbiAgICAgICAgY2xvc2VBbGVydE1zZyhpbmRleDogbnVtYmVyKTp2b2lkO1xuICAgIH07XG5cbiAgICBleHBvcnQgY2xhc3MgTm90aWZpZXJzQ29udHJvbGxlciBpbXBsZW1lbnRzIElOb3RpZmllcnNDb250cm9sbGVyIHtcbiAgICAgICAgcHVibGljIHN0YXRpYyAgJGluamVjdCA9IFsnJHNjb3BlJywgJyRpbnRlcnZhbCcsICckbG9nJywgJ0hhd2t1bGFyQWxlcnQnXTtcblxuICAgICAgICBjb25zdHJ1Y3Rvcihwcml2YXRlICRzY29wZTphbnksXG4gICAgICAgICAgICAgICAgICAgIHByaXZhdGUgJGludGVydmFsOm5nLklJbnRlcnZhbFNlcnZpY2UsXG4gICAgICAgICAgICAgICAgICAgIHByaXZhdGUgJGxvZzpuZy5JTG9nU2VydmljZSxcbiAgICAgICAgICAgICAgICAgICAgcHJpdmF0ZSBIYXdrdWxhckFsZXJ0OmFueSkge1xuXG4gICAgICAgICAgICAkc2NvcGUuc3RhdHVzID0gJ2FsbCc7XG4gICAgICAgICAgICAkc2NvcGUubXNncyA9IFtdO1xuICAgICAgICAgICAgJHNjb3BlLm5vdGlmaWVycyA9IFtdO1xuICAgICAgICAgICAgJHNjb3BlLm5vdGlmaWVyVHlwZXMgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuYWxsTm90aWZpZXJzKCk7XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgYWxsTm90aWZpZXJzKCk6IHZvaWQge1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUuc3RhdHVzID0gJ2FsbCc7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5ub3RpZmllcnMgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5Ob3RpZmllci5xdWVyeShcbiAgICAgICAgICAgICAgICAobm90aWZpZXJzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm90aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuTm90aWZpZXIuZ2V0KHtub3RpZmllcklkOiBub3RpZmllcnNbaV19LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChub3RpZmllcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV3Tm90aWZpZXIgPSB7bm90aWZpZXJJZDogJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90aWZpZXJUeXBlOiBub3RpZmllci5Ob3RpZmllclR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IG5vdGlmaWVyLmRlc2NyaXB0aW9uIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub3RpZmllci5Ob3RpZmllcklEKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdOb3RpZmllci5ub3RpZmllcklkID0gbm90aWZpZXIuTm90aWZpZXJJRDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobm90aWZpZXIuTm90aWZpZXJJZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3Tm90aWZpZXIubm90aWZpZXJJZCA9IG5vdGlmaWVyLk5vdGlmaWVySWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUubm90aWZpZXJzLnB1c2gobmV3Tm90aWZpZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIChyZWFzb25Ob3RpZmllcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEFsZXJ0TXNnKHJlYXNvbk5vdGlmaWVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIChyZWFzb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb24pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIG5ld05vdGlmaWVyKCk6dm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zdGF0dXMgPSAnbmV3JztcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLm5vdGlmaWVyID0ge307XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5ub3RpZmllclR5cGVzID0gW107XG4gICAgICAgICAgICB0aGlzLkhhd2t1bGFyQWxlcnQuTm90aWZpZXJUeXBlLnF1ZXJ5KFxuICAgICAgICAgICAgICAgIChub3RpZmllclR5cGVzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm90aWZpZXJUeXBlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGkgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5ub3RpZmllci5ub3RpZmllclR5cGUgPSBub3RpZmllclR5cGVzWzBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUubm90aWZpZXJUeXBlcy5wdXNoKG5vdGlmaWVyVHlwZXNbaV0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyB2aWV3Tm90aWZpZXIobm90aWZpZXJJZDogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5zdGF0dXMgPSAnZWRpdCc7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5ub3RpZmllciA9IHt9O1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUubm90aWZpZXJUeXBlcyA9IFtdO1xuICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0Lk5vdGlmaWVyLmdldCh7bm90aWZpZXJJZDogbm90aWZpZXJJZH0sXG4gICAgICAgICAgICAgICAgKG5vdGlmaWVyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLm5vdGlmaWVyID0ge25vdGlmaWVySWQ6ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RpZmllclR5cGU6IG5vdGlmaWVyLk5vdGlmaWVyVHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IG5vdGlmaWVyLmRlc2NyaXB0aW9ufTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vdGlmaWVyLk5vdGlmaWVySUQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLm5vdGlmaWVyLm5vdGlmaWVySWQgPSBub3RpZmllci5Ob3RpZmllcklEO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChub3RpZmllci5Ob3RpZmllcklkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5ub3RpZmllci5ub3RpZmllcklkID0gbm90aWZpZXIuTm90aWZpZXJJZDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIChyZWFzb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb24pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0Lk5vdGlmaWVyVHlwZS5xdWVyeShcbiAgICAgICAgICAgICAgICAobm90aWZpZXJUeXBlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5vdGlmaWVyVHlwZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLm5vdGlmaWVyVHlwZXMucHVzaChub3RpZmllclR5cGVzW2ldKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBzYXZlTm90aWZpZXIoKTp2b2lkIHtcbiAgICAgICAgICAgIHZhciBuZXdOb3RpZmllciA9IHtcbiAgICAgICAgICAgICAgICBOb3RpZmllcklkOiB0aGlzLiRzY29wZS5ub3RpZmllci5ub3RpZmllcklkLFxuICAgICAgICAgICAgICAgIE5vdGlmaWVyVHlwZTogdGhpcy4kc2NvcGUubm90aWZpZXIubm90aWZpZXJUeXBlLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLiRzY29wZS5ub3RpZmllci5kZXNjcmlwdGlvblxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlmICh0aGlzLiRzY29wZS5zdGF0dXMgPT09ICduZXcnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0Lk5vdGlmaWVyLnNhdmUobmV3Tm90aWZpZXIsXG4gICAgICAgICAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWxsTm90aWZpZXJzKCk7XG4gICAgICAgICAgICAgICAgICAgIH0sIChyZWFzb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnRNc2cocmVhc29uKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuSGF3a3VsYXJBbGVydC5Ob3RpZmllci5wdXQoe25vdGlmaWVySWQ6IG5ld05vdGlmaWVyLk5vdGlmaWVySWR9LCBuZXdOb3RpZmllcixcbiAgICAgICAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hbGxOb3RpZmllcnMoKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgKHJlYXNvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRBbGVydE1zZyhyZWFzb24pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIGRlbGV0ZU5vdGlmaWVyKG5vdGlmaWVySWQ6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICAgICAgdGhpcy5IYXdrdWxhckFsZXJ0Lk5vdGlmaWVyLmRlbGV0ZSh7bm90aWZpZXJJZDogbm90aWZpZXJJZH0sXG4gICAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFsbE5vdGlmaWVycygpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKHJlYXNvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEFsZXJ0TXNnKHJlYXNvbik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGFkZEFsZXJ0TXNnKHJlYXNvbjogYW55KTp2b2lkIHtcbiAgICAgICAgICAgIHZhciBuZXdBbGVydCA9IHt0eXBlOiAnZGFuZ2VyJywgbXNnOiAnJ307XG4gICAgICAgICAgICBpZiAocmVhc29uLmRhdGEuZXJyb3JNc2cpIHtcbiAgICAgICAgICAgICAgICBuZXdBbGVydC5tc2cgPSByZWFzb24uZGF0YS5lcnJvck1zZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbmV3QWxlcnQubXNnID0gcmVhc29uLnN0YXR1c1RleHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5tc2dzLnB1c2gobmV3QWxlcnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIGNsb3NlQWxlcnRNc2coaW5kZXg6IG51bWJlcik6dm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5tc2dzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBfbW9kdWxlLmNvbnRyb2xsZXIoJ0hhd2t1bGFyQWxlcnRzLk5vdGlmaWVyc0NvbnRyb2xsZXInLCBOb3RpZmllcnNDb250cm9sbGVyKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
angular.module("hawkular-ui-components-alerts-templates", []).run(["$templateCache", function($templateCache) {$templateCache.put("plugins/alerts/html/dashboard.html","<div class=\"row\">\n  <div class=\"col-md-12\" ng-controller=\"HawkularAlerts.DashboardController as dsc\">\n    <h1>Alerts Dashboard</h1>\n    <div id=\"alertsDashboard\"></div>\n    <div class=\"col-md-8 col-md-offset-2\" ng-show=\"legend != null\">\n      <div class=\"dataTables_wrapper no-footer\">\n        <div class=\"dataTables_header\">\n          <div class=\"dataTables_info\">Alert at <b>{{ legend.date | date:\'d MMM, y hh:mm:ss a\' }}</b></div>\n        </div>\n        <table class=\"datatable table table-striped table-bordered dataTable no-footer\" role=\"grid\">\n          <thead>\n          <tr role=\"row\">\n            <th> EvalSet</th>\n            <th> Conditions</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr ng-repeat=\"evalSet in legend.evalSets\" ng-class-odd=\"\'gradeA odd\'\" ng-class-even=\"\'gradeA even\'\" >\n            <td></td>\n            <td>\n              <ul class=\"list-unstyled\">\n                <li ng-repeat=\"condition in evalSet\">\n                  <b>{{ condition.log }}</b> at <i>{{ condition.evalTimestamp | date:\'d MMM, y hh:mm:ss a\'}}</i>\n                </li>\n              </ul>\n              {{ match.time | date:\'d MMM, y hh:mm:ss a\'}}\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <p>\n        <a href ng-click=\"dsc.showRefreshForm()\"><span class=\"pficon pficon-refresh\"></span> Refresh Config</a>\n      </p>\n      <form ng-if=\"showRefresh\" class=\"form-horizontal\" ng-submit=\"dsc.updateRefresh()\">\n        <div class=\"form-group\">\n          <label class=\"col-md-4 control-label\" for=\"refreshInput\">\n            Refresh (ms):\n          </label>\n          <div class=\"col-md-3\">\n            <input type=\"number\" id=\"refreshInput\" ng-model=\"refresh.interval\" class=\"form-control\" ng-minlength=\"1\" required>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"col-md-6 col-md-offset-4\">\n            <button type=\"submit\" class=\"btn btn-primary\">Change</button>\n            <button type=\"button\" class=\"btn btn-default\" ng-click=\"dsc.hideRefreshForm()\">Cancel</button>\n          </div>\n        </div>\n      </form>\n      <alert ng-repeat=\"alertMsg in msgs\" type=\"{{alertMsg.type}}\" close=\"dsc.closeAlertMsg($index)\">{{alertMsg.msg}}</alert>\n    </div>\n  </div>\n</div>\n");
$templateCache.put("plugins/alerts/html/definitions.html","<div class=\"row\">\n  <div class=\"col-md-12\" ng-controller=\"HawkularAlerts.DefinitionsController as dc\">\n\n    <div ng-if=\"status == \'all\'\" ng-include=\"\'plugins/alerts/html/definitionsAll.html\'\"></div>\n\n    <div ng-if=\"status == \'new\'\" ng-include=\"\'plugins/alerts/html/definitionsNew.html\'\"></div>\n\n    <div ng-if=\"status == \'edit\'\" ng-include=\"\'plugins/alerts/html/definitionsEdit.html\'\"></div>\n\n  </div>\n</div>\n");
$templateCache.put("plugins/alerts/html/definitionsAll.html","<h1>Trigger Definitions</h1>\n<div class=\"dataTables_wrapper no-footer\">\n  <div class=\"dataTables_header\">\n    <div class=\"text-right\">\n      <button ng-click=\"dc.newDefinition()\" type=\"button\" class=\"btn btn-primary\">New Trigger</button>\n      <button ng-click=\"dc.allDefinitions()\" type=\"button\" class=\"btn btn-info\">Refresh</button>\n      <button ng-click=\"dc.reloadDefinitions()\" type=\"button\" class=\"btn btn-success\">Reload</button>\n    </div>\n  </div>\n  <table class=\"datatable table table-striped table-bordered dataTable no-footer\" role=\"grid\">\n    <thead>\n    <tr role=\"row\">\n      <th class=\"vert-align\">Id</th>\n      <th class=\"vert-align\">Enabled</th>\n      <th class=\"vert-align\">Name</th>\n      <th class=\"vert-align\">Description</th>\n      <th class=\"vert-align\">Match</th>\n      <th class=\"vert-align\">Notifiers</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat=\"trigger in triggers | orderBy:[\'id\', \'name\']:false\" ng-class-odd=\"\'gradeA odd\'\" ng-class-even=\"\'gradeA even\'\" >\n      <td class=\"vert-align\">{{ trigger.id }}</td>\n      <td class=\"vert-align\">{{ trigger.enabled }}</td>\n      <td class=\"vert-align\">{{ trigger.name }}</td>\n      <td class=\"vert-align\">{{ trigger.description }}</td>\n      <td class=\"vert-align\">{{ trigger.match }}</td>\n      <td class=\"vert-align\">\n        <ul class=\"list-unstyled\">\n          <li ng-repeat=\"notifier in trigger.notifiers\">{{ notifier }}</li>\n        </ul>\n      </td>\n      <td style=\"vertical-align: middle;\">\n        <div class=\"text-right\">\n          <a ng-click=\"dc.viewDefinition(trigger.id)\" class=\"btn btn-primary\">View</a>\n          <a class=\"btn btn-danger\" ng-click=\"dc.deleteDefinition(trigger.id)\">Delete</a>\n        </div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n\n");
$templateCache.put("plugins/alerts/html/definitionsConditions.html","<div class=\"dataTables_wrapper no-footer\">\n  <div class=\"dataTables_header\" ng-if=\"statusCondition.status != \'new\'\">\n    <div class=\"text-right\">\n      <button  type=\"button\" class=\"btn btn-primary\"\n          ng-click=\"dc.newCondition()\">New Condition</button>\n    </div>\n  </div>\n  <div ng-if=\"statusCondition.status == \'new\'\" class=\"col-md-12\"\n       ng-include=\"\'plugins/alerts/html/definitionsConditionsEdit.html\'\">\n  </div>\n  <table class=\"datatable table table-striped table-bordered dataTable no-footer\" role=\"grid\">\n    <thead>\n    <tr role=\"row\">\n      <th class=\"vert-align\">Condition</th>\n      <th class=\"vert-align\">Description</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat-start=\"condition in conditions | orderBy:[\'conditionId\', \'description\']:false\" ng-class-odd=\"\'gradeA odd\'\" ng-class-even=\"\'gradeA even\'\" >\n      <td class=\"vert-align\">{{ condition.conditionId }}</td>\n      <td class=\"vert-align\">{{ condition.description }}</td>\n      <td style=\"vertical-align: middle;\">\n        <div class=\"text-right\">\n          <a ng-if=\"!(statusCondition.status == \'edit\' && statusCondition.conditionId == condition.conditionId)\"\n             ng-click=\"dc.viewCondition(condition)\" class=\"btn btn-primary\">View</a>\n          <a ng-if=\"!(statusCondition.status == \'edit\' && statusCondition.conditionId == condition.conditionId)\"\n             class=\"btn btn-danger\" ng-click=\"dc.deleteCondition(condition.conditionId, condition.className)\">Delete</a>\n        </div>\n      </td>\n    </tr>\n    <tr ng-if=\"statusCondition.status == \'edit\' && statusCondition.conditionId == condition.conditionId\" ng-repeat-end=\"\">\n      <td colspan=\"3\">\n        <div class=\"col-md-12\" ng-include=\"\'plugins/alerts/html/definitionsConditionsEdit.html\'\">\n        </div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>");
$templateCache.put("plugins/alerts/html/definitionsConditionsEdit.html","<h4 class=\"h5\">{{statusCondition.className}}</h4>\n<form class=\"form-horizontal\" name=\"editConditionForm\">\n  <div ng-if=\"statusCondition.status == \'new\'\" class=\"form-group\">\n    <label class=\"col-md-4 control-label\" for=\"newConditionType\">\n      Condition Type\n    </label>\n    <div class=\"col-md-6\">\n      <ui-select ng-if=\"statusCondition.status == \'new\'\" id=\"newConditionType\"\n                 ng-model=\"statusCondition.className\" theme=\"bootstrap\"\n                 ng-change=\"dc.changeConditionType()\">\n        <ui-select-match placeholder=\"Select condition type...\">{{$select.selected}}</ui-select-match>\n        <ui-select-choices repeat=\"classLabel in classNames | filter:$select.search\">\n          {{ classLabel }}\n        </ui-select-choices>\n      </ui-select>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\" for=\"conditionSetSize\">\n      Condition Set Size\n    </label>\n    <div class=\"col-md-6\">\n      <input type=\"number\" id=\"conditionSetSize\" ng-model=\"editCondition.conditionSetSize\" class=\"form-control\" ng-minlength=\"1\" required>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\" for=\"conditionSetIndex\">\n      Condition Set Index\n    </label>\n    <div class=\"col-md-6\">\n      <input type=\"number\" id=\"conditionSetIndex\" ng-model=\"editCondition.conditionSetIndex\" class=\"form-control\" ng-minlength=\"1\" required>\n    </div>\n  </div>\n\n  <div ng-if=\"statusCondition.className == \'AvailabilityCondition\'\">\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"availabilityDataId\">\n        Data Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"availabilityDataId\" ng-model=\"editCondition.dataId\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\">\n        Operator\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"UP\"> UP\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"NOT_UP\"> NOT_UP\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"DOWN\"> DOWN\n        </label>\n      </div>\n    </div>\n  </div>\n\n  <div ng-if=\"statusCondition.className == \'CompareCondition\'\">\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"compareData1Id\">\n        Data 1 Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"compareData1Id\" ng-model=\"editCondition.data1Id\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\">\n        Operator\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"LT\"> <\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"GT\"> >\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"LTE\"> <=\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"GTE\"> >=\n        </label>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"compareData2Id\">\n        Data 2 Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"compareData2Id\" ng-model=\"editCondition.data2Id\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"compareData2Multiplier\">\n        Data 2 Multiplier\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"number\" id=\"compareData2Multiplier\" ng-model=\"editCondition.data2Multiplier\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n  </div>\n\n  <div ng-if=\"statusCondition.className == \'StringCondition\'\">\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"stringDataId\">\n        Data Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"stringDataId\" ng-model=\"editCondition.dataId\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\">\n        Operator\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"EQUAL\"> EQUAL\n        </label>\n        <label class=\"radio\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"NOT_EQUAL\"> NOT_EQUAL\n        </label>\n        <label class=\"radio\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"STARTS_WITH\"> START_WITH\n        </label>\n        <label class=\"radio\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"ENDS_WITH\"> ENDS_WITH\n        </label>\n        <label class=\"radio\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"CONTAINS\"> CONTAINS\n        </label>\n        <label class=\"radio\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"MATCH\"> MATCH\n        </label>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"pattern\">\n        Pattern\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"pattern\" ng-model=\"editCondition.pattern\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"ignoredCase\">\n        Ignore Case\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"checkbox\" id=\"ignoredCase\" ng-model=\"editCondition.ignoreCase\" class=\"checkbox\" >\n      </div>\n    </div>\n  </div>\n\n  <div ng-if=\"statusCondition.className == \'ThresholdCondition\'\">\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"thresholdDataId\">\n        Data Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"thresholdDataId\" ng-model=\"editCondition.dataId\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\">\n        Operator\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"LT\"> <\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"GT\"> >\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"LTE\"> <=\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operator\" class=\"radio\" value=\"GTE\"> >=\n        </label>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"threshold\">\n        Threshold\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"number\" id=\"threshold\" ng-model=\"editCondition.threshold\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n  </div>\n\n  <div ng-if=\"statusCondition.className == \'ThresholdRangeCondition\'\">\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"thresholdRangeDataId\">\n        Data Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"thresholdRangeDataId\" ng-model=\"editCondition.dataId\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\">\n        In Range:\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"checkbox\" ng-model=\"editCondition.inRange\" class=\"checkbox\" >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\">\n        Operator Low\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operatorLow\" class=\"radio\" value=\"INCLUSIVE\"> [\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operatorLow\" class=\"radio\" value=\"EXCLUSIVE\"> (\n        </label>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"thresholdLow\">\n        Threshold Low\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"number\" id=\"thresholdLow\" ng-model=\"editCondition.thresholdLow\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\" for=\"thresholdHigh\">\n        Threshold High\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"number\" id=\"thresholdHigh\" ng-model=\"editCondition.thresholdHigh\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-4 control-label\">\n        Operator High\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operatorHigh\" class=\"radio\" value=\"INCLUSIVE\"> ]\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"editCondition.operatorHigh\" class=\"radio\" value=\"EXCLUSIVE\"> )\n        </label>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <div class=\"col-md-offset-4 col-md-6\">\n      <button ng-click=\"dc.saveCondition()\" class=\"btn btn-primary\">Save</button>\n      <a ng-if=\"statusCondition.status != \'new\'\" class=\"btn btn-danger\" ng-click=\"dc.deleteCondition(statusCondition.conditionId, statusCondition.className)\">Delete</a>\n      <button type=\"button\" ng-click=\"dc.cancelCondition()\" class=\"btn btn-default\">Cancel</button>\n    </div>\n  </div>\n</form>");
$templateCache.put("plugins/alerts/html/definitionsDampening.html","<div class=\"dataTables_wrapper no-footer\">\n  <table ng-if=\"statusDampening.status == \'view\'\" class=\"datatable table table-striped table-bordered dataTable no-footer\" role=\"grid\">\n    <thead>\n    <tr role=\"row\">\n      <th class=\"vert-align\">Type</th>\n      <th class=\"vert-align\">True Evals</th>\n      <th class=\"vert-align\">Total Evals</th>\n      <th class=\"vert-align\">Eval Period</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr class=\"gradeA odd\">\n      <td class=\"vert-align\">{{ dampening.type }}</td>\n      <td class=\"vert-align\">{{ dampening.evalTrueSetting }}</td>\n      <td class=\"vert-align\">{{ dampening.evalTotalSetting }}</td>\n      <td class=\"vert-align\">{{ dampening.evalTimeSetting }}</td>\n      <td style=\"vertical-align: middle;\">\n        <div class=\"text-right\">\n          <a ng-click=\"dc.viewDampening()\" class=\"btn btn-primary\">View</a>\n        </div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n<div ng-if=\"statusDampening.status == \'edit\' || statusDampening.status == \'new\'\" class=\"col-md-12\">\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">\n      Type\n    </label>\n    <div class=\"col-md-6\">\n      <label class=\"radio\">\n        <input type=\"radio\" ng-model=\"dampening.type\" class=\"radio\" value=\"STRICT\"> STRICT\n      </label>\n      <label class=\"radio\">\n        <input type=\"radio\" ng-model=\"dampening.type\" class=\"radio\" value=\"RELAXED_COUNT\"> RELAXED_COUNT\n      </label>\n      <label class=\"radio\">\n        <input type=\"radio\" ng-model=\"dampening.type\" class=\"radio\" value=\"RELAXED_TIME\"> RELAXED_TIME\n      </label>\n      <label class=\"radio\">\n        <input type=\"radio\" ng-model=\"dampening.type\" class=\"radio\" value=\"STRICT_TIME\"> STRICT_TIME\n      </label>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\" for=\"trueEvals\">\n      True Evals\n    </label>\n    <div class=\"col-md-6\">\n      <input type=\"number\" id=\"trueEvals\" ng-model=\"dampening.evalTrueSetting\" class=\"form-control\" ng-minlength=\"1\" required>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\" for=\"totalEvals\">\n      Total Evals\n    </label>\n    <div class=\"col-md-6\">\n      <input type=\"number\" id=\"totalEvals\" ng-model=\"dampening.evalTotalSetting\" class=\"form-control\" ng-minlength=\"1\" required>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\" for=\"evalPeriod\">\n      Eval Period\n    </label>\n    <div class=\"col-md-6\">\n      <input type=\"number\" id=\"evalPeriod\" ng-model=\"dampening.evalTimeSetting\" class=\"form-control\" ng-minlength=\"1\" required>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"col-md-offset-4 col-md-6\">\n      <button ng-click=\"dc.saveDampening()\" class=\"btn btn-primary\">Save</button>\n      <button type=\"button\" ng-click=\"dc.getDampening(trigger.id)\" class=\"btn btn-default\">Cancel</button>\n    </div>\n  </div>\n</div>\n");
$templateCache.put("plugins/alerts/html/definitionsEdit.html","<h1>{{ trigger.name }}</h1>\n<div class=\"col-md-12\">\n  <form class=\"form-horizontal\" name=\"editTriggerForm\">\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerId\">\n        Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"triggerId\" ng-model=\"trigger.id\" class=\"form-control\" ng-minlength=\"1\" required disabled>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerEnabled\">\n        Enabled\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"checkbox\" id=\"triggerEnabled\" ng-model=\"trigger.enabled\" class=\"checkbox\" >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerName\">\n        Name\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"triggerName\" ng-model=\"trigger.name\" ng-minlength=\"1\" class=\"form-control\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerDescription\">\n        Description\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"triggerDescription\" ng-model=\"trigger.description\" class=\"form-control\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\">\n        Match\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"trigger.match\" class=\"radio\" value=\"ALL\"> ALL\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"trigger.match\" class=\"radio\" value=\"ANY\"> ANY\n        </label>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerNotifiers\">\n        Notifiers\n      </label>\n      <div class=\"col-md-6\">\n        <ui-select id=\"triggerNotifiers\" multiple ng-model=\"trigger.notifiers\" theme=\"bootstrap\" ng-disabled=\"disabled\" close-on-select=\"false\">\n          <ui-select-match placeholder=\"Select notifier...\">{{$item}}</ui-select-match>\n          <ui-select-choices repeat=\"notifier in notifiers | filter:$select.search\">\n            {{ notifier }}\n          </ui-select-choices>\n        </ui-select>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\">\n        <h2 class=\"h4\">Dampening</h2>\n      </label>\n      <div class=\"col-md-6\" ng-include=\"\'plugins/alerts/html/definitionsDampening.html\'\">\n\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\">\n        <h2 class=\"h4\">Conditions</h2>\n      </label>\n      <div class=\"col-md-6\" ng-include=\"\'plugins/alerts/html/definitionsConditions.html\'\">\n\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <button class=\"btn btn-primary\" ng-click=\"dc.saveDefinition()\">Save</button>\n        <a class=\"btn btn-danger\" ng-click=\"dc.deleteDefinition(trigger.id)\">Delete</a>\n        <button type=\"button\" ng-click=\"dc.allDefinitions()\" class=\"btn btn-default\">Cancel</button>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <alert ng-repeat=\"alertMsg in msgs\" type=\"{{alertMsg.type}}\" close=\"dc.closeAlertMsg($index)\">{{alertMsg.msg}}</alert>\n      </div>\n    </div>\n  </form>\n</div>\n\n\n");
$templateCache.put("plugins/alerts/html/definitionsNew.html","<h1>New Trigger Definition</h1>\n<div class=\"col-md-12\">\n  <form class=\"form-horizontal\" name=\"newTriggerForm\" ng-submit=\"dc.saveDefinition()\">\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerId\">\n        Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"triggerId\" ng-model=\"trigger.id\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerEnabled\">\n        Enabled\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"checkbox\" id=\"triggerEnabled\" ng-model=\"trigger.enabled\" class=\"checkbox\" >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerName\">\n        Name\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"triggerName\" ng-model=\"trigger.name\" ng-minlength=\"1\" class=\"form-control\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerDescription\">\n        Description\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"triggerDescription\" ng-model=\"trigger.description\" class=\"form-control\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\">\n        Match\n      </label>\n      <div class=\"col-md-6\">\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"trigger.match\" class=\"radio\" value=\"ALL\"> ALL\n        </label>\n        <label class=\"radio-inline\">\n          <input type=\"radio\" ng-model=\"trigger.match\" class=\"radio\" value=\"ANY\"> ANY\n        </label>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"triggerNotifiers\">\n        Notifiers\n      </label>\n      <div class=\"col-md-6\">\n        <ui-select id=\"triggerNotifiers\" multiple ng-model=\"trigger.notifiers\" theme=\"bootstrap\" ng-disabled=\"disabled\" close-on-select=\"false\">\n          <ui-select-match placeholder=\"Select notifier...\">{{$item}}</ui-select-match>\n          <ui-select-choices repeat=\"notifier in notifiers | filter:$select.search\">\n            {{ notifier }}\n          </ui-select-choices>\n        </ui-select>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\">\n        <h2 class=\"h4\">Dampening</h2>\n      </label>\n      <div class=\"col-md-6\" ng-include=\"\'plugins/alerts/html/definitionsDampening.html\'\">\n\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n        <button type=\"button\" ng-click=\"dc.allDefinitions()\" class=\"btn btn-default\">Cancel</button>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <alert ng-repeat=\"alertMsg in msgs\" type=\"{{alertMsg.type}}\" close=\"dc.closeAlertMsg($index)\">{{alertMsg.msg}}</alert>\n      </div>\n    </div>\n  </form>\n</div>\n");
$templateCache.put("plugins/alerts/html/notifiers.html","<div class=\"row\">\n  <div class=\"col-md-12\" ng-controller=\"HawkularAlerts.NotifiersController as nc\">\n\n    <div ng-if=\"status == \'all\'\" ng-include=\"\'plugins/alerts/html/notifiersAll.html\'\"></div>\n\n    <div ng-if=\"status == \'new\'\" ng-include=\"\'plugins/alerts/html/notifiersNew.html\'\"></div>\n\n    <div ng-if=\"status == \'edit\'\" ng-include=\"\'plugins/alerts/html/notifiersEdit.html\'\"></div>\n\n  </div>\n</div>\n");
$templateCache.put("plugins/alerts/html/notifiersAll.html","<h1>Notifiers</h1>\n<div class=\"dataTables_wrapper no-footer\">\n  <div class=\"dataTables_header\">\n    <div class=\"text-right\">\n      <button ng-click=\"nc.newNotifier()\" type=\"button\" class=\"btn btn-primary\">New Notifier</button>\n      <button ng-click=\"nc.allNotifiers()\" type=\"button\" class=\"btn btn-info\">Refresh</button>\n    </div>\n  </div>\n  <table class=\"datatable table table-striped table-bordered dataTable no-footer\" role=\"grid\">\n    <thead>\n    <tr role=\"row\">\n      <th class=\"vert-align\">Notifier Id</th>\n      <th class=\"vert-align\">Notifier Type</th>\n      <th class=\"vert-align\">Description</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat=\"notifier in notifiers | orderBy:[\'notifierId\', \'notifierType\']:false\" ng-class-odd=\"\'gradeA odd\'\" ng-class-even=\"\'gradeA even\'\" >\n      <td class=\"vert-align\">{{ notifier.notifierId }}</td>\n      <td class=\"vert-align\">{{ notifier.notifierType }}</td>\n      <td class=\"vert-align\">{{ notifier.description }}</td>\n      <td style=\"vertical-align: middle;\">\n        <div class=\"text-right\">\n          <a ng-click=\"nc.viewNotifier(notifier.notifierId)\" class=\"btn btn-primary\">View</a>\n          <a class=\"btn btn-danger\" ng-click=\"nc.deleteNotifier(notifier.notifierId)\">Delete</a>\n        </div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n\n");
$templateCache.put("plugins/alerts/html/notifiersEdit.html","<h1>{{ notifier.notifierId }}</h1>\n<div class=\"col-md-12\">\n  <form class=\"form-horizontal\" name=\"editNotifierForm\" ng-submit=\"nc.saveNotifier()\">\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"notifierId\">\n        Notifier Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"notifierId\" ng-model=\"notifier.notifierId\" class=\"form-control\" ng-minlength=\"1\" disabled>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"notifierType\">\n        Notifier Type\n      </label>\n      <div class=\"col-md-6\">\n        <select ng-model=\"notifier.notifierType\" id=\"notifierType\">\n          <option ng-repeat=\"notifierType in notifierTypes\" ng-selected=\"notifier.notifierType == notifierType\"> {{ notifierType }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"notifierDescription\">\n        Description\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"notifierDescription\" ng-model=\"notifier.description\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n        <button type=\"button\" ng-click=\"nc.allNotifiers()\" class=\"btn btn-default\">Cancel</button>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <alert ng-repeat=\"alertMsg in msgs\" type=\"{{alertMsg.type}}\" close=\"nc.closeAlertMsg($index)\">{{alertMsg.msg}}</alert>\n      </div>\n    </div>\n  </form>\n</div>\n");
$templateCache.put("plugins/alerts/html/notifiersNew.html","<h1>New Notifier</h1>\n<div class=\"col-md-12\">\n  <form class=\"form-horizontal\" name=\"newNotifierForm\" ng-submit=\"nc.saveNotifier()\">\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"notifierId\">\n        Notifier Id\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"notifierId\" ng-model=\"notifier.notifierId\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"notifierType\">\n        Notifier Type\n      </label>\n      <div class=\"col-md-6\">\n        <select ng-model=\"notifier.notifierType\" id=\"notifierType\">\n          <option ng-repeat=\"notifierType in notifierTypes\" ng-selected=\"notifierType == \'email\'\"> {{ notifierType }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-md-2 control-label\" for=\"notifierDescription\">\n        Description\n      </label>\n      <div class=\"col-md-6\">\n        <input type=\"text\" id=\"notifierDescription\" ng-model=\"notifier.description\" class=\"form-control\" ng-minlength=\"1\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n        <button type=\"button\" ng-click=\"nc.allNotifiers()\" class=\"btn btn-default\">Cancel</button>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-6\">\n        <alert ng-repeat=\"alertMsg in msgs\" type=\"{{alertMsg.type}}\" close=\"nc.closeAlertMsg($index)\">{{alertMsg.msg}}</alert>\n      </div>\n    </div>\n  </form>\n</div>");}]); hawtioPluginLoader.addModule("hawkular-ui-components-alerts-templates");